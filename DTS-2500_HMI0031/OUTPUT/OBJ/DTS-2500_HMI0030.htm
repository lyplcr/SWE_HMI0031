<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\OUTPUT\OBJ\DTS-2500_HMI0030.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\OUTPUT\OBJ\DTS-2500_HMI0030.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060020: Last Updated: Thu Jan 21 17:04:56 2016
<BR><P>
<H3>Maximum Stack Usage =       2524 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
LoadMainPage &rArr; MainPageCtrlCoreCycle &rArr; MainPageTestExecuteCoreCycle &rArr; MainPageTestAfterDisposeExecuteCycle &rArr; MainPageAutoPrintReportProcess &rArr; MainPagePrintReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[35]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35]">ADC_IRQHandler</a><BR>
 <LI><a href="#[2c8]">GPIO_ReadInputDataBit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[280]">SDIO_DataConfig</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[5cd]">SDIO_DMACmd</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[1fe]">DMA_Init</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[1fd]">DMA_ITConfig</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[1fc]">DMA_FlowControllerConfig</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[1fb]">DMA_DeInit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[1fa]">DMA_Cmd</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[5e2]">SD_LowLevel_DMA_TxConfig</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f8]">DMA_ClearFlag</a><BR>
 <LI><a href="#[165]">SDIO_ClearFlag</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[177]">SDIO_GetResponse</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[27f]">SDIO_SendCommand</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[5d1]">SDIO_ITConfig</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[5e1]">SD_LowLevel_DMA_RxConfig</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f8]">DMA_ClearFlag</a><BR>
 <LI><a href="#[59f]">RCC_APB2PeriphResetCmd</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[5cc]">SDIO_ClockCmd</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[164]">SDIO_GetFlagStatus</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[5d4]">SDIO_SetPowerState</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[5d2]">SDIO_Init</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[25a]">RCC_AHB1PeriphClockCmd</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[59e]">RCC_APB2PeriphClockCmd</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[2c7]">GPIO_PinAFConfig</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[2c6]">GPIO_Init</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[247]">NVIC_Init</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[2ca]">GPIO_SetBits</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[2c9]">GPIO_ResetBits</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">assert_failed</a><BR>
 <LI><a href="#[41d]">ReloadTestResultArea</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[459]">MainPageReadParameter</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[35]">ADC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1d]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[37]">CAN1_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[38]">CAN1_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[39]">CAN1_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[36]">CAN1_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[63]">CAN2_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[64]">CAN2_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[65]">CAN2_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[62]">CAN2_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[72]">CRYP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[71]">DCMI_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2e]">DMA1_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2f]">DMA1_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[30]">DMA1_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[31]">DMA1_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[32]">DMA1_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[33]">DMA1_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[34]">DMA1_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[52]">DMA1_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5b]">DMA2_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5c]">DMA2_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5d]">DMA2_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5e]">DMA2_Stream3_IRQHandler</a> from bsp_sdio_sd.o(i.DMA2_Stream3_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5f]">DMA2_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[67]">DMA2_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[68]">DMA2_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[69]">DMA2_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[20]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[60]">ETH_IRQHandler</a> from bsp_lan8720.o(i.ETH_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[61]">ETH_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[29]">EXTI0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4b]">EXTI15_10_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2a]">EXTI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2b]">EXTI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2c]">EXTI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2d]">EXTI4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3a]">EXTI9_5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[27]">FLASH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[74]">FPU_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[53]">FSMC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[7b]">GUI_MainPageDrawCoordinate</a> from mainpage.o(i.GUI_MainPageDrawCoordinate) referenced from mainpage.o(i.InitMainPageCoordinateDrawLine)
 <LI><a href="#[73]">HASH_RNG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1b]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[43]">I2C1_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[42]">I2C1_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[45]">I2C2_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[44]">I2C2_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6c]">I2C3_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6b]">I2C3_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[8f]">LoadAdvanceParameterPage</a> from advanceparameter.o(i.LoadAdvanceParameterPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[8d]">LoadCalibrationParameterPage</a> from calibrationparameter.o(i.LoadCalibrationParameterPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[87]">LoadCalibrationTablePage</a> from calibrationtable.o(i.LoadCalibrationTablePage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[86]">LoadControlParameterPage</a> from controlparameter.o(i.LoadControlParameterPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[98]">LoadCurveShowPage</a> from curveshow.o(i.LoadCurveShowPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[82]">LoadDetailReportPage</a> from detailreport.o(i.LoadDetailReportPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[8c]">LoadForceCalibationPage</a> from forcecalibration.o(i.LoadForceCalibationPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[95]">LoadHardTestPage</a> from hardtest.o(i.LoadHardTestPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[96]">LoadLinkModePage</a> from linkmode.o(i.LoadLinkModePage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[7d]">LoadMainPage</a> from mainpage.o(i.LoadMainPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[90]">LoadModelSelectPage</a> from modelselect.o(i.LoadModelSelectPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[8a]">LoadOnlineParameterPage</a> from onlineparameter.o(i.LoadOnlineParameterPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[80]">LoadReportSearchPage</a> from searchreport.o(i.LoadReportSearchPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[89]">LoadSoftActivePage</a> from softactive.o(i.LoadSoftActivePage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[92]">LoadSystemBackupPage</a> from systembackup.o(i.LoadSystemBackupPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[94]">LoadSystemInfomationPage</a> from systeminfomation.o(i.LoadSystemInfomationPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[8b]">LoadSystemPasswordPage</a> from systempassword.o(i.LoadSystemPasswordPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[93]">LoadSystemRestorePage</a> from systemrestore.o(i.LoadSystemRestorePage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[85]">LoadSystemSetPage</a> from systemset.o(i.LoadSystemSetPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[7c]">LoadSystemSetupPage</a> from initial.o(i.LoadSystemSetupPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[8e]">LoadTestAfterDisposePage</a> from testafterdispose.o(i.LoadTestAfterDisposePage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[7e]">LoadTestParameterPage</a> from testparameter.o(i.LoadTestParameterPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[81]">LoadTestReportPage</a> from testreport.o(i.LoadTestReportPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[7f]">LoadTestSelectPage</a> from testselect.o(i.LoadTestSelectPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[97]">LoadTestTypeSelectPage</a> from testtypeselect.o(i.LoadTestTypeSelectPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[88]">LoadTimeDatePage</a> from timedate.o(i.LoadTimeDatePage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[91]">LoadUnitSelectPage</a> from unitselect.o(i.LoadUnitSelectPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[1c]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1a]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[66]">OTG_FS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4d]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6e]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6d]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[70]">OTG_HS_IRQHandler</a> from usbh_it.o(i.OTG_HS_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6f]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[24]">PVD_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[21]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[84]">PrestrainLoadChannelSelectPage</a> from channelselect.o(i.PrestrainLoadChannelSelectPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[83]">PrestrainLoadPasswordPage</a> from userlogin.o(i.PrestrainLoadPasswordPage) referenced from pagemanage.o(i.InitPage)
 <LI><a href="#[28]">RCC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4c]">RTC_Alarm_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[26]">RTC_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[7a]">RelinkPRM</a> from global.o(i.RelinkPRM) referenced from global.o(i.InitLssuedParameter)
 <LI><a href="#[19]">Reset_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[54]">SDIO_IRQHandler</a> from bsp_sdio_sd.o(i.SDIO_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[46]">SPI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[47]">SPI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[56]">SPI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1f]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[22]">SysTick_Handler</a> from bsp_timer.o(i.SysTick_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[76]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[25]">TAMP_STAMP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3b]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3e]">TIM1_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3d]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3c]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3f]">TIM2_IRQHandler</a> from usbh_it.o(i.TIM2_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[40]">TIM3_IRQHandler</a> from bsp_timer.o(i.TIM3_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[41]">TIM4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[55]">TIM5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[59]">TIM6_DAC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5a]">TIM7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4e]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[51]">TIM8_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[50]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4f]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[57]">UART4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[58]">UART5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[48]">USART1_IRQHandler</a> from bsp_uart.o(i.USART1_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[49]">USART2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4a]">USART3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6a]">USART6_IRQHandler</a> from bsp_uart.o(i.USART6_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[17]">USBH_Connected</a> from usbh_core.o(i.USBH_Connected) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[18]">USBH_Disconnected</a> from usbh_core.o(i.USBH_Disconnected) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[14]">USBH_MSC_ClassRequest</a> from usbh_msc_core.o(i.USBH_MSC_ClassRequest) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[15]">USBH_MSC_Handle</a> from usbh_msc_core.o(i.USBH_MSC_Handle) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[13]">USBH_MSC_InterfaceDeInit</a> from usbh_msc_core.o(i.USBH_MSC_InterfaceDeInit) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[12]">USBH_MSC_InterfaceInit</a> from usbh_msc_core.o(i.USBH_MSC_InterfaceInit) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[16]">USBH_SOF</a> from usbh_core.o(i.USBH_SOF) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[9]">USBH_USR_Configuration_DescAvailable</a> from usbh_usr.o(i.USBH_USR_Configuration_DescAvailable) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[1]">USBH_USR_DeInit</a> from usbh_usr.o(i.USBH_USR_DeInit) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[8]">USBH_USR_DeviceAddressAssigned</a> from usbh_usr.o(i.USBH_USR_DeviceAddressAssigned) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[2]">USBH_USR_DeviceAttached</a> from usbh_usr.o(i.USBH_USR_DeviceAttached) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[4]">USBH_USR_DeviceDisconnected</a> from usbh_usr.o(i.USBH_USR_DeviceDisconnected) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[10]">USBH_USR_DeviceNotSupported</a> from usbh_usr.o(i.USBH_USR_DeviceNotSupported) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[6]">USBH_USR_DeviceSpeedDetected</a> from usbh_usr.o(i.USBH_USR_DeviceSpeedDetected) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[7]">USBH_USR_Device_DescAvailable</a> from usbh_usr.o(i.USBH_USR_Device_DescAvailable) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[d]">USBH_USR_EnumerationDone</a> from usbh_usr.o(i.USBH_USR_EnumerationDone) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[0]">USBH_USR_Init</a> from usbh_usr.o(i.USBH_USR_Init) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[f]">USBH_USR_MSC_Application</a> from usbh_usr.o(i.USBH_USR_MSC_Application) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[a]">USBH_USR_Manufacturer_String</a> from usbh_usr.o(i.USBH_USR_Manufacturer_String) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[5]">USBH_USR_OverCurrentDetected</a> from usbh_usr.o(i.USBH_USR_OverCurrentDetected) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[b]">USBH_USR_Product_String</a> from usbh_usr.o(i.USBH_USR_Product_String) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[3]">USBH_USR_ResetDevice</a> from usbh_usr.o(i.USBH_USR_ResetDevice) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[c]">USBH_USR_SerialNum_String</a> from usbh_usr.o(i.USBH_USR_SerialNum_String) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[11]">USBH_USR_UnrecoveredError</a> from usbh_usr.o(i.USBH_USR_UnrecoveredError) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[e]">USBH_USR_UserInput</a> from usbh_usr.o(i.USBH_USR_UserInput) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[1e]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[23]">WWDG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[77]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[78]">compFloatData</a> from tools.o(i.compFloatData) referenced from tools.o(i.FindNotMatch_Per15_Condition)
 <LI><a href="#[79]">compFloatData</a> from mainpage.o(i.compFloatData) referenced from mainpage.o(i.GetDownYieldForce)
 <LI><a href="#[79]">compFloatData</a> from mainpage.o(i.compFloatData) referenced from mainpage.o(i.JudgeForceAvail)
 <LI><a href="#[9d]">etharp_output</a> from etharp.o(i.etharp_output) referenced from ethernetif.o(i.ethernetif_init)
 <LI><a href="#[9a]">ethernet_input</a> from etharp.o(i.ethernet_input) referenced from netconf.o(i.bsp_InitEthernet)
 <LI><a href="#[9b]">ethernetif_init</a> from ethernetif.o(i.ethernetif_init) referenced from netconf.o(i.bsp_InitEthernet)
 <LI><a href="#[99]">fputc</a> from bsp_uart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[9e]">low_level_output</a> from ethernetif.o(i.low_level_output) referenced from ethernetif.o(i.ethernetif_init)
 <LI><a href="#[75]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[9f]">tcp_recv_null</a> from tcp.o(i.tcp_recv_null) referenced from tcp.o(i.tcp_alloc)
 <LI><a href="#[9c]">udp_client_callback</a> from client.o(i.udp_client_callback) referenced from client.o(i.client_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[77]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[80f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[a0]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b5]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[810]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[811]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[812]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[813]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[814]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[19]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[815]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageSaveCoordinateCurveToSD
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeForceAvail
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindMatchSerialInfomation
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageTableTestResultRectangleFrameCoordinate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTestReportRectangleFrameCoordinate
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestDataFromSD
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrCutBackReplace
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationTableRectangleFrameCoordinate
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationRectangleFrameCoordinate
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationParameterRectangleFrameCoordinate
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTConvUDPFormate
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDPConvUSARTFormate
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_recover
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmRecoverWithDate
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_cycle
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataFromEthernet
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_AutoWritePage
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_write_prv
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_write_prm
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_step_norm_v
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_device_version_reply
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
</UL>

<P><STRONG><a name="[14a]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDetailReportRectangleFrameCoordinate
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindNotMatch_Per15_Condition
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPointForceAutoFill
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrameWithTitle
</UL>

<P><STRONG><a name="[5c4]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveStrChar
</UL>

<P><STRONG><a name="[816]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[817]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPutinChars
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[818]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[819]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageReadParameter
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
</UL>

<P><STRONG><a name="[3eb]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetAvailStrength
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetAvailForce
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckSerialRepeat
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeForceAvail
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterSerialAddOne
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCoordinateDrawLine
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2str
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPutinChars
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
</UL>

<P><STRONG><a name="[81a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5a7]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurveSaveTime
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCoordinatePoint
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCoordinatePoint
</UL>

<P><STRONG><a name="[80e]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>

<P><STRONG><a name="[13b]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckSerialRepeat
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageTableTitleField
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageShowTestTitle
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageIndicateWindowOneField
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ProgressBar
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOneFieldContent
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReportField
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurveSaveTime
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCoordinatePoint
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStrIncludeIllegalChar
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableSegmentsFieldContent
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableOneFieldContent
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableField
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterSerialAddOne
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetShortCutMenuCue
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCoordinatePoint
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCoordinateFolder
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultOneFieldTableContent
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultAvailValueOneFieldTableContent
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneFieldContent
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationIndicateWindowOneField
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationField
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterSegmentsFieldContent
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterOneFieldContent
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterField
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStrNotIncludeNumBit
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTitleFrame
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharToChar
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFillSpecifyChar
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestTypeSelectDrawOneRectangleFrame
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChannelSelectDrawOneRectangleFrame
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveStrChar
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrameWithTitle
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectWindowsDrawOneRowOneLevelMenu
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigSelectWindowsCoordinate
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrstr
</UL>

<P><STRONG><a name="[1b9]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindMatchSerialInfomation
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandlerDefaultPassword
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestDataFromSD
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneRowOneLevelMenuUnit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterWriteParameter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPullData
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuUnit
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestOneRowOneLevelMenuUnit
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestUserPassword
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestManagerPassword
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordCheckDataCycle
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterOneRowOneLevelMenuUnit
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeWriteParameter
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeCharIsEqual
</UL>

<P><STRONG><a name="[7e5]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_AutoWritePage
</UL>

<P><STRONG><a name="[13c]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestUpYieldStrength
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestUpYieldForce
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxStrength
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForceTotalElongation
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForceAllExtend
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForce
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestDownYieldStrength
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestDownYieldForce
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteForce
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteAvailValue
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteAvailStrength
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteAvailForce
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckSerialRepeat
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromTestParameterCopyToReport
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandlerDefaultPassword
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShowCurPageInfomation
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportReadParameter
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurveSaveTime
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCoordinatePoint
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportShowCurPageInfomation
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportReadParameter
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestDataFromSD
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchReadParameter
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateReadParameter
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterReadParameter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterWriteParameter
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterSerialAddOne
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterReadParameter
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPullData
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterOneLevelMenuContentProcess
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCoordinatePoint
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteStrength
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteForce
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDisPlacement
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeviation
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeform
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteCode
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordWriteParameter
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowActiveDate
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveReadParameter
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectReadParameter
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectKeyProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeReadParameter
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharToChar
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHardTestChnLimit
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestReadParameter
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreReadParameter
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_ReadInfo
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2str
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePutinChars
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeCharIsEqual
</UL>

<P><STRONG><a name="[80d]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrstr
</UL>

<P><STRONG><a name="[a5]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2str
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a7]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2str
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeBreakCalculateCycle
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteForce
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestLoadCoreCycle
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestDeformCoreCycle
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestCheckPeakCycle
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMaxForceSumElongation
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordDispalcementGetDeformIncrement
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckPutinData
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicStrength
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSpeed
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicPeak
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicForce
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDisplacement
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDeform
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeBreakCalculateCycle
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromForceGetStrength
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastFloatDataEqual
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteStrength
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteForce
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDisPlacement
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeviation
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeform
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2str
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetValueNotEqualZero
</UL>

<P><STRONG><a name="[81b]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMaxForceSumElongation
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordDispalcementGetDeformIncrement
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckPutinData
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeBreakCalculateCycle
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromForceGetStrength
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastFloatDataEqual
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetValueNotEqualZero
</UL>

<P><STRONG><a name="[2b8]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteForce
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestCheckPeakCycle
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeBreakCalculateCycle
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteStrength
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteForce
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDisPlacement
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeviation
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeform
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicStrength
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSpeed
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicPeak
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicForce
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDisplacement
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDeform
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeBreakCalculateCycle
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
</UL>

<P><STRONG><a name="[81c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[728]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ac]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[81d]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[81e]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[81f]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[a6]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a1]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[820]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[821]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[822]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[823]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[824]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>ActiveStatusHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, softactive.o(i.ActiveStatusHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ActiveStatusHandler &rArr; SetPopWindowsInfomation
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckLinkPCCycle
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAllowRunTest
</UL>

<P><STRONG><a name="[bf]"></a>Active_Window</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, bsp_ra8875.o(i.Active_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_show_image
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48_char
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill_circle
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_circle
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw32x32
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw32x16
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw24x24
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw24x12
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw20x20
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw16x8
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw16x16
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_ascin20
</UL>

<P><STRONG><a name="[db]"></a>BSP_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bsp.o(i.BSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1580<LI>Call Chain = BSP_Init &rArr; bsp_InitEthernet &rArr; bsp_InitLan8720 &rArr; ETH_MACDMA_Config &rArr; ETH_Init &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitUSB
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitTimer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSFlash
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitPrint
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitPcf8563
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLCD
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitIO
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitFont
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitCOM
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystem
</UL>

<P><STRONG><a name="[e6]"></a>BeepISR</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, bsp_io.o(i.BeepISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BeepISR &rArr; BeepOn &rArr; OutportTask &rArr; GPIO_SetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOn
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOff
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[1d]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[640]"></a>ChangeDateFormate</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tools.o(i.ChangeDateFormate))
<BR><BR>[Called By]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneRowOneLevelMenuContent
</UL>

<P><STRONG><a name="[139]"></a>CharConvTimeFormate</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, tools.o(i.CharConvTimeFormate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CharConvTimeFormate &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestDataFromSD
</UL>

<P><STRONG><a name="[13a]"></a>CharToChar</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, tools.o(i.CharToChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CharToChar
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCodeFromPrm
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPutinChars
</UL>

<P><STRONG><a name="[d6]"></a>CheckBackUpFileExist</STRONG> (Thumb, 50 bytes, Stack size 80 bytes, pcm.o(i.CheckBackUpFileExist))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = CheckBackUpFileExist &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoBackUpSystem
</UL>

<P><STRONG><a name="[13e]"></a>CheckCurrentModel</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, global.o(i.CheckCurrentModel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CheckCurrentModel &rArr; GetModelType
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModelType
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAllowRunTest
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationAllowRunCalibration
</UL>

<P><STRONG><a name="[140]"></a>CheckLinkStatus</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, linkmode.o(i.CheckLinkStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CheckLinkStatus &rArr; UDP_Check &rArr; get_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetCmd
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_Check
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_SetUntreatedDataStatus
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_IsFindUntreatedData
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBindingPort
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEthernetRxDataAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckLinkPCCycle
</UL>

<P><STRONG><a name="[147]"></a>CheckOfflineCycle</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, global.o(i.CheckOfflineCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1676<LI>Call Chain = CheckOfflineCycle &rArr; RelinkPRM &rArr; link_cycle &rArr; LinkCmdSendBody &rArr; cmd_write_prm &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeepLiveCount
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeepLiveCount
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelinkPRM
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCtrlCoreCycle
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCtrlCoreCycle
</UL>

<P><STRONG><a name="[14c]"></a>CheckPrmWarning</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui.o(i.CheckPrmWarning))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckPrmWarning
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrmWarnStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckWarn
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCheckWarn
</UL>

<P><STRONG><a name="[153]"></a>Chk_Busy</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_ra8875.o(i.Chk_Busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Chk_Busy &rArr; LCD_StatusRead &rArr; ReadCOMM &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_StatusRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HL_DrawHLine
</UL>

<P><STRONG><a name="[266]"></a>ClearExceptionFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui.o(i.ClearExceptionFlag))
<BR><BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckSerialRepeat
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangePageInit
</UL>

<P><STRONG><a name="[157]"></a>ClearShortCutMenuArea</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui.o(i.ClearShortCutMenuArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ClearShortCutMenuArea &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetShortCutMenuCue
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
</UL>

<P><STRONG><a name="[15b]"></a>Clear_Active_Window</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_ra8875.o(i.Clear_Active_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Clear_Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
</UL>

<P><STRONG><a name="[19b]"></a>ClrLampBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_io.o(i.ClrLampBit))
<BR><BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCommucationLamp
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStatusLampTask
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommucationLampTask
</UL>

<P><STRONG><a name="[e9]"></a>ClrOutportBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_io.o(i.ClrOutportBit))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOff
</UL>

<P><STRONG><a name="[17c]"></a>CmdRxContentProcess</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui.o(i.CmdRxContentProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1668<LI>Call Chain = CmdRxContentProcess &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCM_CmdSendCycle
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsContent
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
</UL>

<P><STRONG><a name="[195]"></a>ComGet</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, bsp_uart.o(i.ComGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1308<LI>Call Chain = ComGet &rArr; UartGetChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartGetChar
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComToUart
</UL>
<BR>[Called By]<UL><LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetPackageCycle
</UL>

<P><STRONG><a name="[198]"></a>ComSend</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, bsp_uart.o(i.ComSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 1316<LI>Call Chain = ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPutChar
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComToUart
</UL>
<BR>[Called By]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendPackage
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPrintChar
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>

<P><STRONG><a name="[196]"></a>ComToUart</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, bsp_uart.o(i.ComToUart))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComSend
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComGet
</UL>

<P><STRONG><a name="[19a]"></a>CommucationLampTask</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, global.o(i.CommucationLampTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CommucationLampTask &rArr; LampTask &rArr; SetLampVal &rArr; GPIO_SetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLampBit
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LampTask
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrLampBit
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
</UL>

<P><STRONG><a name="[150]"></a>CompareStrBuffIsEqualWithChar</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tools.o(i.CompareStrBuffIsEqualWithChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CompareStrBuffIsEqualWithChar
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSystemParameterIsNull
</UL>

<P><STRONG><a name="[1d2]"></a>ContrastFloatDataEqual</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, tools.o(i.ContrastFloatDataEqual))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ContrastFloatDataEqual &rArr; __hardfp_fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindNotMatch_Per15_Condition
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
</UL>

<P><STRONG><a name="[1ed]"></a>CoordinateDrawLineBodyCycle</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, global.o(i.CoordinateDrawLineBodyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = CoordinateDrawLineBodyCycle &rArr; CoordinateRedrawLine &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadCoordinate
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoordinateRedrawLine
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoordinateDrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineBodyCycle
</UL>

<P><STRONG><a name="[1ef]"></a>CoordinateRedrawLine</STRONG> (Thumb, 314 bytes, Stack size 56 bytes, global.o(i.CoordinateRedrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = CoordinateRedrawLine &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_line
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoordinateDrawLineBodyCycle
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CurveShow
</UL>

<P><STRONG><a name="[5e]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.DMA2_Stream3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = DMA2_Stream3_IRQHandler &rArr; SD_ProcessDMAIRQ &rArr; DMA_ClearFlag &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1f8]"></a>DMA_ClearFlag</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, stm32f4xx_dma.o(i.DMA_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = DMA_ClearFlag &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[1fa]"></a>DMA_Cmd</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = DMA_Cmd &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[1fb]"></a>DMA_DeInit</STRONG> (Thumb, 462 bytes, Stack size 8 bytes, stm32f4xx_dma.o(i.DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = DMA_DeInit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[1fc]"></a>DMA_FlowControllerConfig</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, stm32f4xx_dma.o(i.DMA_FlowControllerConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = DMA_FlowControllerConfig &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[1fd]"></a>DMA_ITConfig</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, stm32f4xx_dma.o(i.DMA_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = DMA_ITConfig &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[1fe]"></a>DMA_Init</STRONG> (Thumb, 658 bytes, Stack size 16 bytes, stm32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = DMA_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[20]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[21d]"></a>DeleteAllReport</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, testreport.o(i.DeleteAllReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 1844<LI>Call Chain = DeleteAllReport &rArr; DeletePageReport &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportReadParameter
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllReportShortcutCycleTask
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartOneReportSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDelete
</UL>

<P><STRONG><a name="[411]"></a>DeleteArrayWhichOnePositionElement</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, tools.o(i.DeleteArrayWhichOnePositionElement))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DeleteArrayWhichOnePositionElement
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
</UL>

<P><STRONG><a name="[223]"></a>DeleteCoordinateFolder</STRONG> (Thumb, 284 bytes, Stack size 152 bytes, report.o(i.DeleteCoordinateFolder))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = DeleteCoordinateFolder &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCurrentReport
</UL>

<P><STRONG><a name="[242]"></a>Display_ON</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_ra8875.o(i.Display_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Display_ON &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
</UL>

<P><STRONG><a name="[23f]"></a>DrawCircleMark</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, global.o(i.DrawCircleMark))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DrawCircleMark &rArr; lcd_fill_circle &rArr; LCD_HL_DrawHLine &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill_circle
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShowCircleMarkInfomation
</UL>

<P><STRONG><a name="[22c]"></a>DrawProcessBody</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, global.o(i.DrawProcessBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DrawProcessBody &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTestSaveProgressBar
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelinkPRM
</UL>

<P><STRONG><a name="[245]"></a>Draw_square_fill</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_ra8875.o(i.Draw_square_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Draw_square_fill &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HL_DrawHLine
</UL>

<P><STRONG><a name="[246]"></a>ETHERNET_NVICConfiguration</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_lan8720.o(i.ETHERNET_NVICConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ETHERNET_NVICConfiguration &rArr; NVIC_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLan8720
</UL>

<P><STRONG><a name="[248]"></a>ETH_DMAClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4x7_eth.o(i.ETH_DMAClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = ETH_DMAClearITPendingBit &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_IRQHandler
</UL>

<P><STRONG><a name="[249]"></a>ETH_DMAITConfig</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4x7_eth.o(i.ETH_DMAITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = ETH_DMAITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[24a]"></a>ETH_DMAReceptionCmd</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4x7_eth.o(i.ETH_DMAReceptionCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = ETH_DMAReceptionCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
</UL>

<P><STRONG><a name="[7ce]"></a>ETH_DMARxDescChainInit</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f4x7_eth.o(i.ETH_DMARxDescChainInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ETH_DMARxDescChainInit
</UL>
<BR>[Called By]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[24b]"></a>ETH_DMARxDescReceiveITConfig</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32f4x7_eth.o(i.ETH_DMARxDescReceiveITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = ETH_DMARxDescReceiveITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[24c]"></a>ETH_DMATransmissionCmd</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4x7_eth.o(i.ETH_DMATransmissionCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = ETH_DMATransmissionCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
</UL>

<P><STRONG><a name="[7cd]"></a>ETH_DMATxDescChainInit</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f4x7_eth.o(i.ETH_DMATxDescChainInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ETH_DMATxDescChainInit
</UL>
<BR>[Called By]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[24d]"></a>ETH_DMATxDescChecksumInsertionConfig</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32f4x7_eth.o(i.ETH_DMATxDescChecksumInsertionConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = ETH_DMATxDescChecksumInsertionConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[24e]"></a>ETH_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4x7_eth.o(i.ETH_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = ETH_DeInit &rArr; RCC_AHB1PeriphResetCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[261]"></a>ETH_FlushTransmitFIFO</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4x7_eth.o(i.ETH_FlushTransmitFIFO))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
</UL>

<P><STRONG><a name="[7d0]"></a>ETH_GetCurrentTxBuffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ethernetif.o(i.ETH_GetCurrentTxBuffer))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
</UL>

<P><STRONG><a name="[251]"></a>ETH_GetDMARxDescFrameLength</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4x7_eth.o(i.ETH_GetDMARxDescFrameLength))
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GetRxPktSize
</UL>

<P><STRONG><a name="[250]"></a>ETH_GetRxPktSize</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, stm32f4x7_eth.o(i.ETH_GetRxPktSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ETH_GetRxPktSize
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GetDMARxDescFrameLength
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_IRQHandler
</UL>

<P><STRONG><a name="[25c]"></a>ETH_GetSoftwareResetStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4x7_eth.o(i.ETH_GetSoftwareResetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[60]"></a>ETH_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsp_lan8720.o(i.ETH_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = ETH_IRQHandler &rArr; ETH_DMAClearITPendingBit &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Pkt_Handle
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GetRxPktSize
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMAClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[253]"></a>ETH_Init</STRONG> (Thumb, 2114 bytes, Stack size 48 bytes, stm32f4x7_eth.o(i.ETH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1308<LI>Call Chain = ETH_Init &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_ReadPHYRegister
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_WritePHYRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[258]"></a>ETH_MACAddressConfig</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f4x7_eth.o(i.ETH_MACAddressConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = ETH_MACAddressConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MAC_Address
</UL>

<P><STRONG><a name="[259]"></a>ETH_MACDMA_Config</STRONG> (Thumb, 136 bytes, Stack size 200 bytes, bsp_lan8720.o(i.ETH_MACDMA_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 1508<LI>Call Chain = ETH_MACDMA_Config &rArr; ETH_Init &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_StructInit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_SoftwareReset
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GetSoftwareResetStatus
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DeInit
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMAITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLan8720
</UL>

<P><STRONG><a name="[25e]"></a>ETH_MACReceptionCmd</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4x7_eth.o(i.ETH_MACReceptionCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = ETH_MACReceptionCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
</UL>

<P><STRONG><a name="[25f]"></a>ETH_MACTransmissionCmd</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4x7_eth.o(i.ETH_MACTransmissionCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = ETH_MACTransmissionCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
</UL>

<P><STRONG><a name="[255]"></a>ETH_ReadPHYRegister</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, stm32f4x7_eth.o(i.ETH_ReadPHYRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEthLinkStatus
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link_tmr
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
</UL>

<P><STRONG><a name="[7cf]"></a>ETH_RxPkt_ChainMode</STRONG> (Thumb, 148 bytes, Stack size 20 bytes, ethernetif.o(i.ETH_RxPkt_ChainMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ETH_RxPkt_ChainMode
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
</UL>

<P><STRONG><a name="[25b]"></a>ETH_SoftwareReset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4x7_eth.o(i.ETH_SoftwareReset))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[260]"></a>ETH_Start</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4x7_eth.o(i.ETH_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = ETH_Start &rArr; ETH_MACTransmissionCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACTransmissionCmd
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACReceptionCmd
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_FlushTransmitFIFO
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMATransmissionCmd
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMAReceptionCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[25d]"></a>ETH_StructInit</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, stm32f4x7_eth.o(i.ETH_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[7d1]"></a>ETH_TxPkt_ChainMode</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, ethernetif.o(i.ETH_TxPkt_ChainMode))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
</UL>

<P><STRONG><a name="[256]"></a>ETH_WritePHYRegister</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, stm32f4x7_eth.o(i.ETH_WritePHYRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = ETH_WritePHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
</UL>

<P><STRONG><a name="[262]"></a>EraseSystemParameterAskHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, initial.o(i.EraseSystemParameterAskHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = EraseSystemParameterAskHandler &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSelectPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopWindowsSelectResult
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameter
</UL>

<P><STRONG><a name="[269]"></a>ExecuteTask</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, global.o(i.ExecuteTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1684<LI>Call Chain = ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendClosePumpCmd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReadWriteOutput
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOpenPumpCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
</UL>

<P><STRONG><a name="[275]"></a>FSMC_LCD_Init</STRONG> (Thumb, 112 bytes, Stack size 120 bytes, bsp_lcd.o(i.FSMC_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1372<LI>Call Chain = FSMC_LCD_Init &rArr; FSMC_NORSRAMCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLCD
</UL>

<P><STRONG><a name="[277]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, stm32f4xx_fsmc.o(i.FSMC_NORSRAMCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = FSMC_NORSRAMCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
</UL>

<P><STRONG><a name="[276]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 832 bytes, Stack size 8 bytes, stm32f4xx_fsmc.o(i.FSMC_NORSRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = FSMC_NORSRAMInit &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
</UL>

<P><STRONG><a name="[410]"></a>FindArrayElementIsOneIndex</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tools.o(i.FindArrayElementIsOneIndex))
<BR><BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
</UL>

<P><STRONG><a name="[40c]"></a>FindArrayValNotZeroCount</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tools.o(i.FindArrayValNotZeroCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FindArrayValNotZeroCount
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeForceAvail
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
</UL>

<P><STRONG><a name="[27a]"></a>FindNotMatch_10_To_90_Condition</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, tools.o(i.FindNotMatch_10_To_90_Condition))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FindNotMatch_10_To_90_Condition
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverage
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
</UL>

<P><STRONG><a name="[27c]"></a>FindNotMatch_Per15_Condition</STRONG> (Thumb, 400 bytes, Stack size 120 bytes, tools.o(i.FindNotMatch_Per15_Condition))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = FindNotMatch_Per15_Condition &rArr; ContrastFloatDataEqual &rArr; __hardfp_fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SortBubble
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverage
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastFloatDataEqual
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
</UL>

<P><STRONG><a name="[5ef]"></a>FindPutcharIntIllegar</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, tools.o(i.FindPutcharIntIllegar))
<BR><BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePutinChars
</UL>

<P><STRONG><a name="[282]"></a>FindStrIncludeIllegalChar</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, tools.o(i.FindStrIncludeIllegalChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FindStrIncludeIllegalChar
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckSerialRepeat
</UL>

<P><STRONG><a name="[283]"></a>FindStrNotIncludeNumBit</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, tools.o(i.FindStrNotIncludeNumBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FindStrNotIncludeNumBit
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveReadParameter
</UL>

<P><STRONG><a name="[2b6]"></a>ForceCalibrationGetDeviation</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, forcecalibration.o(i.ForceCalibrationGetDeviation))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
</UL>

<P><STRONG><a name="[2c0]"></a>FromForceGetStrength</STRONG> (Thumb, 1316 bytes, Stack size 144 bytes, global.o(i.FromForceGetStrength))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = FromForceGetStrength &rArr; GetSampleSpecificationArea &rArr; str2float &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCircularArea
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeCharIsEqual
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSampleSpecificationArea
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestLoadCoreCycle
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestDeformCoreCycle
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentStrength
</UL>

<P><STRONG><a name="[2c6]"></a>GPIO_Init</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartHardInit
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSFlash
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_mastar
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_74HC165
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLamp
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitExt_74HC595
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeep
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLan8720
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_gpio_init
</UL>

<P><STRONG><a name="[2c7]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = GPIO_PinAFConfig &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartHardInit
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSFlash
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLan8720
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_gpio_init
</UL>

<P><STRONG><a name="[2c8]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, stm32f4xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Detect
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_ack
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_recv_byte
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>

<P><STRONG><a name="[2c9]"></a>GPIO_ResetBits</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = GPIO_ResetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLampVal
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_ack
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sendbyte
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_notack
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_ack
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_recv_byte
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2_stop
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2_start
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutportTask
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LampTask
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_74HC165
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitExt_74HC595
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeep
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLan8720
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_hard_reset
</UL>

<P><STRONG><a name="[2ca]"></a>GPIO_SetBits</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = GPIO_SetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLampVal
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_ack
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sendbyte
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_notack
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_ack
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_recv_byte
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2_stop
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2_start
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutportTask
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LampTask
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_74HC165
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLamp
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLan8720
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_hard_reset
</UL>

<P><STRONG><a name="[1d7]"></a>GUI_ClearShortcutMenu</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui.o(i.GUI_ClearShortcutMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GUI_ClearShortcutMenu &rArr; ClearShortCutMenuArea &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearShortCutMenuArea
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectKeyProcess
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsWithoutOperate
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCueInfomation
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessAskInfomation
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectWindows
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PutinReady
</UL>

<P><STRONG><a name="[d7]"></a>GUI_DispStr16At</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, gui.o(i.GUI_DispStr16At))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font16
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageStatusBarField
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ProgressBar
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoBackUpSystem
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearchCue
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuCue
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicTestStatus
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSystemTime
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicCommunicationStatus
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicCode
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCoordinate
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationStatusBarField
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicCalibrationStatus
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTitleFrame
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowOneRowTwoLevelMenu
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPutinChars
</UL>

<P><STRONG><a name="[2f9]"></a>GUI_DispStr20At</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, gui.o(i.GUI_DispStr20At))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font20
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>

<P><STRONG><a name="[15e]"></a>GUI_DispStr24At</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, gui.o(i.GUI_DispStr24At))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font24
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageTableTitleField
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageKLTestDrawOneRowOneLevelMenu
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageIndicateWindowOneField
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportTimeFieldContent
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportStandardFieldContent
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportSerialFieldContent
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOneFieldContent
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportAvailStrengthFieldContent
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReportOtherField
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReportField
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShowCurPageInfomation
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportShowCurPageInfomation
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestReportOneRowOneLevelMenuContent
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReportField
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneRowOneLevelMenuContent
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneRowOneLevelMenuArrow
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearchDrawOneRowOneLevelMenu
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_ReportSearchOneRowOneLevelMenuArrow
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterDrawOneRowOneLevelMenu
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterCutOffRuleSingleOneLevelMenu
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TimeDateDataOneRowOneLevelMenuContent
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateDrawOneRowOneLevelMenu
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateCutOffRuleSingleOneLevelMenu
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableSegmentsFieldContent
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableOneFieldContent
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableSegmentsField
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableField
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneRowOneLevelMenuUnit
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneRowOneLevelMenuContent
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneRowOneLevelMenuArrow
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameterDrawOneRowOneLevelMenu
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_ControlParameterOneRowOneLevelMenuArrow
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuUnit
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuContent
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuArrow
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameterDrawOneRowOneLevelMenu
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_TestParameterOneRowOneLevelMenuArrow
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetShortCutMenuCue
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultOneFieldTableContent
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultAvailValueOneFieldTableContent
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestResultOneRowOneLevelMenuContent
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestOneRowOneLevelMenuUnit
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneFieldContent
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationIndicateWindowOneField
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationField
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterSegmentsFieldContent
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterOneFieldContent
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterSegmentsField
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterField
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemPasswordOneRowOneLevelMenuContent
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPasswordDrawOneRowOneLevelMenu
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowSystemDate
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowActiveDate
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SoftActiveOneRowOneLevelMenuContent
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveProductSerialCue
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveDrawOneRowOneLevelMenu
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_OnlineParameterDataOneRowOneLevelMenuContent
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UnitSelectOneRowOneLevelMenuContent
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UnitSelectOneRowOneLevelMenuArrow
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelectDrawOneRowOneLevelMenu
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_UnitSelectOneRowOneLevelMenuArrow
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterOneRowOneLevelMenuUnit
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterDataOneRowOneLevelMenuContent
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameterDrawOneRowOneLevelMenu
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestAfterDisposeOneRowOneLevelMenuContent
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDisposeDrawOneRowOneLevelMenu
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDisposeCue
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTitleFrame
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_HardTestLimitOneRowOneLevelMenuContent
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_HardTestChannelOneRowOneLevelMenuContent
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestDrawLimitOneRowOneLevelMenu
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestDrawChannelUpOneRowOneLevelMenu
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestDrawChannelLeftOneRowOneLevelMenu
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemInfomationOneRowOneLevelMenuContent
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomationDrawOneRowOneLevelMenu
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneRowOneLevelMenuContent
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneRowOneLevelMenuArrow
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestoreDrawOneRowOneLevelMenu
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_SystemRestoreOneRowOneLevelMenuArrow
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemBackupOneRowOneLevelMenuContent
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackupDrawOneRowOneLevelMenu
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_PasswordDataOneRowOneLevelMenuContent
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PasswordDrawOneRowOneLevelMenu
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPopWindowsContent
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowOneRowTwoLevelMenu
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectWindowsDrawOneRowOneLevelMenu
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPutinChars
</UL>

<P><STRONG><a name="[2fc]"></a>GUI_DispStr24Ht</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, gui.o(i.GUI_DispStr24Ht))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = GUI_DispStr24Ht &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font24
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrameWithTitle
</UL>

<P><STRONG><a name="[2cf]"></a>GUI_DispStr32At</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, gui.o(i.GUI_DispStr32At))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font32
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageShowTestTitle
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelectDrawOneRowOneLevelMenu
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemSetDrawOneRectangleFrame
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ModelSelectDrawOneRectangleFrame
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdvanceParameterDrawOneRectangleFrame
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestTypeSelectDrawOneRectangleFrame
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChannelSelectDrawOneRectangleFrame
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowTypewrite
</UL>

<P><STRONG><a name="[2fe]"></a>GUI_DispStr32Ht</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, gui.o(i.GUI_DispStr32Ht))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font32
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrameWithTitle
</UL>

<P><STRONG><a name="[2f1]"></a>GUI_DrawCoordinate</STRONG> (Thumb, 562 bytes, Stack size 88 bytes, global.o(i.GUI_DrawCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_DrawCoordinate &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_dashed_frame
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntBit
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawCoordinate
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CurveShowDrawCoordinate
</UL>

<P><STRONG><a name="[2cc]"></a>GUI_DrawGeneralTitleRectangleFrame</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, gui.o(i.GUI_DrawGeneralTitleRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 820<LI>Call Chain = GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrameWithTitle
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReport
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReport
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearch
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelect
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameter
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDate
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTable
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameter
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemSet
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameter
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameter
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPassword
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActive
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelect
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ModelSelect
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameter
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdvanceParameter
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDispose
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LinkMode
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTest
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomation
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestore
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackup
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CurveShow
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestTypeSelect
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChannelSelect
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Password
</UL>

<P><STRONG><a name="[2d5]"></a>GUI_DrawRectangleFrame</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui.o(i.GUI_DrawRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageKLTestDrawOneRectangleFrame
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawStatusBarRectangleFrame
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawOneRowRectangleFrame
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawOneIndicateWindowsRectangleFrame
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ProgressBar
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReportDrawOneRowTitleRectangleFrame
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReportDrawOneRowTitleRectangleFrame
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReportDrawOneRectangleFrame
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearchDrawOneRectangleFrame
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterDrawOneRectangleFrame
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateDrawOneRectangleFrame
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableDrawOneRowTitleRectangleFrame
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableDrawOneRowSegmentRectangleFrame
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameterDrawOneRectangleFrame
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameterDrawOneRectangleFrame
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawStatusBarRectangleFrame
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawOneRowTitleRectangleFrame
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawOneIndicateWindowsRectangleFrame
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterDrawOneRowTitleRectangleFrame
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterDrawOneRowSegmentRectangleFrame
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPasswordDrawOneRectangleFrame
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveDrawOneRectangleFrame
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelectDrawOneRectangleFrame
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameterDrawOneRectangleFrame
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDisposeDrawOneRectangleFrame
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTitleFrame
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestDrawOneLimitRectangleFrame
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestDrawOneChannelRectangleFrame
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomationDrawOneRectangleFrame
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestoreDrawOneRectangleFrame
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackupDrawOneRectangleFrame
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PasswordDrawOneRectangleFrame
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTwoLevelMenu
</UL>

<P><STRONG><a name="[301]"></a>GUI_DrawRectangleFrameWithTitle</STRONG> (Thumb, 518 bytes, Stack size 56 bytes, gui.o(i.GUI_DrawRectangleFrameWithTitle))
<BR><BR>[Stack]<UL><LI>Max Depth = 780<LI>Call Chain = GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_rect
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr32Ht
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24Ht
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectWindows
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PopWindows
</UL>

<P><STRONG><a name="[302]"></a>GUI_DrawTestSaveProgressBar</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, global.o(i.GUI_DrawTestSaveProgressBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = GUI_DrawTestSaveProgressBar &rArr; GUI_ProgressBar &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ProgressBar
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProcessBody
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
</UL>
<BR>[Called By]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteWriteSDProcess
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
</UL>

<P><STRONG><a name="[304]"></a>GUI_DrawTitleFrame</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, gui.o(i.GUI_DrawTitleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_DrawTitleFrame &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestLimitFrame
</UL>

<P><STRONG><a name="[318]"></a>GUI_HardTestLimitFrame</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, hardtest.o(i.GUI_HardTestLimitFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = GUI_HardTestLimitFrame &rArr; GUI_DrawTitleFrame &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTitleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTest
</UL>

<P><STRONG><a name="[22b]"></a>GUI_ProgressBar</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, global.o(i.GUI_ProgressBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = GUI_ProgressBar &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTestSaveProgressBar
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelinkPRM
</UL>

<P><STRONG><a name="[35e]"></a>GUI_ShowActiveDate</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, gui.o(i.GUI_ShowActiveDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = GUI_ShowActiveDate &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_date_get
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveTimeCue
</UL>

<P><STRONG><a name="[360]"></a>GUI_ShowSystemDate</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, gui.o(i.GUI_ShowSystemDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = GUI_ShowSystemDate &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveTimeCue
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestoreTimeCue
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackupTimeCue
</UL>

<P><STRONG><a name="[3b8]"></a>Geometric_Coordinate</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, bsp_ra8875.o(i.Geometric_Coordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HL_DrawHLine
</UL>

<P><STRONG><a name="[3b9]"></a>GetAMonthDays</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, tools.o(i.GetAMonthDays))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetAMonthDays &rArr; GetTwoMonthDays
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTwoMonthDays
</UL>
<BR>[Called By]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateCheckDataCycle
</UL>

<P><STRONG><a name="[553]"></a>GetAdjoinTwoPointDifference</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, global.o(i.GetAdjoinTwoPointDifference))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
</UL>

<P><STRONG><a name="[40d]"></a>GetArrayEqualZeroIndex</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, tools.o(i.GetArrayEqualZeroIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetArrayEqualZeroIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeForceAvail
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
</UL>

<P><STRONG><a name="[54d]"></a>GetAttenuationRate</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, global.o(i.GetAttenuationRate))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
</UL>

<P><STRONG><a name="[27b]"></a>GetAverage</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, tools.o(i.GetAverage))
<BR><BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeForceAvail
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindNotMatch_Per15_Condition
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindNotMatch_10_To_90_Condition
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
</UL>

<P><STRONG><a name="[f6]"></a>GetBX_SmplUnit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, global.o(i.GetBX_SmplUnit))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageInit
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableInit
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterInit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibationInit
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterInit
</UL>

<P><STRONG><a name="[551]"></a>GetBreakDownPoint</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, global.o(i.GetBreakDownPoint))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
</UL>

<P><STRONG><a name="[2ae]"></a>GetCalibrationPoint</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, calibrationparameter.o(i.GetCalibrationPoint))
<BR><BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationReadParameter
</UL>

<P><STRONG><a name="[f7]"></a>GetChannelSelectChannel</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, channelselect.o(i.GetChannelSelectChannel))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableInit
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterInit
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetInit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibationInit
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterInit
</UL>

<P><STRONG><a name="[fe]"></a>GetChannelSelectNextPage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, channelselect.o(i.GetChannelSelectNextPage))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
</UL>

<P><STRONG><a name="[2c3]"></a>GetCircularArea</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tools.o(i.GetCircularArea))
<BR><BR>[Called By]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterWriteParameter
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterReadParameter
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterGetConvertArea
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromForceGetStrength
</UL>

<P><STRONG><a name="[202]"></a>GetCodeFromPrm</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, hardtest.o(i.GetCodeFromPrm))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GetCodeFromPrm &rArr; numtochar &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSammpleCode
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharToChar
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHardTestChannelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInteractionWithPRM
</UL>

<P><STRONG><a name="[2f0]"></a>GetCoordinateDataAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, global.o(i.GetCoordinateDataAddr))
<BR><BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineRedrawJudgeCondition
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMainPageCoordinateDrawLine
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawCoordinate
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCurveShowCoordinateDrawLine
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CurveShowDrawCoordinate
</UL>

<P><STRONG><a name="[272]"></a>GetCoordinatePointAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, global.o(i.GetCoordinatePointAddr))
<BR><BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageSaveCoordinateCurveToSD
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportCurrentReport
</UL>

<P><STRONG><a name="[268]"></a>GetCoreStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, global.o(i.GetCoreStatus))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangePageInit
</UL>

<P><STRONG><a name="[23e]"></a>GetCurPageCurTestReportIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, testreport.o(i.GetCurPageCurTestReportIndex))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShowCircleMarkInfomation
</UL>

<P><STRONG><a name="[234]"></a>GetCurPageTestReportNum</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, testreport.o(i.GetCurPageTestReportNum))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShowCircleMarkInfomation
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportInit
</UL>

<P><STRONG><a name="[529]"></a>GetCurveShowStartValue</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, global.o(i.GetCurveShowStartValue))
<BR><BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineJudgeCondition
</UL>

<P><STRONG><a name="[60c]"></a>GetCurveStayTime</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, testafterdispose.o(i.GetCurveStayTime))
<BR><BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentPeak
</UL>

<P><STRONG><a name="[65c]"></a>GetDeviceID</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_uid.o(i.GetDeviceID))
<BR><BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveReadParameter
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
</UL>

<P><STRONG><a name="[524]"></a>GetDisplacementOrDeformShow</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, global.o(i.GetDisplacementOrDeformShow))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetDeform
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageConfig
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
</UL>

<P><STRONG><a name="[7de]"></a>GetDotNum</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, report.o(i.GetDotNum))
<BR><BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_date
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_sn
</UL>

<P><STRONG><a name="[2ef]"></a>GetDrawLineAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, global.o(i.GetDrawLineAddr))
<BR><BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageSaveCoordinateCurveToSD
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineBodyCycle
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMainPageCoordinateDrawLine
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDownYieldForce
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCurveShowCoordinateDrawLine
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CurveShow
</UL>

<P><STRONG><a name="[416]"></a>GetDrawLineNowTimePoint</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, global.o(i.GetDrawLineNowTimePoint))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestLoadCoreCycle
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestCheckPeakCycle
</UL>

<P><STRONG><a name="[417]"></a>GetDrawLineSomeTimePointForce</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, global.o(i.GetDrawLineSomeTimePointForce))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestLoadCoreCycle
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestCheckPeakCycle
</UL>

<P><STRONG><a name="[3be]"></a>GetEthLinkStatus</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, netconf.o(i.GetEthLinkStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = GetEthLinkStatus &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_ReadPHYRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentNETStatus
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkDisConnectProcess
</UL>

<P><STRONG><a name="[143]"></a>GetEthernetRxDataAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, client.o(i.GetEthernetRxDataAddr))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLinkStatus
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetPackageCycle
</UL>

<P><STRONG><a name="[6bb]"></a>GetEthernetTxDataAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, client.o(i.GetEthernetTxDataAddr))
<BR><BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
</UL>

<P><STRONG><a name="[587]"></a>GetExceptionFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui.o(i.GetExceptionFlag))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
</UL>

<P><STRONG><a name="[b8]"></a>GetExtensometerGauge</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, global.o(i.GetExtensometerGauge))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordDispalcementGetDeformIncrement
</UL>

<P><STRONG><a name="[f4]"></a>GetFH_SmplUnit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, global.o(i.GetFH_SmplUnit))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageInit
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableInit
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterInit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibationInit
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterInit
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[412]"></a>GetFloatSmallValue</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tools.o(i.GetFloatSmallValue))
<BR><BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
</UL>

<P><STRONG><a name="[300]"></a>GetIntBit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, tools.o(i.GetIntBit))
<BR><BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCoordinate
</UL>

<P><STRONG><a name="[630]"></a>GetInterfaceCalibrationStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
</UL>

<P><STRONG><a name="[62e]"></a>GetInterfaceElementBXSpeed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceElementBXSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[631]"></a>GetInterfaceElementCode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, global.o(i.GetInterfaceElementCode))
<BR><BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
</UL>

<P><STRONG><a name="[62b]"></a>GetInterfaceElementDeform</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceElementDeform))
<BR><BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[62a]"></a>GetInterfaceElementDisPlacement</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceElementDisPlacement))
<BR><BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[633]"></a>GetInterfaceElementEthernetConnectStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceElementEthernetConnectStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
</UL>

<P><STRONG><a name="[62c]"></a>GetInterfaceElementFHSpeed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceElementFHSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[629]"></a>GetInterfaceElementForce</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceElementForce))
<BR><BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[639]"></a>GetInterfaceElementPeak</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceElementPeak))
<BR><BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[638]"></a>GetInterfaceElementStrength</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceElementStrength))
<BR><BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[632]"></a>GetInterfaceElementUSBStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceElementUSBStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
</UL>

<P><STRONG><a name="[62d]"></a>GetInterfaceElementWYSpeed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceElementWYSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[62f]"></a>GetInterfaceLinkStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceLinkStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
</UL>

<P><STRONG><a name="[63a]"></a>GetInterfaceTestStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.GetInterfaceTestStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
</UL>

<P><STRONG><a name="[54c]"></a>GetJudgeBreakType</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, controlparameter.o(i.GetJudgeBreakType))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
</UL>

<P><STRONG><a name="[148]"></a>GetKeepLiveCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cmd.o(i.GetKeepLiveCount))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOfflineCycle
</UL>

<P><STRONG><a name="[21f]"></a>GetKey</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bsp_io.o(i.GetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetKey &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllReport
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportAllReport
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcessCycle
</UL>

<P><STRONG><a name="[c5]"></a>GetKeyVal</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, typewrite.o(i.GetKeyVal))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportKeyProcess
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportKeyProcess
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressNum
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKeyProcess
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableMoveIndexProcess
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableKeyProcess
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetKeyProcess
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterTwoLevelMenuKeyProcess
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterMoveIndexProcess
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectKeyProcess
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectKeyProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterKeyProcess
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkModeKeyProcess
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestKeyProcess
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationKeyProcess
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowKeyProcess
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectKeyProcess
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectKeyProcess
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TwoLevelMenuKeyProcess
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCueInfomation
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessAskInfomation
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteTask
</UL>

<P><STRONG><a name="[590]"></a>GetLinkProcess</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cmd.o(i.GetLinkProcess))
<BR><BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelinkPRM
</UL>

<P><STRONG><a name="[28a]"></a>GetLinkStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cmd.o(i.GetLinkStatus))
<BR><BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckLinkPCCycle
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAllowRunTest
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LssuedParameterProcess
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentLinkStatus
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCM_CmdSendCycle
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationAllowRunCalibration
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isAllowLssued
</UL>

<P><STRONG><a name="[3c2]"></a>GetMACAdress</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bsp_uid.o(i.GetMACAdress))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetMACAdress
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUID
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
</UL>

<P><STRONG><a name="[13f]"></a>GetModelType</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, modelselect.o(i.GetModelType))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetModelType
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devc_token_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMachineMatchTestType
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestrainLoadChannelSelectPage
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchInit
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterInit
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCurrentModel
</UL>

<P><STRONG><a name="[b7]"></a>GetOriginalGauge</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, global.o(i.GetOriginalGauge))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordDispalcementGetDeformIncrement
</UL>

<P><STRONG><a name="[579]"></a>GetPage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pagemanage.o(i.GetPage))
<BR><BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageProcessCycle
</UL>

<P><STRONG><a name="[285]"></a>GetPageName</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pagemanage.o(i.GetPageName))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibationConfig
</UL>

<P><STRONG><a name="[3c6]"></a>GetParallelLenth</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, global.o(i.GetParallelLenth))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMaxForceSumElongation
</UL>

<P><STRONG><a name="[414]"></a>GetPeakValue</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, global.o(i.GetPeakValue))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestLoadCoreCycle
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestCheckPeakCycle
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentPeak
</UL>

<P><STRONG><a name="[229]"></a>GetPopWindowsAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui.o(i.GetPopWindowsAddr))
<BR><BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportExportSelectPage
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportDeleteSelectPage
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
</UL>

<P><STRONG><a name="[264]"></a>GetPopWindowsSelectResult</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui.o(i.GetPopWindowsSelectResult))
<BR><BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAskSampleFractureSurfaceProcess
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseSystemParameterAskHandler
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportDeleteSelectPage
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterLeavePageCheckCycle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTable
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectLeavePageCheckCycle
</UL>

<P><STRONG><a name="[d1]"></a>GetPressNum</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, tools.o(i.GetPressNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPressNumPrintReport
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectShortcutCheckCycle
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetShortcutCheckCycle
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectShortcutCheckCycle
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterShortcutCheckCycle
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectShortcutCheckCycle
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectShortcutCheckCycle
</UL>

<P><STRONG><a name="[58b]"></a>GetPrmReplyAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cmd.o(i.GetPrmReplyAddr))
<BR><BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
</UL>

<P><STRONG><a name="[5f1]"></a>GetPrmReplyStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cmd.o(i.GetPrmReplyStatus))
<BR><BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendClosePumpCmd
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChannelTareCmd
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOpenPumpCmd
</UL>

<P><STRONG><a name="[14d]"></a>GetPrmWarnStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cmd.o(i.GetPrmWarnStatus))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPrmWarning
</UL>

<P><STRONG><a name="[107]"></a>GetPutinAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typewrite.o(i.GetPutinAddr))
<BR><BR>[Called By]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchPutinProcess
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDatePutinProcess
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTablePutinProcess
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterPutinProcess
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPutinProcess
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterPutinProcess
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordPutinProcess
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActivePutinProcess
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterPutinProcess
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterPutinProcess
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposePutinProcess
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestorePutinProcess
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupPutinProcess
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordPutinProcess
</UL>

<P><STRONG><a name="[1b8]"></a>GetPutinCharDataAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typewrite.o(i.GetPutinCharDataAddr))
<BR><BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPullData
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
</UL>

<P><STRONG><a name="[1b6]"></a>GetPutinFloatDataAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typewrite.o(i.GetPutinFloatDataAddr))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPullData
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckPutinData
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
</UL>

<P><STRONG><a name="[fa]"></a>GetPutinIntDataAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typewrite.o(i.GetPutinIntDataAddr))
<BR><BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableKeyProcess
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPullData
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckPutinData
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
</UL>

<P><STRONG><a name="[f9]"></a>GetPutinStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, typewrite.o(i.GetPutinStatus))
<BR><BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableKeyProcess
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterTwoLevelMenuKeyProcess
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
</UL>

<P><STRONG><a name="[26a]"></a>GetReadWriteOutput</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cmd.o(i.GetReadWriteOutput))
<BR><BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStatusLampTask
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteTask
</UL>

<P><STRONG><a name="[2b4]"></a>GetSammpleCode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cmd.o(i.GetSammpleCode))
<BR><BR>[Called By]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentCode
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCodeFromPrm
</UL>

<P><STRONG><a name="[3bf]"></a>GetSampleAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cmd.o(i.GetSampleAddr))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputDataFromPrm
</UL>

<P><STRONG><a name="[2c1]"></a>GetSampleSpecificationArea</STRONG> (Thumb, 216 bytes, Stack size 112 bytes, tools.o(i.GetSampleSpecificationArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GetSampleSpecificationArea &rArr; str2float &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str2float
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromForceGetStrength
</UL>

<P><STRONG><a name="[697]"></a>GetSearchReportResultAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, searchreport.o(i.GetSearchReportResultAddr))
<BR><BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportConfig
</UL>

<P><STRONG><a name="[356]"></a>GetSearchType</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, searchreport.o(i.GetSearchType))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetSearchType
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportReadParameter
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartOneReportSearch
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneRowOneLevelMenuContent
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchReadParameter
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchPutinProcess
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearch
</UL>

<P><STRONG><a name="[1f4]"></a>GetSelectReportFileNameAddr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, testreport.o(i.GetSelectReportFileNameAddr))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportReadParameter
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportConfig
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowReadParameter
</UL>

<P><STRONG><a name="[1f1]"></a>GetSelectReportTestType</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, testreport.o(i.GetSelectReportTestType))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportInit
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowInit
</UL>

<P><STRONG><a name="[6a0]"></a>GetSelectTestAttribute</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, testtypeselect.o(i.GetSelectTestAttribute))
<BR><BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectConfig
</UL>

<P><STRONG><a name="[4dd]"></a>GetSelectWindowsAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui.o(i.GetSelectWindowsAddr))
<BR><BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportExportSelectPage
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportDeleteSelectPage
</UL>

<P><STRONG><a name="[10f]"></a>GetShortcutMenuAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui.o(i.GetShortcutMenuAddr))
<BR><BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageShortcutCycleTask
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitShortCutMenu
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShortcutCycleTask
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportShortcutCycleTask
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllReportShortcutCycleTask
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchShortcutCycleTask
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateShortcutCycleTask
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableShortcutCycleTask
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterShortcutCycleTask
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterShortcutCycleTask
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPrintingShortcutMenu
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationShortcutCycleTask
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterShortcutCycleTask
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordShortcutCycleTask
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveShortcutCycleTask
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterShortcutCycleTask
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectShortcutCycleTask
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterShortcutCycleTask
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeShortcutCycleTask
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkModeShortcutCycleTask
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreShortcutCycleTask
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupShortcutCycleTask
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectWindowsShortcutCycleTask
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPopWindowsShortCut
</UL>

<P><STRONG><a name="[554]"></a>GetTargetAdjoinTwoPointDiff</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, controlparameter.o(i.GetTargetAdjoinTwoPointDiff))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
</UL>

<P><STRONG><a name="[54e]"></a>GetTargetAttenuationRate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, controlparameter.o(i.GetTargetAttenuationRate))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
</UL>

<P><STRONG><a name="[552]"></a>GetTargetBreakDownPoint</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, controlparameter.o(i.GetTargetBreakDownPoint))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
</UL>

<P><STRONG><a name="[54b]"></a>GetTargetBreakStartValue</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, controlparameter.o(i.GetTargetBreakStartValue))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
</UL>

<P><STRONG><a name="[550]"></a>GetTargetWithMaxForceDifference</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, controlparameter.o(i.GetTargetWithMaxForceDifference))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
</UL>

<P><STRONG><a name="[233]"></a>GetTestAttribute</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, testtypeselect.o(i.GetTestAttribute))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageInit
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportInit
</UL>

<P><STRONG><a name="[3cb]"></a>GetTestContent</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, global.o(i.GetTestContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetTestContent
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_test_get
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_hmi_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetupPage
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterInit
</UL>

<P><STRONG><a name="[3ce]"></a>GetTestDataFromSD</STRONG> (Thumb, 822 bytes, Stack size 384 bytes, searchreport.o(i.GetTestDataFromSD))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = GetTestDataFromSD &rArr; report_search_date &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_date
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharConvTimeFormate
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchIndex
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchDataAddr
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_sn
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportReadParameter
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartOneReportSearch
</UL>

<P><STRONG><a name="[239]"></a>GetTestReportTime</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, testreport.o(i.GetTestReportTime))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportReadParameter
</UL>

<P><STRONG><a name="[1d9]"></a>GetTwoLevelMenuAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui.o(i.GetTwoLevelMenuAddr))
<BR><BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectKeyProcess
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
</UL>

<P><STRONG><a name="[3c3]"></a>GetUID</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bsp_uid.o(i.GetUID))
<BR><BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMACAdress
</UL>

<P><STRONG><a name="[f5]"></a>GetWY_SmplUnit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, global.o(i.GetWY_SmplUnit))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageInit
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableInit
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterInit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibationInit
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterInit
</UL>

<P><STRONG><a name="[54f]"></a>GetWithMaxForceDifference</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, global.o(i.GetWithMaxForceDifference))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
</UL>

<P><STRONG><a name="[613]"></a>Get_USB_Status</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbh_usr.o(i.Get_USB_Status))
<BR><BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportExportReport
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentUSBStatus
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupUSBProcess
</UL>

<P><STRONG><a name="[6da]"></a>HCD_GetCurrentFrame</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_hcd.o(i.HCD_GetCurrentFrame))
<BR><BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[703]"></a>HCD_GetCurrentSpeed</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usb_hcd.o(i.HCD_GetCurrentSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HCD_GetCurrentSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[6d9]"></a>HCD_GetURB_State</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_hcd.o(i.HCD_GetURB_State))
<BR><BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[6e8]"></a>HCD_GetXferCnt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_hcd.o(i.HCD_GetXferCnt))
<BR><BR>[Called By]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_DecodeCSW
</UL>

<P><STRONG><a name="[3d0]"></a>HCD_Init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, usb_hcd.o(i.HCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HCD_Init &rArr; USB_OTG_CoreInitHost &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SetCurrentMode
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SelectCore
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableGlobalInt
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DisableGlobalInt
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[6e7]"></a>HCD_IsDeviceConnected</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_hcd.o(i.HCD_IsDeviceConnected))
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Write10
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Read10
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity10
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ModeSense6
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_DecodeCSW
</UL>

<P><STRONG><a name="[3d7]"></a>HCD_ResetPort</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_hcd.o(i.HCD_ResetPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HCD_ResetPort &rArr; USB_OTG_ResetPort &rArr; USB_OTG_BSP_mDelay &rArr; bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[3d9]"></a>HCD_SubmitRequest</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usb_hcd.o(i.HCD_SubmitRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendSetup
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendData
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReceiveData
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkSendData
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkReceiveData
</UL>

<P><STRONG><a name="[3db]"></a>HDIR_SEG0_SEGn</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_ra8875.o(i.HDIR_SEG0_SEGn))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HDIR_SEG0_SEGn &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
</UL>

<P><STRONG><a name="[1b]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3e9]"></a>InitCommucationLamp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, global.o(i.InitCommucationLamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitCommucationLamp &rArr; LampTask &rArr; SetLampVal &rArr; GPIO_SetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LampTask
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrLampBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGeneralTask
</UL>

<P><STRONG><a name="[3ea]"></a>InitCoordinateDrawLine</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, global.o(i.InitCoordinateDrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitCoordinateDrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMainPageCoordinateDrawLine
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCurveShowCoordinateDrawLine
</UL>

<P><STRONG><a name="[288]"></a>InitInterfaceElement</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, global.o(i.InitInterfaceElement))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageInit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibationInit
</UL>

<P><STRONG><a name="[548]"></a>InitJudgeBreakPoint</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, global.o(i.InitJudgeBreakPoint))
<BR><BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteTestStartBody
</UL>

<P><STRONG><a name="[1b4]"></a>InitKeyCheck</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, typewrite.o(i.InitKeyCheck))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangePageInit
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterInit
</UL>

<P><STRONG><a name="[55e]"></a>InitLssuedParameter</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, global.o(i.InitLssuedParameter))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F3
</UL>

<P><STRONG><a name="[3f3]"></a>InitPage</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, pagemanage.o(i.InitPage))
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGeneralTask
</UL>

<P><STRONG><a name="[3ef]"></a>InitPutinShow</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, typewrite.o(i.InitPutinShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitPutinShow &rArr; bsp_StartAutoTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_StartAutoTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGeneralTask
</UL>

<P><STRONG><a name="[3f0]"></a>InitShortCutMenu</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, gui.o(i.InitShortCutMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = InitShortCutMenu
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGeneralTask
</UL>

<P><STRONG><a name="[3fc]"></a>InitSystem</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, initial.o(i.InitSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 1588<LI>Call Chain = InitSystem &rArr; BSP_Init &rArr; bsp_InitEthernet &rArr; bsp_InitLan8720 &rArr; ETH_MACDMA_Config &rArr; ETH_Init &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGeneralTask
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3fe]"></a>Init_RA8875</STRONG> (Thumb, 360 bytes, Stack size 8 bytes, bsp_ra8875.o(i.Init_RA8875))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Init_RA8875 &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_Reset
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_fnuction_sel
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_enable
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_duty_cycle
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_clock_ratio
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HDIR_SEG0_SEGn
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ON
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Active_Window
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLCD
</UL>

<P><STRONG><a name="[527]"></a>IsCoordinateRecordPointOverflow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, global.o(i.IsCoordinateRecordPointOverflow))
<BR><BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineBodyCycle
</UL>

<P><STRONG><a name="[c4]"></a>IsPressKey</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, typewrite.o(i.IsPressKey))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportKeyProcess
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportKeyProcess
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressNum
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKeyProcess
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableMoveIndexProcess
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableKeyProcess
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetKeyProcess
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterTwoLevelMenuKeyProcess
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterMoveIndexProcess
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectKeyProcess
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectKeyProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterKeyProcess
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkModeKeyProcess
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestKeyProcess
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationKeyProcess
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowKeyProcess
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectKeyProcess
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectKeyProcess
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TwoLevelMenuKeyProcess
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCueInfomation
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessAskInfomation
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShiftCheckCycle
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgePutinValidStatus
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteTask
</UL>

<P><STRONG><a name="[408]"></a>JudgeActiveStatus</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, softactive.o(i.JudgeActiveStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476<LI>Call Chain = JudgeActiveStatus &rArr; expire_judge &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expire_judge
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckLinkPCCycle
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAllowRunTest
</UL>

<P><STRONG><a name="[40a]"></a>JudgeBreakCalculateCycle</STRONG> (Thumb, 1016 bytes, Stack size 48 bytes, global.o(i.JudgeBreakCalculateCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = JudgeBreakCalculateCycle &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCycle
</UL>

<P><STRONG><a name="[2c2]"></a>JudgeCharIsEqual</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, tools.o(i.JudgeCharIsEqual))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = JudgeCharIsEqual &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromForceGetStrength
</UL>

<P><STRONG><a name="[40f]"></a>JudgeStrengthAvail</STRONG> (Thumb, 960 bytes, Stack size 200 bytes, mainpage.o(i.JudgeStrengthAvail))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = JudgeStrengthAvail &rArr; FindNotMatch_Per15_Condition &rArr; ContrastFloatDataEqual &rArr; __hardfp_fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFloatSmallValue
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverage
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetArrayEqualZeroIndex
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindNotMatch_Per15_Condition
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindNotMatch_10_To_90_Condition
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindArrayValNotZeroCount
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindArrayElementIsOneIndex
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteArrayWhichOnePositionElement
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastFloatDataEqual
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetAvailStrength
</UL>

<P><STRONG><a name="[d0]"></a>KeyIndexManage</STRONG> (Thumb, 362 bytes, Stack size 24 bytes, tools.o(i.KeyIndexManage))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportMoveIndexProcess
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchMoveIndexProcess
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectMoveIndexProcess
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateMoveIndexProcess
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableMoveIndexProcess
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterMoveIndexProcess
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetMoveIndexProcess
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterMoveIndexProcess
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterMoveIndexProcess
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordMoveIndexProcess
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterMoveIndexProcess
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectMoveIndexProcess
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectMoveIndexProcess
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterMoveIndexProcess
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterMoveIndexProcess
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeMoveIndexProcess
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreMoveIndexProcess
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectMoveIndexProcess
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectMoveIndexProcess
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectWindowsMoveIndexProcess
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveIndexProcess
</UL>

<P><STRONG><a name="[423]"></a>KeyProcessCycle</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, typewrite.o(i.KeyProcessCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = KeyProcessCycle &rArr; GetKey &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_StartTimer
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
</UL>

<P><STRONG><a name="[109]"></a>KeyPutinChars</STRONG> (Thumb, 572 bytes, Stack size 24 bytes, typewrite.o(i.KeyPutinChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 1716<LI>Call Chain = KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTypewrite
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPutinChars
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePutinChars
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinChar
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PutinReady
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePutinChars
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalogKeyValue
</UL>
<BR>[Called By]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchPutinProcess
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDatePutinProcess
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTablePutinProcess
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterPutinProcess
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPutinProcess
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterPutinProcess
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordPutinProcess
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActivePutinProcess
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterPutinProcess
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterPutinProcess
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposePutinProcess
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestorePutinProcess
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupPutinProcess
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordPutinProcess
</UL>

<P><STRONG><a name="[42a]"></a>LCD_HL_DrawHLine</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, bsp_lcd.o(i.LCD_HL_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCD_HL_DrawHLine &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Geometric_Coordinate
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_square_fill
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill_circle
</UL>

<P><STRONG><a name="[154]"></a>LCD_StatusRead</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_ra8875.o(i.LCD_StatusRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_StatusRead &rArr; ReadCOMM &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCOMM
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>

<P><STRONG><a name="[19d]"></a>LampTask</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, bsp_io.o(i.LampTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LampTask &rArr; SetLampVal &rArr; GPIO_SetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLampVal
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCommucationLamp
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStatusLampTask
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommucationLampTask
</UL>

<P><STRONG><a name="[43a]"></a>LinkUSBCycle</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usb.o(i.LinkUSBCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LinkUSBCycle &rArr; USBH_Process &rArr; USBH_HandleEnum &rArr; USBH_Get_StringDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
</UL>

<P><STRONG><a name="[43c]"></a>Link_tmr</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32f4x7_eth.o(i.Link_tmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = Link_tmr &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_ReadPHYRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Periodic_Handle
</UL>

<P><STRONG><a name="[8f]"></a>LoadAdvanceParameterPage</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, advanceparameter.o(i.LoadAdvanceParameterPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748<LI>Call Chain = LoadAdvanceParameterPage &rArr; AdvanceParameterLeavePageCheckCycle &rArr; LoadFirmwareUpdatePage &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdvanceParameter
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterMoveIndexProcess
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterMoveCursorProcess
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterLeavePageCheckCycle
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterKeyProcess
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterInit
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[8d]"></a>LoadCalibrationParameterPage</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, calibrationparameter.o(i.LoadCalibrationParameterPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadCalibrationParameterPage &rArr; CalibrationParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_CalibrationParameter
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameter
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterStatusProcess
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterShortcutCycleTask
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterReadParameter
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterPutinProcess
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterMoveIndexProcess
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterMoveCursorProcess
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterLeavePageCheckCycle
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterInit
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[87]"></a>LoadCalibrationTablePage</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, calibrationtable.o(i.LoadCalibrationTablePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadCalibrationTablePage &rArr; CalibrationTablePutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_CalibrationTable
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTable
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableStatusProcess
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableShortcutCycleTask
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableReadParameter
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTablePutinProcess
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableMoveIndexProcess
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableMoveCursorProcess
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableLeavePageCheckCycle
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableKeyProcess
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableInit
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableConfig
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[86]"></a>LoadControlParameterPage</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, controlparameter.o(i.LoadControlParameterPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadControlParameterPage &rArr; ControlParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ControlParameter
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameter
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterStatusProcess
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterShortcutCycleTask
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterReadParameter
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterPutinProcess
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterMoveIndexProcess
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterMoveCursorProcess
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterLeavePageCheckCycle
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterInit
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterConfig
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[98]"></a>LoadCurveShowPage</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, curveshow.o(i.LoadCurveShowPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 2164<LI>Call Chain = LoadCurveShowPage &rArr; CurveShowReadParameter &rArr; ReadCoordinatePoint &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CurveShow
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowReadParameter
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowKeyProcess
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowInit
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[82]"></a>LoadDetailReportPage</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, detailreport.o(i.LoadDetailReportPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1892<LI>Call Chain = LoadDetailReportPage &rArr; DetailReportKeyProcess &rArr; DetailReportDeleteReport &rArr; TestReportDeleteReport &rArr; TestReportDelete &rArr; DeleteAllReport &rArr; DeletePageReport &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_DetailReport
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReport
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShortcutCycleTask
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportReadParameter
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportKeyProcess
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportInit
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportConfig
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[8c]"></a>LoadForceCalibationPage</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, forcecalibration.o(i.LoadForceCalibationPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1756<LI>Call Chain = LoadForceCalibationPage &rArr; ForceCalibrationKeyProcess &rArr; ForceCalibrationKeyF3Process &rArr; ForceCalibrationChangeCalibrationTable &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ForceCalibration
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibration
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationShortcutCycleTask
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationReadParameter
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationLeavePageCheckCycle
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCtrlCoreCycle
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibationInit
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibationConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[95]"></a>LoadHardTestPage</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, hardtest.o(i.LoadHardTestPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadHardTestPage &rArr; HardTestLeavePageCheckCycle &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_HardTest
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestReadParameter
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestLeavePageCheckCycle
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestKeyProcess
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestInit
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestConfig
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTest
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInteractionWithPRM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[96]"></a>LoadLinkModePage</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, linkmode.o(i.LoadLinkModePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748<LI>Call Chain = LoadLinkModePage &rArr; GUI_LinkMode &rArr; GUI_LinkModeCue &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkModeShortcutCycleTask
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkModeLeavePageCheckCycle
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkModeKeyProcess
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkModeInit
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkModeConfig
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkHandlerConvCore
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LinkMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[7d]"></a>LoadMainPage</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, mainpage.o(i.LoadMainPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 2524<LI>Call Chain = LoadMainPage &rArr; MainPageCtrlCoreCycle &rArr; MainPageTestExecuteCoreCycle &rArr; MainPageTestAfterDisposeExecuteCycle &rArr; MainPageAutoPrintReportProcess &rArr; MainPagePrintReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageShortcutCycleTask
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageReadParameter
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageLeavePageCheckCycle
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageInit
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCtrlCoreCycle
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageConfig
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPage
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestResultTable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[332]"></a>LoadMainPageGetTestInfomationPage</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, testparameter.o(i.LoadMainPageGetTestInfomationPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = LoadMainPageGetTestInfomationPage &rArr; TestParameterInit &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestParameter
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterReadParameter
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterOneLevelMenuContentProcess
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterInit
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterIndexCrossTheBorderProcess
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterConfig
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageTestInfomation
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawTetResultArea
</UL>

<P><STRONG><a name="[90]"></a>LoadModelSelectPage</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, modelselect.o(i.LoadModelSelectPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1764<LI>Call Chain = LoadModelSelectPage &rArr; ModelSelectLeavePageCheckCycle &rArr; ModelSelectPutinTons &rArr; LoadConfigMachineParameterPage &rArr; ConfigMachineParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectReadParameter
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectMoveIndexProcess
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectMoveCursorProcess
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectLeavePageCheckCycle
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectKeyProcess
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectInit
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectConfig
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ModelSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[8a]"></a>LoadOnlineParameterPage</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, onlineparameter.o(i.LoadOnlineParameterPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadOnlineParameterPage &rArr; OnlineParameterLeavePageCheckCycle &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterLeavePageCheckCycle
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterInit
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameter
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_OnlineParameter
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterShortcutCycleTask
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterReadParameter
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterPutinProcess
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterParameterConfig
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterMoveIndexProcess
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterMoveCursorProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[80]"></a>LoadReportSearchPage</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, searchreport.o(i.LoadReportSearchPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadReportSearchPage &rArr; ReportSearchPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ReportSearch
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchStatusProcess
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchShortcutCycleTask
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchReadParameter
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchPutinProcess
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchMoveIndexProcess
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchMoveCursorProcess
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchLeavePageCheckCycle
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchInit
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchConfig
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearch
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[48d]"></a>LoadSelectWindows</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, gui.o(i.LoadSelectWindows))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = LoadSelectWindows &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectWindowsShortcutCycleTask
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectWindowsMoveIndexProcess
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectWindowsMoveCursorProcess
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SelectWindows
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectWindowsOneLevelMenu
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectWindows
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigSelectWindowsCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportExportSelectPage
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportDeleteSelectPage
</UL>

<P><STRONG><a name="[89]"></a>LoadSoftActivePage</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, softactive.o(i.LoadSoftActivePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadSoftActivePage &rArr; SoftActivePutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SoftActive
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveShortcutCycleTask
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveReadParameter
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActivePutinProcess
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveParameterConfig
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveMoveIndexProcess
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveMoveCursorProcess
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveLeavePageCheckCycle
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveInit
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[92]"></a>LoadSystemBackupPage</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, systembackup.o(i.LoadSystemBackupPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadSystemBackupPage &rArr; SystemBackupPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SystemBackup
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupShortcutCycleTask
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupReadParameter
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupPutinProcess
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupParameterConfig
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupMoveIndexProcess
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupMoveCursorProcess
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupLeavePageCheckCycle
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[94]"></a>LoadSystemInfomationPage</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, systeminfomation.o(i.LoadSystemInfomationPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = LoadSystemInfomationPage &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SystemInfomation
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationLeavePageCheckCycle
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationKeyProcess
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationInit
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationConfig
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[8b]"></a>LoadSystemPasswordPage</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, systempassword.o(i.LoadSystemPasswordPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadSystemPasswordPage &rArr; SystemPasswordPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SystemPassword
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordShortcutCycleTask
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordReadParameter
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordPutinProcess
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordParameterConfig
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordMoveIndexProcess
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordMoveCursorProcess
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordLeavePageCheckCycle
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordInit
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPassword
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[93]"></a>LoadSystemRestorePage</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, systemrestore.o(i.LoadSystemRestorePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadSystemRestorePage &rArr; SystemRestorePutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SystemRestore
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreStatusProcess
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreShortcutCycleTask
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreReadParameter
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestorePutinProcess
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreMoveIndexProcess
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreMoveCursorProcess
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreLeavePageCheckCycle
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreInit
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreConfig
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestore
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[85]"></a>LoadSystemSetPage</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, systemset.o(i.LoadSystemSetPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748<LI>Call Chain = LoadSystemSetPage &rArr; SystemSetLeavePageCheckCycle &rArr; LssuedParameterProcess &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetMoveIndexProcess
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetMoveCursorProcess
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetLeavePageCheckCycle
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetKeyProcess
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetInit
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetConfig
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemSet
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[7c]"></a>LoadSystemSetupPage</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, initial.o(i.LoadSystemSetupPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1780<LI>Call Chain = LoadSystemSetupPage &rArr; PowerOnLink &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_read
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_read
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_read
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendClosePumpCmd
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMachineMatchTestType
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestContent
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandlerDefaultPassword
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameter
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoBackUpSystem
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[8e]"></a>LoadTestAfterDisposePage</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, testafterdispose.o(i.LoadTestAfterDisposePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadTestAfterDisposePage &rArr; TestAfterDisposePutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestAfterDispose
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeStatusProcess
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeShortcutCycleTask
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeReadParameter
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposePutinProcess
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeParameterConfig
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeMoveIndexProcess
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeMoveCursorProcess
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeLeavePageCheckCycle
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeInit
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDispose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[7e]"></a>LoadTestParameterPage</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, testparameter.o(i.LoadTestParameterPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 2188<LI>Call Chain = LoadTestParameterPage &rArr; TestParameterKeyProcess &rArr; TestParameterCheckSerialRepeat &rArr; TestParameterSerialAddOne &rArr; report_exist &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestParameter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterStatusProcess
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterShortcutCycleTask
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterReadParameter
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPutinProcess
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPopWindowsProcess
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterOneLevelMenuContentProcess
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterMoveIndexProcess
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterMoveCursorProcess
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterLeavePageCheckCycle
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterInit
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterIndexCrossTheBorderProcess
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterConfig
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameter
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[81]"></a>LoadTestReportPage</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, testreport.o(i.LoadTestReportPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 2484<LI>Call Chain = LoadTestReportPage &rArr; TestReportKeyProcess &rArr; TestReportPrintAllPageReport &rArr; TestReportPrintOneReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestReport
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportShortcutCycleTask
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportReadParameter
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportMoveIndexProcess
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportMoveCursorProcess
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportKeyProcess
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportInit
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportConfig
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReport
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[7f]"></a>LoadTestSelectPage</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, testselect.o(i.LoadTestSelectPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = LoadTestSelectPage &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectStatusProcess
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectReadParameter
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectMoveIndexProcess
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectMoveCursorProcess
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectLeavePageCheckCycle
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKeyProcess
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectInit
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectConfig
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelect
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[97]"></a>LoadTestTypeSelectPage</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, testtypeselect.o(i.LoadTestTypeSelectPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = LoadTestTypeSelectPage &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectShortcutCheckCycle
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectReadParameter
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectMoveIndexProcess
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectMoveCursorProcess
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectLeavePageCheckCycle
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectKeyProcess
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectInit
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectConfig
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestTypeSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[88]"></a>LoadTimeDatePage</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, timedate.o(i.LoadTimeDatePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadTimeDatePage &rArr; TimeDatePutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TimeDate
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateShortcutCycleTask
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateReadParameter
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDatePutinProcess
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateParameterConfig
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateMoveIndexProcess
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateMoveCursorProcess
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateLeavePageCheckCycle
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateInit
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDate
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[1da]"></a>LoadTwoLevelMenuPage</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui.o(i.LoadTwoLevelMenuPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = LoadTwoLevelMenuPage &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TwoLevelMenuKeyProcess
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TwoLevelMenuInit
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveIndexProcess
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveCursorProcess
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TwoLevelMenu
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTwoLevelMenuPage
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectKeyProcess
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
</UL>

<P><STRONG><a name="[91]"></a>LoadUnitSelectPage</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, unitselect.o(i.LoadUnitSelectPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = LoadUnitSelectPage &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectStatusProcess
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectShortcutCycleTask
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectReadParameter
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectParameterConfig
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectMoveIndexProcess
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectMoveCursorProcess
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectLeavePageCheckCycle
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectKeyProcess
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectInit
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectIndexCrossTheBorderProcess
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_UnitSelect
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[50f]"></a>LssuedParameterProcess</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, global.o(i.LssuedParameterProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = LssuedParameterProcess &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetLeavePageCheckCycle
</UL>

<P><STRONG><a name="[510]"></a>LwIP_Periodic_Handle</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, netconf.o(i.LwIP_Periodic_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = LwIP_Periodic_Handle &rArr; Link_tmr &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_tmr
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link_tmr
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
</UL>

<P><STRONG><a name="[252]"></a>LwIP_Pkt_Handle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, netconf.o(i.LwIP_Pkt_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = LwIP_Pkt_Handle &rArr; ethernetif_input &rArr; low_level_input &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_IRQHandler
</UL>

<P><STRONG><a name="[1c]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[400]"></a>Memory_Clear</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_ra8875.o(i.Memory_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Memory_Clear &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
</UL>

<P><STRONG><a name="[1a]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[247]"></a>NVIC_Init</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = NVIC_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartNVICConfig
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeepTime
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Interrupts_Config
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_NVICConfiguration
</UL>

<P><STRONG><a name="[56e]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = NVIC_PriorityGroupConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[56d]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = NVIC_SetVectorTable &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[70]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usbh_it.o(i.OTG_HS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OTG_HS_IRQHandler &rArr; USBH_OTG_ISR_Handler &rArr; USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[ea]"></a>OutportTask</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsp_io.o(i.OutportTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OutportTask &rArr; GPIO_SetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOn
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOff
</UL>

<P><STRONG><a name="[17d]"></a>PCM_CmdSendCycle</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, global.o(i.PCM_CmdSendCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1660<LI>Call Chain = PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_cycle
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCtrlCoreCycle
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendClosePumpCmd
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChannelTareCmd
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCtrlCoreCycle
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestLeavePageCheckCycle
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInteractionWithPRM
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdRxContentProcess
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOpenPumpCmd
</UL>

<P><STRONG><a name="[403]"></a>PWM1_clock_ratio</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bsp_ra8875.o(i.PWM1_clock_ratio))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PWM1_clock_ratio &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
</UL>

<P><STRONG><a name="[404]"></a>PWM1_duty_cycle</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_ra8875.o(i.PWM1_duty_cycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PWM1_duty_cycle &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
</UL>

<P><STRONG><a name="[401]"></a>PWM1_enable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_ra8875.o(i.PWM1_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PWM1_enable &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
</UL>

<P><STRONG><a name="[402]"></a>PWM1_fnuction_sel</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_ra8875.o(i.PWM1_fnuction_sel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PWM1_fnuction_sel &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
</UL>

<P><STRONG><a name="[577]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = PWR_BackupAccessCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DeInitRTC
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[d8]"></a>PcmBackupWithDate</STRONG> (Thumb, 162 bytes, Stack size 648 bytes, pcm.o(i.PcmBackupWithDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = PcmBackupWithDate &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoBackUpSystem
</UL>

<P><STRONG><a name="[583]"></a>PcmRecoverWithDate</STRONG> (Thumb, 130 bytes, Stack size 616 bytes, pcm.o(i.PcmRecoverWithDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1100<LI>Call Chain = PcmRecoverWithDate &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
</UL>

<P><STRONG><a name="[21]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3f1]"></a>PopWindowsInit</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, gui.o(i.PopWindowsInit))
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGeneralTask
</UL>

<P><STRONG><a name="[100]"></a>PopWindowsProcessCycle</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gui.o(i.PopWindowsProcessCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1724<LI>Call Chain = PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearExceptionFlag
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetExceptionFlag
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsWithoutOperate
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCueInfomation
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessAskInfomation
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAutoUpdateSerial
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAskSampleFractureSurfaceProcess
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseSystemParameterAskHandler
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameter
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfomationPage
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLinkModePage
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDetailReportPage
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCurveShowPage
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAdvanceParameterPage
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportExport
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDelete
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportDeleteSelectPage
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterLeavePageCheckCycle
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateLeavePageCheckCycle
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableLeavePageCheckCycle
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterLeavePageCheckCycle
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LssuedParameterProcess
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPopWindowsProcess
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTable
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterLeavePageCheckCycle
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectLeavePageCheckCycle
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadFirmwareUpdatePage
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LinkModeCue
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestLeavePageCheckCycle
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreLeavePageCheckCycle
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[84]"></a>PrestrainLoadChannelSelectPage</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, channelselect.o(i.PrestrainLoadChannelSelectPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = PrestrainLoadChannelSelectPage &rArr; LoadChannelSelectPage &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModelType
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[83]"></a>PrestrainLoadPasswordPage</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, userlogin.o(i.PrestrainLoadPasswordPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748<LI>Call Chain = PrestrainLoadPasswordPage &rArr; LoadPasswordPage &rArr; PasswordPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pagemanage.o(i.InitPage)
</UL>
<P><STRONG><a name="[125]"></a>PrintCalibrationTable</STRONG> (Thumb, 292 bytes, Stack size 80 bytes, printer.o(i.PrintCalibrationTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452<LI>Call Chain = PrintCalibrationTable &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_value_get
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_num_get
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_code_get
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintWordsAndLineFeed
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintRowSpace
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintDottedLine
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigPrinterDefaultSet
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTablePagePrint
</UL>

<P><STRONG><a name="[2ac]"></a>PrintForceCalibrationResultTable</STRONG> (Thumb, 454 bytes, Stack size 88 bytes, printer.o(i.PrintForceCalibrationResultTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460<LI>Call Chain = PrintForceCalibrationResultTable &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintWordsAndLineFeed
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintRowSpace
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintDottedLine
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigPrinterDefaultSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationPrintCalibrationResult
</UL>

<P><STRONG><a name="[55f]"></a>PrintTestReport</STRONG> (Thumb, 2254 bytes, Stack size 88 bytes, printer.o(i.PrintTestReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460<LI>Call Chain = PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_enter
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintWordsAndLineFeed
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintRowSpace
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintDottedLine
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigPrinterDefaultSet
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePrintReport
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPrintOneReport
</UL>

<P><STRONG><a name="[d9]"></a>PrmBackupWithDate</STRONG> (Thumb, 162 bytes, Stack size 648 bytes, prm.o(i.PrmBackupWithDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = PrmBackupWithDate &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoBackUpSystem
</UL>

<P><STRONG><a name="[597]"></a>PrmRecoverWithDate</STRONG> (Thumb, 110 bytes, Stack size 640 bytes, prm.o(i.PrmRecoverWithDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1124<LI>Call Chain = PrmRecoverWithDate &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
</UL>

<P><STRONG><a name="[4c7]"></a>ProcessMachineMatchTestType</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, global.o(i.ProcessMachineMatchTestType))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = ProcessMachineMatchTestType &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModelType
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetupPage
</UL>

<P><STRONG><a name="[da]"></a>PrvBackupWithDate</STRONG> (Thumb, 160 bytes, Stack size 648 bytes, prm.o(i.PrvBackupWithDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = PrvBackupWithDate &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoBackUpSystem
</UL>

<P><STRONG><a name="[598]"></a>PrvRecoverWithDate</STRONG> (Thumb, 76 bytes, Stack size 608 bytes, prm.o(i.PrvRecoverWithDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1092<LI>Call Chain = PrvRecoverWithDate &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
</UL>

<P><STRONG><a name="[599]"></a>PumpStatusLampTask</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, global.o(i.PumpStatusLampTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PumpStatusLampTask &rArr; LampTask &rArr; SetLampVal &rArr; GPIO_SetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLampBit
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LampTask
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrLampBit
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReadWriteOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
</UL>

<P><STRONG><a name="[108]"></a>PutinProcessCycle</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, typewrite.o(i.PutinProcessCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1692<LI>Call Chain = PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_GetRunTime
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Periodic_Handle
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkUSBCycle
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcessCycle
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShiftCheckCycle
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgePutinValidStatus
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStatusLampTask
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteTask
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommucationLampTask
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetPage
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfomationPage
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLinkModePage
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDetailReportPage
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCurveShowPage
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAdvanceParameterPage
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangePageInit
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchPutinProcess
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDatePutinProcess
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTablePutinProcess
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterPutinProcess
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPutinProcess
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterPutinProcess
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordPutinProcess
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActivePutinProcess
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterPutinProcess
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterPutinProcess
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposePutinProcess
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestorePutinProcess
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupPutinProcess
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordPutinProcess
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCueInfomation
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessAskInfomation
</UL>

<P><STRONG><a name="[c2]"></a>RA8875_WAITSTATUS</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_ra8875.o(i.RA8875_WAITSTATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCOMM
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_fnuction_sel
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_enable
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_duty_cycle
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_clock_ratio
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Geometric_Coordinate
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ON
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Active_Window
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>

<P><STRONG><a name="[25a]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = RCC_AHB1PeriphClockCmd &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartHardInit
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSFlash
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_74HC165
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLamp
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitExt_74HC595
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeep
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLan8720
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_gpio_init
</UL>

<P><STRONG><a name="[24f]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphResetCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = RCC_AHB1PeriphResetCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DeInit
</UL>

<P><STRONG><a name="[59c]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(i.RCC_AHB3PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = RCC_AHB3PeriphClockCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_gpio_init
</UL>

<P><STRONG><a name="[3e3]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = RCC_APB1PeriphClockCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DeInitRTC
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeepTime
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CfgSPIForSFlash
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[59d]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = RCC_APB1PeriphResetCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[59e]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = RCC_APB2PeriphClockCmd &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartHardInit
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLan8720
</UL>

<P><STRONG><a name="[59f]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = RCC_APB2PeriphResetCmd &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DeInit
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[5a0]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_BackupResetCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = RCC_BackupResetCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[254]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
</UL>

<P><STRONG><a name="[5a1]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, stm32f4xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = RCC_GetFlagStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[5a2]"></a>RCC_LSICmd</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_LSICmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = RCC_LSICmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[5a3]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = RCC_RTCCLKConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[5a5]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = RTC_ReadBackupRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRTC_BKP_DR
</UL>

<P><STRONG><a name="[5a6]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = RTC_WriteBackupRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRTC_BKP_DR
</UL>

<P><STRONG><a name="[42c]"></a>ReadCOMM</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_ra8875.o(i.ReadCOMM))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadCOMM &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_StatusRead
</UL>

<P><STRONG><a name="[1f6]"></a>ReadCoordinatePoint</STRONG> (Thumb, 194 bytes, Stack size 680 bytes, report.o(i.ReadCoordinatePoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1164<LI>Call Chain = ReadCoordinatePoint &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportCurrentReport
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowReadParameter
</UL>

<P><STRONG><a name="[15c]"></a>ReadData</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_ra8875.o(i.ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadData &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_fnuction_sel
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_enable
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_clock_ratio
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HDIR_SEG0_SEGn
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Active_Window
</UL>

<P><STRONG><a name="[5a8]"></a>ReadRTC_BKP_DR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_rtc.o(i.ReadRTC_BKP_DR))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = ReadRTC_BKP_DR &rArr; RTC_ReadBackupRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoUpdatePassword
</UL>

<P><STRONG><a name="[5a9]"></a>RefreshDynamicCalibrationStatus</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, global.o(i.RefreshDynamicCalibrationStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = RefreshDynamicCalibrationStatus &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
</UL>

<P><STRONG><a name="[5aa]"></a>RefreshDynamicCode</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, global.o(i.RefreshDynamicCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = RefreshDynamicCode &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
</UL>

<P><STRONG><a name="[5ab]"></a>RefreshDynamicCommunicationStatus</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, global.o(i.RefreshDynamicCommunicationStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = RefreshDynamicCommunicationStatus &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
</UL>

<P><STRONG><a name="[5af]"></a>RefreshDynamicDeform</STRONG> (Thumb, 186 bytes, Stack size 64 bytes, global.o(i.RefreshDynamicDeform))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = RefreshDynamicDeform &rArr; disp_value &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_syn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_value
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetValueNotEqualZero
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[5b3]"></a>RefreshDynamicDisplacement</STRONG> (Thumb, 186 bytes, Stack size 64 bytes, global.o(i.RefreshDynamicDisplacement))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = RefreshDynamicDisplacement &rArr; disp_value &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_syn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_value
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetValueNotEqualZero
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[5b4]"></a>RefreshDynamicEthernetIco</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, global.o(i.RefreshDynamicEthernetIco))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = RefreshDynamicEthernetIco &rArr; lcd_show_image &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_show_image
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
</UL>

<P><STRONG><a name="[5b5]"></a>RefreshDynamicForce</STRONG> (Thumb, 188 bytes, Stack size 64 bytes, global.o(i.RefreshDynamicForce))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = RefreshDynamicForce &rArr; disp_value &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_syn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_value
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetValueNotEqualZero
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[5b6]"></a>RefreshDynamicPeak</STRONG> (Thumb, 188 bytes, Stack size 64 bytes, global.o(i.RefreshDynamicPeak))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = RefreshDynamicPeak &rArr; disp_value &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_syn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_value
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetValueNotEqualZero
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[5b7]"></a>RefreshDynamicSpeed</STRONG> (Thumb, 186 bytes, Stack size 64 bytes, global.o(i.RefreshDynamicSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = RefreshDynamicSpeed &rArr; disp_value &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_syn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_value
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetValueNotEqualZero
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[5b8]"></a>RefreshDynamicStrength</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, global.o(i.RefreshDynamicStrength))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = RefreshDynamicStrength &rArr; disp_value &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_syn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_value
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetValueNotEqualZero
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
</UL>

<P><STRONG><a name="[5b9]"></a>RefreshDynamicSystemTime</STRONG> (Thumb, 110 bytes, Stack size 64 bytes, global.o(i.RefreshDynamicSystemTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = RefreshDynamicSystemTime &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
</UL>

<P><STRONG><a name="[5ba]"></a>RefreshDynamicTestStatus</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, global.o(i.RefreshDynamicTestStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = RefreshDynamicTestStatus &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
</UL>

<P><STRONG><a name="[5bb]"></a>RefreshDynamicUSBIco</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, global.o(i.RefreshDynamicUSBIco))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = RefreshDynamicUSBIco &rArr; lcd_show_image &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_show_image
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
</UL>

<P><STRONG><a name="[7a]"></a>RelinkPRM</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, global.o(i.RelinkPRM))
<BR><BR>[Stack]<UL><LI>Max Depth = 1660<LI>Call Chain = RelinkPRM &rArr; link_cycle &rArr; LinkCmdSendBody &rArr; cmd_write_prm &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_init
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_cycle
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkProcess
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ProgressBar
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProcessBody
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_StartTimer
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOfflineCycle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> global.o(i.InitLssuedParameter)
</UL>
<P><STRONG><a name="[1ee]"></a>ReloadCoordinate</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, global.o(i.ReloadCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReloadCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineJudgeCondition
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoordinateDrawLineBodyCycle
</UL>

<P><STRONG><a name="[5c3]"></a>RemoveStrChar</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, tools.o(i.RemoveStrChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RemoveStrChar &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
</UL>

<P><STRONG><a name="[69c]"></a>ResetAgainSearchReport</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, searchreport.o(i.ResetAgainSearchReport))
<BR><BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportInit
</UL>

<P><STRONG><a name="[232]"></a>ResetShowDetailReport</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, testreport.o(i.ResetShowDetailReport))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportInit
</UL>

<P><STRONG><a name="[165]"></a>SDIO_ClearFlag</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = SDIO_ClearFlag &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReadOperation
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp7Error
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp3Error
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdError
</UL>

<P><STRONG><a name="[5cb]"></a>SDIO_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = SDIO_ClearITPendingBit &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[5cc]"></a>SDIO_ClockCmd</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_ClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = SDIO_ClockCmd &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[5cd]"></a>SDIO_DMACmd</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_DMACmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = SDIO_DMACmd &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
</UL>

<P><STRONG><a name="[280]"></a>SDIO_DataConfig</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, stm32f4xx_sdio.o(i.SDIO_DataConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = SDIO_DataConfig &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[5ce]"></a>SDIO_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SDIO_DeInit &rArr; RCC_APB2PeriphResetCmd &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[176]"></a>SDIO_GetCommandResponse</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetCommandResponse))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[164]"></a>SDIO_GetFlagStatus</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, stm32f4xx_sdio.o(i.SDIO_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = SDIO_GetFlagStatus &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdError
</UL>

<P><STRONG><a name="[5cf]"></a>SDIO_GetITStatus</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, stm32f4xx_sdio.o(i.SDIO_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = SDIO_GetITStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[5e0]"></a>SDIO_GetPowerState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetPowerState))
<BR><BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[177]"></a>SDIO_GetResponse</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32f4xx_sdio.o(i.SDIO_GetResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[54]"></a>SDIO_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SDIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = SDIO_IRQHandler &rArr; SD_ProcessIRQSrc &rArr; SDIO_GetITStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5d1]"></a>SDIO_ITConfig</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4xx_sdio.o(i.SDIO_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = SDIO_ITConfig &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[5d2]"></a>SDIO_Init</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, stm32f4xx_sdio.o(i.SDIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = SDIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[5d3]"></a>SDIO_Interrupts_Config</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SDIO_Interrupts_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDIO_Interrupts_Config &rArr; NVIC_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[281]"></a>SDIO_ReadData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ReadData))
<BR><BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[27f]"></a>SDIO_SendCommand</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32f4xx_sdio.o(i.SDIO_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = SDIO_SendCommand &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[5d4]"></a>SDIO_SetPowerState</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_SetPowerState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = SDIO_SetPowerState &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[5d5]"></a>SD_Detect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_Detect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_Detect &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>

<P><STRONG><a name="[5d6]"></a>SD_EnableWideBusOperation</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_EnableWideBusOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[5de]"></a>SD_GetCardInfo</STRONG> (Thumb, 762 bytes, Stack size 20 bytes, bsp_sdio_sd.o(i.SD_GetCardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SD_GetCardInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[5d7]"></a>SD_GetState</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_GetState &rArr; SD_SendStatus &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Detect
</UL>
<BR>[Called By]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
</UL>

<P><STRONG><a name="[5d9]"></a>SD_GetStatus</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SD_GetStatus &rArr; SD_GetState &rArr; SD_SendStatus &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[5da]"></a>SD_Init</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DeInit
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCardInfo
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Interrupts_Config
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[5dd]"></a>SD_InitializeCards</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_InitializeCards))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_InitializeCards &rArr; CmdResp6Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetPowerState
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[5e1]"></a>SD_LowLevel_DMA_RxConfig</STRONG> (Thumb, 132 bytes, Stack size 72 bytes, bsp_sdio_sd.o(i.SD_LowLevel_DMA_RxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = SD_LowLevel_DMA_RxConfig &rArr;  DMA_ClearFlag (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_FlowControllerConfig
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
</UL>

<P><STRONG><a name="[5e2]"></a>SD_LowLevel_DMA_TxConfig</STRONG> (Thumb, 134 bytes, Stack size 72 bytes, bsp_sdio_sd.o(i.SD_LowLevel_DMA_TxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = SD_LowLevel_DMA_TxConfig &rArr;  DMA_ClearFlag (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_FlowControllerConfig
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
</UL>

<P><STRONG><a name="[5db]"></a>SD_LowLevel_Init</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_LowLevel_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_LowLevel_Init &rArr; GPIO_PinAFConfig &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[5dc]"></a>SD_PowerON</STRONG> (Thumb, 400 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SD_PowerON))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_PowerON &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClockCmd
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp7Error
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp3Error
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdError
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SetPowerState
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[1f7]"></a>SD_ProcessDMAIRQ</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_ProcessDMAIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = SD_ProcessDMAIRQ &rArr; DMA_ClearFlag &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
</UL>

<P><STRONG><a name="[5d0]"></a>SD_ProcessIRQSrc</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_ProcessIRQSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = SD_ProcessIRQSrc &rArr; SDIO_GetITStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearITPendingBit
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_IRQHandler
</UL>

<P><STRONG><a name="[5e3]"></a>SD_ReadBlock</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SD_ReadBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SD_ReadBlock &rArr; SD_LowLevel_DMA_RxConfig &rArr;  DMA_ClearFlag (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[5e4]"></a>SD_ReadMultiBlocks</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SD_ReadMultiBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SD_ReadMultiBlocks &rArr; SD_LowLevel_DMA_RxConfig &rArr;  DMA_ClearFlag (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[5df]"></a>SD_SelectDeselect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_SelectDeselect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_SelectDeselect &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[5d8]"></a>SD_SendStatus</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_SendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_SendStatus &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>

<P><STRONG><a name="[5e5]"></a>SD_StopTransfer</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_StopTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_StopTransfer &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReadOperation
</UL>

<P><STRONG><a name="[5e6]"></a>SD_WaitReadOperation</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_WaitReadOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_WaitReadOperation &rArr; SD_StopTransfer &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[5e7]"></a>SD_WriteBlock</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SD_WriteBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SD_WriteBlock &rArr; SD_LowLevel_DMA_TxConfig &rArr;  DMA_ClearFlag (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[5e8]"></a>SD_WriteMultiBlocks</STRONG> (Thumb, 294 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SD_WriteMultiBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr;  DMA_ClearFlag (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[5e9]"></a>SPI_Cmd</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = SPI_Cmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CfgSPIForSFlash
</UL>

<P><STRONG><a name="[5ea]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, stm32f4xx_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = SPI_I2S_GetFlagStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
</UL>

<P><STRONG><a name="[5eb]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = SPI_I2S_ReceiveData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
</UL>

<P><STRONG><a name="[5ec]"></a>SPI_I2S_SendData</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4xx_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
</UL>

<P><STRONG><a name="[5ed]"></a>SPI_Init</STRONG> (Thumb, 366 bytes, Stack size 16 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = SPI_Init &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CfgSPIForSFlash
</UL>

<P><STRONG><a name="[1f]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5ee]"></a>SYSCFG_ETH_MediaInterfaceConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_syscfg.o(i.SYSCFG_ETH_MediaInterfaceConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = SYSCFG_ETH_MediaInterfaceConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLan8720
</UL>

<P><STRONG><a name="[273]"></a>SaveCoordinatePoint</STRONG> (Thumb, 316 bytes, Stack size 736 bytes, report.o(i.SaveCoordinatePoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1220<LI>Call Chain = SaveCoordinatePoint &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageSaveCoordinateCurveToSD
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportCurrentReport
</UL>

<P><STRONG><a name="[3f2]"></a>SelectWindowsInit</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, gui.o(i.SelectWindowsInit))
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGeneralTask
</UL>

<P><STRONG><a name="[2aa]"></a>SendChannelTareCmd</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, global.o(i.SendChannelTareCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1684<LI>Call Chain = SendChannelTareCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_StartTimer
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCM_CmdSendCycle
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrmReplyStatus
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_tare_pkg
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendTareCmdInteractionTask
</UL>

<P><STRONG><a name="[26c]"></a>SendClosePumpCmd</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, global.o(i.SendClosePumpCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1676<LI>Call Chain = SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCM_CmdSendCycle
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrmReplyStatus
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_switch_pkg
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetupPage
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteTask
</UL>

<P><STRONG><a name="[26b]"></a>SendOpenPumpCmd</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, global.o(i.SendOpenPumpCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1676<LI>Call Chain = SendOpenPumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCM_CmdSendCycle
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrmReplyStatus
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_switch_pkg
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteTask
</UL>

<P><STRONG><a name="[43d]"></a>SetBackLightEffectClose</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui.o(i.SetBackLightEffectClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SetBackLightEffectClose &rArr; lcd_clear &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetPage
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfomationPage
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLinkModePage
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDetailReportPage
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCurveShowPage
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAdvanceParameterPage
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[440]"></a>SetBackLightEffectOpen</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui.o(i.SetBackLightEffectOpen))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetPage
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfomationPage
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLinkModePage
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDetailReportPage
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCurveShowPage
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAdvanceParameterPage
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[146]"></a>SetBindingPort</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, client.o(i.SetBindingPort))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLinkStatus
</UL>

<P><STRONG><a name="[67f]"></a>SetChannelSelectNextPage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, channelselect.o(i.SetChannelSelectNextPage))
<BR><BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetLeavePageCheckCycle
</UL>

<P><STRONG><a name="[55c]"></a>SetChannelSelectSourcePage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, channelselect.o(i.SetChannelSelectSourcePage))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F3
</UL>

<P><STRONG><a name="[55d]"></a>SetChannelSelectTargetPage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, channelselect.o(i.SetChannelSelectTargetPage))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F3
</UL>

<P><STRONG><a name="[752]"></a>SetCommucationLampStart</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetCommucationLampStart))
<BR><BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_cycle
</UL>

<P><STRONG><a name="[3ee]"></a>SetCoreStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, global.o(i.SetCoreStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGeneralTask
</UL>

<P><STRONG><a name="[274]"></a>SetCurveSaveTime</STRONG> (Thumb, 276 bytes, Stack size 160 bytes, report.o(i.SetCurveSaveTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = SetCurveSaveTime &rArr; f_utime &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportCurrentReport
</UL>

<P><STRONG><a name="[55a]"></a>SetDisplacementOrDeformShow</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, global.o(i.SetDisplacementOrDeformShow))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
</UL>

<P><STRONG><a name="[5f8]"></a>SetDynamicContentBXSpeed</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, global.o(i.SetDynamicContentBXSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetDynamicContentBXSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_spd
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceElementBXSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
</UL>

<P><STRONG><a name="[5fd]"></a>SetDynamicContentCode</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, global.o(i.SetDynamicContentCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetDynamicContentCode
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSammpleCode
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceElementCode
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
</UL>

<P><STRONG><a name="[5ff]"></a>SetDynamicContentDeform</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, global.o(i.SetDynamicContentDeform))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetDynamicContentDeform
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceElementDeform
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
</UL>

<P><STRONG><a name="[601]"></a>SetDynamicContentDispalcement</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, global.o(i.SetDynamicContentDispalcement))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetDynamicContentDispalcement
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceElementDisPlacement
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
</UL>

<P><STRONG><a name="[603]"></a>SetDynamicContentFHSpeed</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, global.o(i.SetDynamicContentFHSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetDynamicContentFHSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_spd
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceElementFHSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
</UL>

<P><STRONG><a name="[605]"></a>SetDynamicContentForce</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, global.o(i.SetDynamicContentForce))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetDynamicContentForce
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceElementForce
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
</UL>

<P><STRONG><a name="[607]"></a>SetDynamicContentLinkStatus</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, global.o(i.SetDynamicContentLinkStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetDynamicContentLinkStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkStatus
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceLinkStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
</UL>

<P><STRONG><a name="[609]"></a>SetDynamicContentNETStatus</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, global.o(i.SetDynamicContentNETStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = SetDynamicContentNETStatus &rArr; GetEthLinkStatus &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEthLinkStatus
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceElementEthernetConnectStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
</UL>

<P><STRONG><a name="[611]"></a>SetDynamicContentUSBStatus</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, global.o(i.SetDynamicContentUSBStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetDynamicContentUSBStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_USB_Status
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceElementUSBStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
</UL>

<P><STRONG><a name="[615]"></a>SetDynamicContentWYSpeed</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, global.o(i.SetDynamicContentWYSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetDynamicContentWYSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_spd
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceElementWYSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
</UL>

<P><STRONG><a name="[5fc]"></a>SetInterfaceCalibrationStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentCalibrationStatus
</UL>

<P><STRONG><a name="[5fa]"></a>SetInterfaceElementBXSpeed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceElementBXSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentBXSpeed
</UL>

<P><STRONG><a name="[5fe]"></a>SetInterfaceElementCode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, global.o(i.SetInterfaceElementCode))
<BR><BR>[Called By]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentCode
</UL>

<P><STRONG><a name="[600]"></a>SetInterfaceElementDeform</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceElementDeform))
<BR><BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentDeform
</UL>

<P><STRONG><a name="[602]"></a>SetInterfaceElementDisPlacement</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceElementDisPlacement))
<BR><BR>[Called By]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentDispalcement
</UL>

<P><STRONG><a name="[60a]"></a>SetInterfaceElementEthernetConnectStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceElementEthernetConnectStatus))
<BR><BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentNETStatus
</UL>

<P><STRONG><a name="[604]"></a>SetInterfaceElementFHSpeed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceElementFHSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentFHSpeed
</UL>

<P><STRONG><a name="[606]"></a>SetInterfaceElementForce</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceElementForce))
<BR><BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentForce
</UL>

<P><STRONG><a name="[60d]"></a>SetInterfaceElementPeak</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceElementPeak))
<BR><BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentPeak
</UL>

<P><STRONG><a name="[60f]"></a>SetInterfaceElementStrength</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceElementStrength))
<BR><BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentStrength
</UL>

<P><STRONG><a name="[614]"></a>SetInterfaceElementUSBStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceElementUSBStatus))
<BR><BR>[Called By]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentUSBStatus
</UL>

<P><STRONG><a name="[616]"></a>SetInterfaceElementWYSpeed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceElementWYSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentWYSpeed
</UL>

<P><STRONG><a name="[608]"></a>SetInterfaceLinkStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceLinkStatus))
<BR><BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentLinkStatus
</UL>

<P><STRONG><a name="[612]"></a>SetInterfaceTestStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetInterfaceTestStatus))
<BR><BR>[Called By]<UL><LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTestStatus
</UL>

<P><STRONG><a name="[149]"></a>SetKeepLiveCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cmd.o(i.SetKeepLiveCount))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOfflineCycle
</UL>

<P><STRONG><a name="[19c]"></a>SetLampBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_io.o(i.SetLampBit))
<BR><BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStatusLampTask
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommucationLampTask
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdSendBody
</UL>

<P><STRONG><a name="[3f4]"></a>SetLampVal</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bsp_io.o(i.SetLampVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetLampVal &rArr; GPIO_SetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGeneralTask
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitIO
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LampTask
</UL>

<P><STRONG><a name="[11f]"></a>SetLssuedParameter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.SetLssuedParameter))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableLeavePageCheckCycle
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterLeavePageCheckCycle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTable
</UL>

<P><STRONG><a name="[eb]"></a>SetOutportBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_io.o(i.SetOutportBit))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOn
</UL>

<P><STRONG><a name="[cb]"></a>SetPage</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pagemanage.o(i.SetPage))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F3
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F1
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckLinkPCCycle
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestrainLoadPasswordPage
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestrainLoadChannelSelectPage
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetupPage
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportKeyProcess
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportInit
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportKeyProcess
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectShortcutCheckCycle
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKeyProcess
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterLeavePageCheckCycle
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateLeavePageCheckCycle
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableLeavePageCheckCycle
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableKeyProcess
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterLeavePageCheckCycle
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetLeavePageCheckCycle
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyF4Process
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterLeavePageCheckCycle
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectKeyProcess
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectLeavePageCheckCycle
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterLeavePageCheckCycle
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestKeyProcess
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationKeyProcess
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowReadParameter
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowKeyProcess
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectLeavePageCheckCycle
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectLeavePageCheckCycle
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
</UL>

<P><STRONG><a name="[c9]"></a>SetPasswordPutinSourcePage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, userlogin.o(i.SetPasswordPutinSourcePage))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F3
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterLeavePageCheckCycle
</UL>

<P><STRONG><a name="[ca]"></a>SetPasswordPutinTargetPage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, userlogin.o(i.SetPasswordPutinTargetPage))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F3
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterLeavePageCheckCycle
</UL>

<P><STRONG><a name="[c8]"></a>SetPasswordType</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, userlogin.o(i.SetPasswordType))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F3
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterLeavePageCheckCycle
</UL>

<P><STRONG><a name="[be]"></a>SetPopWindowsInfomation</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui.o(i.SetPopWindowsInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetPopWindowsInfomation
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsContent
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageSaveCoordinateCurveToSD
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePrintReport
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F1
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteWriteSDProcess
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCancelLastPiece
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAllowRunTest
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendClosePumpCmd
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameter
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportExportReport
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPrintOneReport
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportExport
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDelete
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportCurrentReport
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterCheckDataCycle
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateCheckDataCycle
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableCheckSegmentPoint
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableCheckDataCycle
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterCheckDataCycle
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LssuedParameterProcess
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckPutinData
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckSerialRepeat
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActiveStatusHandler
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTableProcess
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTable
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationAllowRunCalibration
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterCheckSegmentPoint
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterCheckDataCycle
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordCheckDataCycle
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveActiveProcess
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterCheckDataCycle
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadFirmwareUpdatePage
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkDisConnectProcess
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestLeavePageCheckCycle
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreLeavePageCheckCycle
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupUSBProcess
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupSDProcess
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordProcess
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOpenPumpCmd
</UL>

<P><STRONG><a name="[22a]"></a>SetPopWindowsWithoutOperate</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, gui.o(i.SetPopWindowsWithoutOperate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetPopWindowsWithoutOperate
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsContent
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LinkModeCue
</UL>

<P><STRONG><a name="[271]"></a>SetReportSaveTime</STRONG> (Thumb, 194 bytes, Stack size 160 bytes, report.o(i.SetReportSaveTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = SetReportSaveTime &rArr; f_utime &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportCurrentReport
</UL>

<P><STRONG><a name="[263]"></a>SetSelectPopWindowsInfomation</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, gui.o(i.SetSelectPopWindowsInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetSelectPopWindowsInfomation
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsContent
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAskSampleFractureSurfaceProcess
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseSystemParameterAskHandler
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportDeleteSelectPage
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterLeavePageCheckCycle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTable
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectLeavePageCheckCycle
</UL>

<P><STRONG><a name="[563]"></a>SetShortCutMenuCue</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, global.o(i.SetShortCutMenuCue))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = SetShortCutMenuCue &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearShortCutMenuArea
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
</UL>

<P><STRONG><a name="[691]"></a>SetTestTypeSelectSourcePage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, testtypeselect.o(i.SetTestTypeSelectSourcePage))
<BR><BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
</UL>

<P><STRONG><a name="[692]"></a>SetTestTypeSelectTargetPage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, testtypeselect.o(i.SetTestTypeSelectTargetPage))
<BR><BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
</UL>

<P><STRONG><a name="[5b0]"></a>SetValueNotEqualZero</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, tools.o(i.SetValueNotEqualZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetValueNotEqualZero &rArr; __hardfp_fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicStrength
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSpeed
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicPeak
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicForce
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDisplacement
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDeform
</UL>

<P><STRONG><a name="[617]"></a>Set_MAC_Address</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ethernetif.o(i.Set_MAC_Address))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = Set_MAC_Address &rArr; ETH_MACAddressConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACAddressConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
</UL>

<P><STRONG><a name="[110]"></a>ShortcutMenuTask</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, gui.o(i.ShortcutMenuTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageShortcutCycleTask
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShortcutCycleTask
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportShortcutCycleTask
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllReportShortcutCycleTask
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchShortcutCycleTask
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateShortcutCycleTask
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableShortcutCycleTask
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterShortcutCycleTask
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterShortcutCycleTask
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPrintingShortcutMenu
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationShortcutCycleTask
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterShortcutCycleTask
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordShortcutCycleTask
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveShortcutCycleTask
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterShortcutCycleTask
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectShortcutCycleTask
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterShortcutCycleTask
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeShortcutCycleTask
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkModeShortcutCycleTask
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreShortcutCycleTask
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupShortcutCycleTask
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectWindowsShortcutCycleTask
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPopWindowsShortCut
</UL>

<P><STRONG><a name="[124]"></a>ShowPrintingShortcutMenu</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, global.o(i.ShowPrintingShortcutMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = ShowPrintingShortcutMenu &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePrintReport
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPrintAllPageReport
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPressNumPrintReport
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTablePagePrint
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationPrintCalibrationResult
</UL>

<P><STRONG><a name="[3ff]"></a>Software_Reset</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_ra8875.o(i.Software_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Software_Reset &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
</UL>

<P><STRONG><a name="[27d]"></a>SortBubble</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, tools.o(i.SortBubble))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SortBubble
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeForceAvail
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDownYieldForce
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindNotMatch_Per15_Condition
</UL>

<P><STRONG><a name="[220]"></a>StartOneReportSearch</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, searchreport.o(i.StartOneReportSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 948<LI>Call Chain = StartOneReportSearch &rArr; GetTestDataFromSD &rArr; report_search_date &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestDataFromSD
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSearchType
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSearchResultInit
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDeleteReport
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllReport
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchLeavePageCheckCycle
</UL>

<P><STRONG><a name="[661]"></a>StrCutBackReplace</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, tools.o(i.StrCutBackReplace))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = StrCutBackReplace &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterSerialAddOne
</UL>

<P><STRONG><a name="[643]"></a>StrFillSpecifyChar</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, tools.o(i.StrFillSpecifyChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = StrFillSpecifyChar
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneRowOneLevelMenuContent
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemBackupOneRowOneLevelMenuContent
</UL>

<P><STRONG><a name="[22]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_timer.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; SysTick_ISR
</UL>
<BR>[Calls]<UL><LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[662]"></a>SysTick_ISR</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, bsp_timer.o(i.SysTick_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_ISR
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_SoftTimerDec
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[76]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[438]"></a>SystemSoftwareReset</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, tools.o(i.SystemSoftwareReset))
<BR><BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterLeavePageCheckCycle
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectLeavePageCheckCycle
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadFirmwareUpdatePage
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkModeLeavePageCheckCycle
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreLeavePageCheckCycle
</UL>

<P><STRONG><a name="[3f]"></a>TIM2_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usbh_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = TIM2_IRQHandler &rArr; USB_OTG_BSP_TimerIRQ &rArr; TIM_GetITStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimerIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM3_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsp_timer.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = TIM3_IRQHandler &rArr; TIM_GetITStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3e5]"></a>TIM_ClearFlag</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = TIM_ClearFlag &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeepTime
</UL>

<P><STRONG><a name="[682]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = TIM_ClearITPendingBit &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimerIRQ
</UL>

<P><STRONG><a name="[3e8]"></a>TIM_Cmd</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = TIM_Cmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeepTime
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimerIRQ
</UL>

<P><STRONG><a name="[681]"></a>TIM_GetITStatus</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, stm32f4xx_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = TIM_GetITStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimerIRQ
</UL>

<P><STRONG><a name="[3e7]"></a>TIM_ITConfig</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = TIM_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeepTime
</UL>

<P><STRONG><a name="[3e6]"></a>TIM_SetCounter</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_SetCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = TIM_SetCounter &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeepTime
</UL>

<P><STRONG><a name="[3e4]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = TIM_TimeBaseInit &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeepTime
</UL>

<P><STRONG><a name="[57d]"></a>TestManagerPassword</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, global.o(i.TestManagerPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TestManagerPassword &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordCheckDataCycle
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreCheckSystemPasswordProcess
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreCheckManagerPasswordProcess
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupCheckSystemPasswordProcess
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordProcess
</UL>

<P><STRONG><a name="[51e]"></a>TestParameterCheckSerialRepeat</STRONG> (Thumb, 124 bytes, Stack size 992 bytes, testparameter.o(i.TestParameterCheckSerialRepeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 2156<LI>Call Chain = TestParameterCheckSerialRepeat &rArr; TestParameterSerialAddOne &rArr; report_exist &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_exist
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStrIncludeIllegalChar
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterSerialAddOne
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckSerialRepeat
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
</UL>

<P><STRONG><a name="[22f]"></a>TestReportDeleteReport</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, testreport.o(i.TestReportDeleteReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 1868<LI>Call Chain = TestReportDeleteReport &rArr; TestReportDelete &rArr; DeleteAllReport &rArr; DeletePageReport &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportReadParameter
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDelete
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartOneReportSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportDeleteReport
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportKeyProcess
</UL>

<P><STRONG><a name="[69a]"></a>TestReportExportReport</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, testreport.o(i.TestReportExportReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 2364<LI>Call Chain = TestReportExportReport &rArr; TestReportExport &rArr; ExportAllReport &rArr; ExportPageReport &rArr; ExportCurrentReport &rArr; SaveCoordinatePoint &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_USB_Status
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportExport
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportKeyProcess
</UL>

<P><STRONG><a name="[236]"></a>TestReportIndexDecrease</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, testreport.o(i.TestReportIndexDecrease))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportKeyProcess
</UL>

<P><STRONG><a name="[237]"></a>TestReportIndexIncrease</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, testreport.o(i.TestReportIndexIncrease))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportKeyProcess
</UL>

<P><STRONG><a name="[57e]"></a>TestUserPassword</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, global.o(i.TestUserPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TestUserPassword &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordCheckDataCycle
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreCheckSystemPasswordProcess
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupCheckSystemPasswordProcess
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordProcess
</UL>

<P><STRONG><a name="[42b]"></a>Text_Foreground_Color</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bsp_ra8875.o(i.Text_Foreground_Color))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Text_Foreground_Color &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HL_DrawHLine
</UL>

<P><STRONG><a name="[6af]"></a>UDP_GetDataLen</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, client.o(i.UDP_GetDataLen))
<BR><BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetPackageCycle
</UL>

<P><STRONG><a name="[141]"></a>UDP_IsFindUntreatedData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, client.o(i.UDP_IsFindUntreatedData))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLinkStatus
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetPackageCycle
</UL>

<P><STRONG><a name="[6b0]"></a>UDP_SendStr</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, client.o(i.UDP_SendStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = UDP_SendStr &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
</UL>

<P><STRONG><a name="[142]"></a>UDP_SetUntreatedDataStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, client.o(i.UDP_SetUntreatedDataStatus))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLinkStatus
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetPackageCycle
</UL>

<P><STRONG><a name="[48]"></a>USART1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_uart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = USART1_IRQHandler &rArr; UartIRQ &rArr; USART_GetITStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>USART6_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_uart.o(i.USART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = USART6_IRQHandler &rArr; UartIRQ &rArr; USART_GetITStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6b6]"></a>USART_ClearFlag</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = USART_ClearFlag &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartIRQ
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartHardInit
</UL>

<P><STRONG><a name="[6b7]"></a>USART_Cmd</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = USART_Cmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartHardInit
</UL>

<P><STRONG><a name="[6b8]"></a>USART_DeInit</STRONG> (Thumb, 264 bytes, Stack size 8 bytes, stm32f4xx_usart.o(i.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = USART_DeInit &rArr; RCC_APB1PeriphResetCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartHardInit
</UL>

<P><STRONG><a name="[6b9]"></a>USART_GetFlagStatus</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = USART_GetFlagStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartHardInit
</UL>

<P><STRONG><a name="[6ba]"></a>USART_GetITStatus</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = USART_GetITStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartIRQ
</UL>

<P><STRONG><a name="[434]"></a>USART_GetPackageCycle</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, linkmode.o(i.USART_GetPackageCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1340<LI>Call Chain = USART_GetPackageCycle &rArr; Uart_GetPackageCycle &rArr; ComGet &rArr; UartGetChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTConvUDPFormate
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUdpPackageSize
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUSARTPackageSize
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_frame_addr
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_cmd
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_check
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_cycle
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetPackageCycle
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_SendStr
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEthernetTxDataAddr
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkHandlerConvCore
</UL>

<P><STRONG><a name="[6c1]"></a>USART_ITConfig</STRONG> (Thumb, 272 bytes, Stack size 32 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPutChar
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartHardInit
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartGetChar
</UL>

<P><STRONG><a name="[6c2]"></a>USART_Init</STRONG> (Thumb, 480 bytes, Stack size 48 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = USART_Init &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartHardInit
</UL>

<P><STRONG><a name="[6c3]"></a>USART_ReceiveData</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = USART_ReceiveData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartIRQ
</UL>

<P><STRONG><a name="[6c4]"></a>USART_SendData</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = USART_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPutChar
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartIRQ
</UL>

<P><STRONG><a name="[6c5]"></a>USBH_Alloc_Channel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usbh_hcs.o(i.USBH_Alloc_Channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_Alloc_Channel
</UL>
<BR>[Calls]<UL><LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetFreeChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceInit
</UL>

<P><STRONG><a name="[6c7]"></a>USBH_BulkReceiveData</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, usbh_ioreq.o(i.USBH_BulkReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[6c8]"></a>USBH_BulkSendData</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, usbh_ioreq.o(i.USBH_BulkSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[6c9]"></a>USBH_ClrFeature</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, usbh_stdreq.o(i.USBH_ClrFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USBH_ClrFeature &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_BOT_Abort
</UL>

<P><STRONG><a name="[17]"></a>USBH_Connected</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbh_core.o(i.USBH_Connected))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[6cb]"></a>USBH_CtlReceiveData</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, usbh_ioreq.o(i.USBH_CtlReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USBH_CtlReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[6ca]"></a>USBH_CtlReq</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, usbh_ioreq.o(i.USBH_CtlReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitSetupRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetCfg
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetAddress
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_GETMaxLUN
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_BOTReset
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ClrFeature
</UL>

<P><STRONG><a name="[6cd]"></a>USBH_CtlSendData</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, usbh_ioreq.o(i.USBH_CtlSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USBH_CtlSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[6ce]"></a>USBH_CtlSendSetup</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, usbh_ioreq.o(i.USBH_CtlSendSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = USBH_CtlSendSetup &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[705]"></a>USBH_DeAllocate_AllChannel</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usbh_hcs.o(i.USBH_DeAllocate_AllChannel))
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[6cf]"></a>USBH_DeInit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usbh_core.o(i.USBH_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free_Channel
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[18]"></a>USBH_Disconnected</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbh_core.o(i.USBH_Disconnected))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[704]"></a>USBH_ErrorHandle</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, usbh_core.o(i.USBH_ErrorHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_ErrorHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[6d0]"></a>USBH_Free_Channel</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usbh_hcs.o(i.USBH_Free_Channel))
<BR><BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeInit
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceDeInit
</UL>

<P><STRONG><a name="[6d1]"></a>USBH_GetDescriptor</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, usbh_stdreq.o(i.USBH_GetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_StringDesc
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_DevDesc
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_CfgDesc
</UL>

<P><STRONG><a name="[700]"></a>USBH_GetNextDesc</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usbh_stdreq.o(i.USBH_GetNextDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_GetNextDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseCfgDesc
</UL>

<P><STRONG><a name="[6d2]"></a>USBH_Get_CfgDesc</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, usbh_stdreq.o(i.USBH_Get_CfgDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBH_Get_CfgDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseCfgDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[6d4]"></a>USBH_Get_DevDesc</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, usbh_stdreq.o(i.USBH_Get_DevDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBH_Get_DevDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseDevDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[6d6]"></a>USBH_Get_StringDesc</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, usbh_stdreq.o(i.USBH_Get_StringDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBH_Get_StringDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseStringDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[6d8]"></a>USBH_HandleControl</STRONG> (Thumb, 544 bytes, Stack size 24 bytes, usbh_core.o(i.USBH_HandleControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = USBH_HandleControl &rArr; USBH_CtlSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendSetup
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendData
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReceiveData
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetCurrentFrame
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetURB_State
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[6e0]"></a>USBH_Init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, usbh_core.o(i.USBH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USBH_Init &rArr; HCD_Init &rArr; USB_OTG_CoreInitHost &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_ConfigVBUS
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitUSB
</UL>

<P><STRONG><a name="[6e5]"></a>USBH_MSC_BOT_Abort</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, usbh_msc_bot.o(i.USBH_MSC_BOT_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBH_MSC_BOT_Abort &rArr; USBH_ClrFeature &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ClrFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[6e6]"></a>USBH_MSC_DecodeCSW</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, usbh_msc_bot.o(i.USBH_MSC_DecodeCSW))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBH_MSC_DecodeCSW
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetXferCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[6ec]"></a>USBH_MSC_ErrorHandle</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, usbh_msc_core.o(i.USBH_MSC_ErrorHandle))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[6f0]"></a>USBH_MSC_HandleBOTXfer</STRONG> (Thumb, 812 bytes, Stack size 32 bytes, usbh_msc_bot.o(i.USBH_MSC_HandleBOTXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkSendData
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkReceiveData
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetURB_State
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_DecodeCSW
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_BOT_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[6ea]"></a>USBH_MSC_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usbh_msc_bot.o(i.USBH_MSC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_MSC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[6ee]"></a>USBH_MSC_ModeSense6</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, usbh_msc_scsi.o(i.USBH_MSC_ModeSense6))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_ModeSense6
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[6f3]"></a>USBH_MSC_Read10</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, usbh_msc_scsi.o(i.USBH_MSC_Read10))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBH_MSC_Read10
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[6ed]"></a>USBH_MSC_ReadCapacity10</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, usbh_msc_scsi.o(i.USBH_MSC_ReadCapacity10))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_ReadCapacity10
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[6ef]"></a>USBH_MSC_RequestSense</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, usbh_msc_scsi.o(i.USBH_MSC_RequestSense))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_RequestSense
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[6eb]"></a>USBH_MSC_TestUnitReady</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, usbh_msc_scsi.o(i.USBH_MSC_TestUnitReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_TestUnitReady
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[6f4]"></a>USBH_MSC_Write10</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, usbh_msc_scsi.o(i.USBH_MSC_Write10))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_MSC_Write10
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[6dc]"></a>USBH_Modify_Channel</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, usbh_hcs.o(i.USBH_Modify_Channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBH_Modify_Channel &rArr; USB_OTG_HC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[56f]"></a>USBH_OTG_ISR_Handler</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, usb_hcd_int.o(i.USBH_OTG_ISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBH_OTG_ISR_Handler &rArr; USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadCoreItr
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsHostMode
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_sof_ISR
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_rx_qlvl_ISR
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_ptxfempty_ISR
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_nptxfempty_ISR
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_Disconnect_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_IRQHandler
</UL>

<P><STRONG><a name="[6f2]"></a>USBH_Open_Channel</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, usbh_hcs.o(i.USBH_Open_Channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBH_Open_Channel &rArr; USB_OTG_HC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceInit
</UL>

<P><STRONG><a name="[43b]"></a>USBH_Process</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, usbh_core.o(i.USBH_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = USBH_Process &rArr; USBH_HandleEnum &rArr; USBH_Get_StringDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeAllocate_AllChannel
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_ResetPort
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetCurrentSpeed
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ErrorHandle
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeInit
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Open_Channel
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Alloc_Channel
</UL>
<BR>[Called By]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadyCycle
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkUSBCycle
</UL>

<P><STRONG><a name="[16]"></a>USBH_SOF</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbh_core.o(i.USBH_SOF))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[6dd]"></a>USBH_SetAddress</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usbh_stdreq.o(i.USBH_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_SetAddress &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[6df]"></a>USBH_SetCfg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usbh_stdreq.o(i.USBH_SetCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_SetCfg &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[9]"></a>USBH_USR_Configuration_DescAvailable</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, usbh_usr.o(i.USBH_USR_Configuration_DescAvailable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USBH_USR_Configuration_DescAvailable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>USBH_USR_DeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_DeInit))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>USBH_USR_DeviceAddressAssigned</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_DeviceAddressAssigned))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>USBH_USR_DeviceAttached</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_DeviceAttached))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>USBH_USR_DeviceDisconnected</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_DeviceDisconnected))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>USBH_USR_DeviceNotSupported</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_DeviceNotSupported))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>USBH_USR_DeviceSpeedDetected</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_DeviceSpeedDetected))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>USBH_USR_Device_DescAvailable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_Device_DescAvailable))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>USBH_USR_EnumerationDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_EnumerationDone))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>USBH_USR_Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_Init))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>USBH_USR_MSC_Application</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_MSC_Application))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>USBH_USR_Manufacturer_String</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_Manufacturer_String))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>USBH_USR_OverCurrentDetected</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_OverCurrentDetected))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>USBH_USR_Product_String</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_Product_String))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>USBH_USR_ResetDevice</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_ResetDevice))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>USBH_USR_SerialNum_String</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_SerialNum_String))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>USBH_USR_UnrecoveredError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_UnrecoveredError))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>USBH_USR_UserInput</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbh_usr.o(i.USBH_USR_UserInput))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[6e2]"></a>USB_OTG_BSP_ConfigVBUS</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_bsp.o(i.USB_OTG_BSP_ConfigVBUS))
<BR><BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[70d]"></a>USB_OTG_BSP_DriveVBUS</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_bsp.o(i.USB_OTG_BSP_DriveVBUS))
<BR><BR>[Called By]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
</UL>

<P><STRONG><a name="[6e3]"></a>USB_OTG_BSP_EnableInterrupt</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usb_bsp.o(i.USB_OTG_BSP_EnableInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_OTG_BSP_EnableInterrupt &rArr; NVIC_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[6e1]"></a>USB_OTG_BSP_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, usb_bsp.o(i.USB_OTG_BSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_OTG_BSP_Init &rArr; GPIO_PinAFConfig &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[680]"></a>USB_OTG_BSP_TimerIRQ</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usb_bsp.o(i.USB_OTG_BSP_TimerIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = USB_OTG_BSP_TimerIRQ &rArr; TIM_GetITStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[6de]"></a>USB_OTG_BSP_mDelay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usb_bsp.o(i.USB_OTG_BSP_mDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_OTG_BSP_mDelay &rArr; bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SetCurrentMode
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[706]"></a>USB_OTG_BSP_uDelay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usb_bsp.o(i.USB_OTG_BSP_uDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_OTG_BSP_uDelay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreReset
</UL>

<P><STRONG><a name="[3d3]"></a>USB_OTG_CoreInit</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_CoreInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USB_OTG_CoreInit &rArr; USB_OTG_CoreReset &rArr; USB_OTG_BSP_uDelay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreReset
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[3d5]"></a>USB_OTG_CoreInitHost</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, usb_core.o(i.USB_OTG_CoreInitHost))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = USB_OTG_CoreInitHost &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_ConfigVBUS
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableHostInt
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_InitFSLSPClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[3d2]"></a>USB_OTG_DisableGlobalInt</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_DisableGlobalInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_DisableGlobalInt
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[70b]"></a>USB_OTG_DriveVbus</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_DriveVbus))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_OTG_DriveVbus &rArr; USB_OTG_BSP_mDelay &rArr; bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_DriveVBUS
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHPRT0
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[3d6]"></a>USB_OTG_EnableGlobalInt</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_EnableGlobalInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_EnableGlobalInt
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[70c]"></a>USB_OTG_EnableHostInt</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_EnableHostInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OTG_EnableHostInt &rArr; USB_OTG_EnableCommonInt
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableCommonInt
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[70a]"></a>USB_OTG_FlushRxFifo</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_FlushRxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_OTG_FlushRxFifo &rArr; USB_OTG_BSP_uDelay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[709]"></a>USB_OTG_FlushTxFifo</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_FlushTxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[712]"></a>USB_OTG_GetMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_GetMode))
<BR><BR>[Called By]<UL><LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsHostMode
</UL>

<P><STRONG><a name="[716]"></a>USB_OTG_HC_DoPing</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_HC_DoPing))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_HC_DoPing
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
</UL>

<P><STRONG><a name="[6f1]"></a>USB_OTG_HC_Halt</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, usb_core.o(i.USB_OTG_HC_Halt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_In_ISR
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceDeInit
</UL>

<P><STRONG><a name="[6f5]"></a>USB_OTG_HC_Init</STRONG> (Thumb, 568 bytes, Stack size 28 bytes, usb_core.o(i.USB_OTG_HC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_OTG_HC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Modify_Channel
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Open_Channel
</UL>

<P><STRONG><a name="[3da]"></a>USB_OTG_HC_StartXfer</STRONG> (Thumb, 502 bytes, Stack size 60 bytes, usb_core.o(i.USB_OTG_HC_StartXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsEvenFrame
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>

<P><STRONG><a name="[708]"></a>USB_OTG_InitFSLSPClkSel</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_InitFSLSPClkSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_InitFSLSPClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
</UL>

<P><STRONG><a name="[710]"></a>USB_OTG_IsEvenFrame</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_IsEvenFrame))
<BR><BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_StartXfer
</UL>

<P><STRONG><a name="[6f6]"></a>USB_OTG_IsHostMode</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, usb_core.o(i.USB_OTG_IsHostMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_OTG_IsHostMode
</UL>
<BR>[Calls]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_GetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[6f7]"></a>USB_OTG_ReadCoreItr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadCoreItr))
<BR><BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[70e]"></a>USB_OTG_ReadHPRT0</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_ReadHPRT0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_ReadHPRT0
</UL>
<BR>[Called By]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
</UL>

<P><STRONG><a name="[713]"></a>USB_OTG_ReadHostAllChannels_intr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadHostAllChannels_intr))
<BR><BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[717]"></a>USB_OTG_ReadPacket</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, usb_core.o(i.USB_OTG_ReadPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_rx_qlvl_ISR
</UL>

<P><STRONG><a name="[3d8]"></a>USB_OTG_ResetPort</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_ResetPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_OTG_ResetPort &rArr; USB_OTG_BSP_mDelay &rArr; bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHPRT0
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_ResetPort
</UL>

<P><STRONG><a name="[3d1]"></a>USB_OTG_SelectCore</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_SelectCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_SelectCore
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[3d4]"></a>USB_OTG_SetCurrentMode</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_SetCurrentMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USB_OTG_SetCurrentMode &rArr; USB_OTG_BSP_mDelay &rArr; bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[711]"></a>USB_OTG_WritePacket</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_WritePacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_StartXfer
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_ptxfempty_ISR
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_nptxfempty_ISR
</UL>

<P><STRONG><a name="[718]"></a>USB_ReadyCycle</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usbh_usr.o(i.USB_ReadyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = USB_ReadyCycle &rArr; USBH_Process &rArr; USBH_HandleEnum &rArr; USBH_Get_StringDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitUSB
</UL>

<P><STRONG><a name="[6c0]"></a>Uart_GetPackageCycle</STRONG> (Thumb, 312 bytes, Stack size 8 bytes, cmd.o(i.Uart_GetPackageCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1316<LI>Call Chain = Uart_GetPackageCycle &rArr; ComGet &rArr; UartGetChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComGet
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_cycle
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_cycle
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
</UL>

<P><STRONG><a name="[1e]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[c0]"></a>WriteCommand</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp_ra8875.o(i.WriteCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8875_WAITSTATUS
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_show_image
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_Reset
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_fnuction_sel
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_enable
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_duty_cycle
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_clock_ratio
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HDIR_SEG0_SEGn
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Geometric_Coordinate
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_square_fill
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ON
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Active_Window
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48_char
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_point
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw32x32
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw32x16
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw24x24
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw24x12
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw20x20
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw16x8
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw16x16
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_ascin20
</UL>

<P><STRONG><a name="[c1]"></a>WriteData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_ra8875.o(i.WriteData))
<BR><BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_Reset
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_fnuction_sel
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_enable
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_duty_cycle
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_clock_ratio
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HDIR_SEG0_SEGn
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Geometric_Coordinate
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_square_fill
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ON
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Active_Window
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_point
</UL>

<P><STRONG><a name="[5f4]"></a>WriteToRTC_BKP_DR</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bsp_rtc.o(i.WriteToRTC_BKP_DR))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = WriteToRTC_BKP_DR &rArr; RTC_WriteBackupRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoUpdatePassword
</UL>

<P><STRONG><a name="[722]"></a>XY_Coordinate</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_ra8875.o(i.XY_Coordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_show_image
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48_char
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_point
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw32x32
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw32x16
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw24x24
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw24x12
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw20x20
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw16x8
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw16x16
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_ascin20
</UL>

<P><STRONG><a name="[723]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[825]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[bc]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageSaveCoordinateCurveToSD
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetAvailStrength
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetAvailForce
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteWriteSDProcess
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteHandEndGroup
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOneGroupProcess
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckSerialRepeat
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAutoPrintReportProcess
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAskSampleFractureSurfaceProcess
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAllowRunTest
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KZKY_TestJumpTestResultPage
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestLoadCoreCycle
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestJumpTestResultPage
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestDeformCoreCycle
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMaxForceSumElongation
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordDispalcementGetDeformIncrement
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromForceGetStrength
</UL>

<P><STRONG><a name="[826]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[827]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[ba]"></a>__hardfp_fabs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fabs.o(i.__hardfp_fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteForce
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestCheckPeakCycle
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMaxForceSumElongation
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordDispalcementGetDeformIncrement
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckPutinData
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicStrength
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSpeed
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicPeak
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicForce
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDisplacement
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDeform
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeBreakCalculateCycle
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromForceGetStrength
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastFloatDataEqual
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteStrength
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteForce
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDisPlacement
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeviation
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeform
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2str
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetValueNotEqualZero
</UL>

<P><STRONG><a name="[828]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[829]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[82a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[65a]"></a>active_product</STRONG> (Thumb, 600 bytes, Stack size 96 bytes, active.o(i.active_product))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476<LI>Call Chain = active_product &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_product_id_get
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_date_get
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isqrt
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_preuse_date_set
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_expire_day_set
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_expire_day_get
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_set
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_date_set
</UL>
<BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveActiveProcess
</UL>

<P><STRONG><a name="[1f9]"></a>assert_failed</STRONG> (Thumb, 128 bytes, Stack size 504 bytes, bsp_assert.o(i.assert_failed))
<BR><BR>[Stack]<UL><LI>Max Depth = 1236<LI>Call Chain = assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr20At
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClockCmd
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearITPendingBit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_FlowControllerConfig
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SetPowerState
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetITStatus
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_ReadPHYRegister
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_ETH_MediaInterfaceConfig
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMAITConfig
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMAClearITPendingBit
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSICmd
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_BackupResetCmd
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_WritePHYRegister
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACTransmissionCmd
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACReceptionCmd
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACAddressConfig
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMATxDescChecksumInsertionConfig
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMATransmissionCmd
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMARxDescReceiveITConfig
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMAReceptionCmd
</UL>

<P><STRONG><a name="[777]"></a>bcd2str_32</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, ustring.o(i.bcd2str_32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bcd2str_32
</UL>
<BR>[Called By]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_product_id_get
</UL>

<P><STRONG><a name="[773]"></a>bcd2val_16</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ustring.o(i.bcd2val_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bcd2val_16
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_date_get
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_preuse_date_get
</UL>

<P><STRONG><a name="[772]"></a>bcd2val_32</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, ustring.o(i.bcd2val_32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bcd2val_32
</UL>
<BR>[Called By]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_product_id_get
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_date_get
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_preuse_date_get
</UL>

<P><STRONG><a name="[774]"></a>bcd2val_8</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ustring.o(i.bcd2val_8))
<BR><BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_date_get
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_preuse_date_get
</UL>

<P><STRONG><a name="[16a]"></a>bsp_CheckTimer</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_CheckTimer))
<BR><BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCtrlCoreCycle
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangePageInit
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChannelTareCmd
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCtrlCoreCycle
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInteractionWithPRM
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcessCycle
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTypewrite
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelinkPRM
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdReceiveBody
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdMutualBody
</UL>

<P><STRONG><a name="[5f5]"></a>bsp_DeInitRTC</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_rtc.o(i.bsp_DeInitRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = bsp_DeInitRTC &rArr; RCC_APB1PeriphClockCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoUpdatePassword
</UL>

<P><STRONG><a name="[303]"></a>bsp_DelayMS</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_timer.o(i.bsp_DelayMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTestSaveProgressBar
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_Reset
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLan8720
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_hard_reset
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintRowSpace
</UL>

<P><STRONG><a name="[3c1]"></a>bsp_DelayUS</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, bsp_timer.o(i.bsp_DelayUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_ack
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sendbyte
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_notack
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_ack
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_recv_byte
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2_stop
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2_start
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>

<P><STRONG><a name="[59b]"></a>bsp_GetRunTime</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_GetRunTime))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
</UL>

<P><STRONG><a name="[dd]"></a>bsp_InitCOM</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_uart.o(i.bsp_InitCOM))
<BR><BR>[Stack]<UL><LI>Max Depth = 1324<LI>Call Chain = bsp_InitCOM &rArr; UartHardInit &rArr; USART_Init &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartVarInit
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartNVICConfig
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartHardInit
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[e2]"></a>bsp_InitEthernet</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, netconf.o(i.bsp_InitEthernet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1572<LI>Call Chain = bsp_InitEthernet &rArr; bsp_InitLan8720 &rArr; ETH_MACDMA_Config &rArr; ETH_Init &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_read
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devc_ip_get
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_default
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_init
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htonl
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MAC_Address
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_init
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLan8720
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMACAdress
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[e5]"></a>bsp_InitFont</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bsp_lcd.o(i.bsp_InitFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = bsp_InitFont &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_err
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font16
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[df]"></a>bsp_InitIO</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_io.o(i.bsp_InitIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_InitIO &rArr; InitOutport &rArr; InitExt_74HC595 &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLampVal
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOutport
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLamp
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitInport
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[e4]"></a>bsp_InitLCD</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_lcd.o(i.bsp_InitLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = bsp_InitLCD &rArr; FSMC_LCD_Init &rArr; FSMC_NORSRAMCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RA8875
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_hard_reset
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_gpio_init
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[731]"></a>bsp_InitLan8720</STRONG> (Thumb, 252 bytes, Stack size 16 bytes, bsp_lan8720.o(i.bsp_InitLan8720))
<BR><BR>[Stack]<UL><LI>Max Depth = 1524<LI>Call Chain = bsp_InitLan8720 &rArr; ETH_MACDMA_Config &rArr; ETH_Init &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_ETH_MediaInterfaceConfig
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_NVICConfiguration
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
</UL>

<P><STRONG><a name="[e0]"></a>bsp_InitPcf8563</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_pcf8563.o(i.bsp_InitPcf8563))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bsp_InitPcf8563 &rArr; pcf8563_set &rArr; i2c_wait_ack &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_set
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[de]"></a>bsp_InitPrint</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_print.o(i.bsp_InitPrint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332<LI>Call Chain = bsp_InitPrint &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPrintChar
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[5f3]"></a>bsp_InitRTC</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_rtc.o(i.bsp_InitRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = bsp_InitRTC &rArr; RTC_Config &rArr; RCC_GetFlagStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoUpdatePassword
</UL>

<P><STRONG><a name="[e1]"></a>bsp_InitSFlash</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, bsp_spi_flash.o(i.bsp_InitSFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 1308<LI>Call Chain = bsp_InitSFlash &rArr; sf_ReadInfo &rArr; sf_ReadID &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_ReadInfo
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WriteStatus
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WaitForWriteEnd
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CfgSPIForSFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[dc]"></a>bsp_InitTimer</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_InitTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300<LI>Call Chain = bsp_InitTimer &rArr; InitBeepTime &rArr; TIM_TimeBaseInit &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeepTime
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[e3]"></a>bsp_InitUSB</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usb.o(i.bsp_InitUSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = bsp_InitUSB &rArr; f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadyCycle
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[3f5]"></a>bsp_StartAutoTimer</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, bsp_timer.o(i.bsp_StartAutoTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_StartAutoTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPutinShow
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGeneralTask
</UL>

<P><STRONG><a name="[168]"></a>bsp_StartTimer</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, bsp_timer.o(i.bsp_StartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_StartTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangePageInit
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChannelTareCmd
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInteractionWithPRM
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcessCycle
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinChar
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelinkPRM
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdSendBody
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdMutualBody
</UL>

<P><STRONG><a name="[42f]"></a>buffcmp</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ustring.o(i.buffcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = buffcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdReceiveBody
</UL>

<P><STRONG><a name="[738]"></a>client_init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, client.o(i.client_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = client_init &rArr; udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_send
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_disconnect
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
</UL>

<P><STRONG><a name="[765]"></a>clust2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[183]"></a>cmd_clear_error</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cmd.o(i.cmd_clear_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_clear_error &rArr; cmd_general &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_general
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[58d]"></a>cmd_clear_error_pkg</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, cmd.o(i.cmd_clear_error_pkg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cmd_clear_error_pkg &rArr; isAllowLssued
</UL>
<BR>[Calls]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isAllowLssued
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
</UL>

<P><STRONG><a name="[431]"></a>cmd_cmd_sign_on</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cmd.o(i.cmd_cmd_sign_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_cmd_sign_on &rArr; cmd_general &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_general
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdSendBody
</UL>

<P><STRONG><a name="[18c]"></a>cmd_ctrl_mode</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, cmd.o(i.cmd_ctrl_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1372<LI>Call Chain = cmd_ctrl_mode &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[17f]"></a>cmd_device_version</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cmd.o(i.cmd_device_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_device_version &rArr; cmd_general &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_general
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[16f]"></a>cmd_device_version_reply</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, cmd.o(i.cmd_device_version_reply))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cmd_device_version_reply &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdReceiveBody
</UL>

<P><STRONG><a name="[194]"></a>cmd_general</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, cmd.o(i.cmd_general))
<BR><BR>[Stack]<UL><LI>Max Depth = 1372<LI>Call Chain = cmd_general &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_stop
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_send_stop
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_reset
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_error
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_device_version
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_cmd_sign_on
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_clear_error
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[174]"></a>cmd_get_device_id_reply</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cmd.o(i.cmd_get_device_id_reply))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdReceiveBody
</UL>

<P><STRONG><a name="[66b]"></a>cmd_get_device_version_pkg</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, cmd.o(i.cmd_get_device_version_pkg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cmd_get_device_version_pkg &rArr; isAllowLssued
</UL>
<BR>[Calls]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isAllowLssued
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
</UL>

<P><STRONG><a name="[182]"></a>cmd_get_error</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cmd.o(i.cmd_get_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_get_error &rArr; cmd_general &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_general
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[58a]"></a>cmd_get_error_pkg</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, cmd.o(i.cmd_get_error_pkg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cmd_get_error_pkg &rArr; isAllowLssued
</UL>
<BR>[Calls]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isAllowLssued
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
</UL>

<P><STRONG><a name="[171]"></a>cmd_get_error_reply</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cmd.o(i.cmd_get_error_reply))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdReceiveBody
</UL>

<P><STRONG><a name="[191]"></a>cmd_open_loop</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, cmd.o(i.cmd_open_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_open_loop &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[181]"></a>cmd_private_access</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, cmd.o(i.cmd_private_access))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_private_access &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[18d]"></a>cmd_protect</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, cmd.o(i.cmd_protect))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = cmd_protect &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[184]"></a>cmd_read_prm</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, cmd.o(i.cmd_read_prm))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_read_prm &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdSendBody
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[186]"></a>cmd_read_prv</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, cmd.o(i.cmd_read_prv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_read_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[180]"></a>cmd_reset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cmd.o(i.cmd_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_reset &rArr; cmd_general &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_general
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[189]"></a>cmd_send_start</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, cmd.o(i.cmd_send_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 1372<LI>Call Chain = cmd_send_start &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdSendBody
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[200]"></a>cmd_send_start_pkg</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, cmd.o(i.cmd_send_start_pkg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cmd_send_start_pkg &rArr; isAllowLssued
</UL>
<BR>[Calls]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isAllowLssued
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestLeavePageCheckCycle
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInteractionWithPRM
</UL>

<P><STRONG><a name="[18a]"></a>cmd_send_stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cmd.o(i.cmd_send_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_send_stop &rArr; cmd_general &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_general
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdSendBody
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[193]"></a>cmd_set_device_id</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, cmd.o(i.cmd_set_device_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_set_device_id &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[18b]"></a>cmd_set_tare</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, cmd.o(i.cmd_set_tare))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = cmd_set_tare &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[5f0]"></a>cmd_set_tare_pkg</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, cmd.o(i.cmd_set_tare_pkg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cmd_set_tare_pkg &rArr; isAllowLssued
</UL>
<BR>[Calls]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isAllowLssued
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChannelTareCmd
</UL>

<P><STRONG><a name="[172]"></a>cmd_set_tare_reply</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cmd.o(i.cmd_set_tare_reply))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdReceiveBody
</UL>

<P><STRONG><a name="[188]"></a>cmd_sign_off</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, cmd.o(i.cmd_sign_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 1372<LI>Call Chain = cmd_sign_off &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[190]"></a>cmd_step_norm_v</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, cmd.o(i.cmd_step_norm_v))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412<LI>Call Chain = cmd_step_norm_v &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[18e]"></a>cmd_stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cmd.o(i.cmd_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = cmd_stop &rArr; cmd_general &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_general
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[192]"></a>cmd_switch</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, cmd.o(i.cmd_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = cmd_switch &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[5f2]"></a>cmd_switch_pkg</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, cmd.o(i.cmd_switch_pkg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = cmd_switch_pkg &rArr; isAllowLssued
</UL>
<BR>[Calls]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isAllowLssued
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendClosePumpCmd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOpenPumpCmd
</UL>

<P><STRONG><a name="[185]"></a>cmd_write_prm</STRONG> (Thumb, 72 bytes, Stack size 232 bytes, cmd.o(i.cmd_write_prm))
<BR><BR>[Stack]<UL><LI>Max Depth = 1588<LI>Call Chain = cmd_write_prm &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdSendBody
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[187]"></a>cmd_write_prv</STRONG> (Thumb, 72 bytes, Stack size 232 bytes, cmd.o(i.cmd_write_prv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1588<LI>Call Chain = cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
</UL>

<P><STRONG><a name="[267]"></a>comm_cycle</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, cmd.o(i.comm_cycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1652<LI>Call Chain = comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_cmd
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_check
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_cycle
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetPackageCycle
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommucationLampStart
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdMutualBody
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangePageInit
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCM_CmdSendCycle
</UL>

<P><STRONG><a name="[20b]"></a>ctrl_max_cnt_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, prm.o(i.ctrl_max_cnt_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[20c]"></a>ctrl_max_one_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, prm.o(i.ctrl_max_one_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[20a]"></a>ctrl_max_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, prm.o(i.ctrl_max_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[20d]"></a>ctrl_min_one_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, prm.o(i.ctrl_min_one_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[75a]"></a>date_get</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, bsp_pcf8563.o(i.date_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = date_get &rArr; pcf8563_get &rArr; i2c_recv_byte &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>

<P><STRONG><a name="[75d]"></a>days_in_year</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, bsp_date.o(i.days_in_year))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = days_in_year
</UL>
<BR>[Called By]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;days_interval
</UL>

<P><STRONG><a name="[75c]"></a>days_interval</STRONG> (Thumb, 144 bytes, Stack size 44 bytes, bsp_date.o(i.days_interval))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = days_interval &rArr; days_in_year
</UL>
<BR>[Calls]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;days_in_year
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expire_judge
</UL>

<P><STRONG><a name="[574]"></a>devc_ip_get</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, prm.o(i.devc_ip_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = devc_ip_get
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterReadParameter
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
</UL>

<P><STRONG><a name="[576]"></a>devc_ip_set</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, prm.o(i.devc_ip_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = devc_ip_set
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterWriteParameter
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIPAddr
</UL>

<P><STRONG><a name="[3c7]"></a>devc_token_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, prm.o(i.devc_token_get))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModelType
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDefaultParameter
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectReadParameter
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
</UL>

<P><STRONG><a name="[56c]"></a>devc_token_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, prm.o(i.devc_token_set))
<BR><BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectWriteParameter
</UL>

<P><STRONG><a name="[76d]"></a>disk_initialize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = disk_initialize &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[7ee]"></a>disk_ioctl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[76e]"></a>disk_read</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = disk_read &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReadOperation
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Read10
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[79c]"></a>disk_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diskio.o(i.disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[76f]"></a>disk_write</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReadOperation
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Write10
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[287]"></a>disp_syn</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_lcd.o(i.disp_syn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disp_syn
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageInit
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicStrength
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSpeed
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicPeak
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicForce
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDisplacement
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDeform
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibationInit
</UL>

<P><STRONG><a name="[5b2]"></a>disp_value</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, bsp_lcd.o(i.disp_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = disp_value &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2str
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48_char
</UL>
<BR>[Called By]<UL><LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicStrength
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSpeed
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicPeak
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicForce
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDisplacement
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDeform
</UL>

<P><STRONG><a name="[35f]"></a>dvc_active_date_get</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, active.o(i.dvc_active_date_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dvc_active_date_get &rArr; bcd2val_16
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd2val_8
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd2val_32
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd2val_16
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expire_judge
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;active_product
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowActiveDate
</UL>

<P><STRONG><a name="[72c]"></a>dvc_active_date_set</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, active.o(i.dvc_active_date_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = dvc_active_date_set &rArr; val2bcd_16
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;val2bcd_16
</UL>
<BR>[Called By]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;active_product
</UL>

<P><STRONG><a name="[72b]"></a>dvc_active_set</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, active.o(i.dvc_active_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dvc_active_set
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
</UL>
<BR>[Called By]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;active_product
</UL>

<P><STRONG><a name="[72a]"></a>dvc_expire_day_get</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, active.o(i.dvc_expire_day_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dvc_expire_day_get
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expire_judge
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;active_product
</UL>

<P><STRONG><a name="[72e]"></a>dvc_expire_day_set</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, active.o(i.dvc_expire_day_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dvc_expire_day_set
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
</UL>
<BR>[Called By]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;active_product
</UL>

<P><STRONG><a name="[776]"></a>dvc_preuse_date_get</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, active.o(i.dvc_preuse_date_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dvc_preuse_date_get &rArr; bcd2val_16
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd2val_8
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd2val_32
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd2val_16
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expire_judge
</UL>

<P><STRONG><a name="[72d]"></a>dvc_preuse_date_set</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, active.o(i.dvc_preuse_date_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = dvc_preuse_date_set &rArr; val2bcd_16
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;val2bcd_16
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expire_judge
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;active_product
</UL>

<P><STRONG><a name="[65f]"></a>dvc_product_id_get</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, active.o(i.dvc_product_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = dvc_product_id_get &rArr; bcd2val_32
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd2val_32
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd2str_32
</UL>
<BR>[Called By]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;active_product
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveReadParameter
</UL>

<P><STRONG><a name="[65e]"></a>dvc_product_id_set</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, active.o(i.dvc_product_id_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = dvc_product_id_set &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str2bcd_32
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveReadParameter
</UL>

<P><STRONG><a name="[779]"></a>dvc_test_active</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, active.o(i.dvc_test_active))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dvc_test_active
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expire_judge
</UL>

<P><STRONG><a name="[77a]"></a>etharp_arp_input</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, etharp.o(i.etharp_arp_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = etharp_arp_input &rArr; update_arp_entry &rArr; find_entry &rArr; free_etharp_q &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_arp_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>

<P><STRONG><a name="[77d]"></a>etharp_ip_input</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, etharp.o(i.etharp_ip_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = etharp_ip_input &rArr; update_arp_entry &rArr; find_entry &rArr; free_etharp_q &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_arp_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>

<P><STRONG><a name="[9d]"></a>etharp_output</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, etharp.o(i.etharp_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = etharp_output &rArr; etharp_query &rArr; etharp_request &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addr_isbroadcast
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(i.ethernetif_init)
</UL>
<P><STRONG><a name="[781]"></a>etharp_query</STRONG> (Thumb, 436 bytes, Stack size 40 bytes, etharp.o(i.etharp_query))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = etharp_query &rArr; etharp_request &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addr_isbroadcast
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_entry
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[784]"></a>etharp_request</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, etharp.o(i.etharp_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = etharp_request &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
</UL>

<P><STRONG><a name="[512]"></a>etharp_tmr</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, etharp.o(i.etharp_tmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = etharp_tmr &rArr; free_etharp_q &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_etharp_q
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Periodic_Handle
</UL>

<P><STRONG><a name="[9a]"></a>ethernet_input</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, etharp.o(i.ethernet_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = ethernet_input &rArr; ip_input &rArr; tcp_input &rArr; tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_ip_input
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netconf.o(i.bsp_InitEthernet)
</UL>
<P><STRONG><a name="[9b]"></a>ethernetif_init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ethernetif.o(i.ethernetif_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = ethernetif_init &rArr; low_level_init &rArr; ETH_Start &rArr; ETH_MACTransmissionCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netconf.o(i.bsp_InitEthernet)
</UL>
<P><STRONG><a name="[513]"></a>ethernetif_input</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ethernetif.o(i.ethernetif_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = ethernetif_input &rArr; low_level_input &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Pkt_Handle
</UL>

<P><STRONG><a name="[409]"></a>expire_judge</STRONG> (Thumb, 184 bytes, Stack size 64 bytes, active.o(i.expire_judge))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444<LI>Call Chain = expire_judge &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;days_interval
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_date_get
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_test_active
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_preuse_date_set
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_preuse_date_get
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_expire_day_get
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeActiveStatus
</UL>

<P><STRONG><a name="[582]"></a>f_close</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ff.o(i.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = f_close &rArr; f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvBackupWithDate
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmBackupWithDate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmBackupWithDate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCoordinatePoint
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_exist
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_save
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_show_image
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCoordinatePoint
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_recover
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_recover
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_recover
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvRecoverWithDate
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmRecoverWithDate
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmRecoverWithDate
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_backup
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_backup
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_backup
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font32
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font24
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font20
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font16
</UL>

<P><STRONG><a name="[790]"></a>f_getfree</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, ff.o(i.f_getfree))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_free_space
</UL>

<P><STRONG><a name="[792]"></a>f_lseek</STRONG> (Thumb, 684 bytes, Stack size 64 bytes, ff.o(i.f_lseek))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font32
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font24
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font20
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font16
</UL>

<P><STRONG><a name="[57f]"></a>f_mkdir</STRONG> (Thumb, 354 bytes, Stack size 88 bytes, ff.o(i.f_mkdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvBackupWithDate
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmBackupWithDate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmBackupWithDate
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_save
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCoordinatePoint
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_backup
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_backup
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_backup
</UL>

<P><STRONG><a name="[739]"></a>f_mount</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, ff.o(i.f_mount))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitUSB
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitFont
</UL>

<P><STRONG><a name="[580]"></a>f_open</STRONG> (Thumb, 360 bytes, Stack size 88 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvBackupWithDate
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmBackupWithDate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmBackupWithDate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCoordinatePoint
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_exist
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_save
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_show_image
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCoordinatePoint
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_recover
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_recover
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_recover
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvRecoverWithDate
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmRecoverWithDate
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmRecoverWithDate
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_backup
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_backup
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_backup
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font32
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font24
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font20
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font16
</UL>

<P><STRONG><a name="[13d]"></a>f_opendir</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, ff.o(i.f_opendir))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvBackupWithDate
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmBackupWithDate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmBackupWithDate
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBackUpFileExist
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_date
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_sn
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCoordinateFolder
</UL>

<P><STRONG><a name="[584]"></a>f_read</STRONG> (Thumb, 432 bytes, Stack size 64 bytes, ff.o(i.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCoordinatePoint
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_show_image
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_recover
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_recover
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_recover
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvRecoverWithDate
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmRecoverWithDate
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmRecoverWithDate
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font32
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font24
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font20
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font16
</UL>

<P><STRONG><a name="[224]"></a>f_readdir</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, ff.o(i.f_readdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_date
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_sn
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCoordinateFolder
</UL>

<P><STRONG><a name="[5f6]"></a>f_stat</STRONG> (Thumb, 64 bytes, Stack size 72 bytes, ff.o(i.f_stat))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = f_stat &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReportSaveTime
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurveSaveTime
</UL>

<P><STRONG><a name="[78e]"></a>f_sync</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, ff.o(i.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[225]"></a>f_unlink</STRONG> (Thumb, 170 bytes, Stack size 104 bytes, ff.o(i.f_unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_delete
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCoordinateFolder
</UL>

<P><STRONG><a name="[5f7]"></a>f_utime</STRONG> (Thumb, 90 bytes, Stack size 72 bytes, ff.o(i.f_utime))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = f_utime &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReportSaveTime
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurveSaveTime
</UL>

<P><STRONG><a name="[581]"></a>f_write</STRONG> (Thumb, 490 bytes, Stack size 64 bytes, ff.o(i.f_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvBackupWithDate
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmBackupWithDate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmBackupWithDate
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_save
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCoordinatePoint
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_backup
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_backup
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_backup
</UL>

<P><STRONG><a name="[757]"></a>ff_convert</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ccsbcs.o(i.ff_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[751]"></a>ff_wtoupper</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ccsbcs.o(i.ff_wtoupper))
<BR><BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[770]"></a>float2str</STRONG> (Thumb, 604 bytes, Stack size 128 bytes, ustring.o(i.float2str))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_value
</UL>

<P><STRONG><a name="[1b7]"></a>floattochar</STRONG> (Thumb, 100 bytes, Stack size 88 bytes, tools.o(i.floattochar))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2str
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveStrChar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestUpYieldStrength
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestUpYieldForce
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxStrength
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForceTotalElongation
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForceAllExtend
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForce
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestDownYieldStrength
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestDownYieldForce
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteForce
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteAvailStrength
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteAvailForce
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportReadParameter
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterReadParameter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterReadParameter
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPullData
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterGetConvertArea
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterAccordRoundDiameterGetCutAreaProcess
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteStrength
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteForce
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDisPlacement
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeviation
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeform
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationReadParameter
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
</UL>

<P><STRONG><a name="[99]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, bsp_uart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332<LI>Call Chain = fputc &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[7df]"></a>fstime2tTime</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bsp_date.o(i.fstime2tTime))
<BR><BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_date
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_sn
</UL>

<P><STRONG><a name="[6ac]"></a>get_crc16</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bsp_crc16.o(i.get_crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTConvUDPFormate
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_Check
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDPConvUSARTFormate
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_check
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_package
</UL>

<P><STRONG><a name="[754]"></a>get_fat</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[794]"></a>get_fattime</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, diskio.o(i.get_fattime))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = get_fattime &rArr; time_get &rArr; pcf8563_get &rArr; i2c_recv_byte &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_get
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;date_get
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[66e]"></a>get_free_space</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, report.o(i.get_free_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = get_free_space &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
</UL>

<P><STRONG><a name="[14f]"></a>get_pcm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pcm.o(i.get_pcm))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSystemParameterIsNull
</UL>

<P><STRONG><a name="[151]"></a>get_prm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, prm.o(i.get_prm))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSystemParameterIsNull
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_product_id_set
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_product_id_get
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_date_get
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_test_active
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_preuse_date_set
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_preuse_date_get
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_expire_day_set
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_expire_day_get
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_set
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_date_set
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePrmParameterInit
</UL>

<P><STRONG><a name="[152]"></a>get_prv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, prm.o(i.get_prv))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSystemParameterIsNull
</UL>

<P><STRONG><a name="[5f9]"></a>get_smpl_spd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cmd.o(i.get_smpl_spd))
<BR><BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentFHSpeed
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentWYSpeed
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentBXSpeed
</UL>

<P><STRONG><a name="[7ec]"></a>get_smpl_tab</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, prm.o(i.get_smpl_tab))
<BR><BR>[Called By]<UL><LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_cal
</UL>

<P><STRONG><a name="[29d]"></a>get_smpl_value</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cmd.o(i.get_smpl_value))
<BR><BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetDeform
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineRedrawJudgeCondition
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineJudgeCondition
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineBodyCycle
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestLoadCoreCycle
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestDeformCoreCycle
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKL_TestBody
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentForce
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentDispalcement
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentDeform
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeBreakCalculateCycle
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentStrength
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteCoreCycle
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spd_cal_cycle
</UL>

<P><STRONG><a name="[d4]"></a>get_time</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_date.o(i.get_time))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvBackupWithDate
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmBackupWithDate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmBackupWithDate
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoBackUpSystem
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchReadParameter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateReadParameter
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSystemTime
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeActiveStatus
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowSystemDate
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveActiveProcess
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
</UL>

<P><STRONG><a name="[66d]"></a>hex2str_16</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ustring.o(i.hex2str_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hex2str_16
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
</UL>

<P><STRONG><a name="[65d]"></a>hex2str_32</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, ustring.o(i.hex2str_32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hex2str_32
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveReadParameter
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
</UL>

<P><STRONG><a name="[734]"></a>htonl</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, inet.o(i.htonl))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_set_header
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
</UL>

<P><STRONG><a name="[77b]"></a>htons</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, inet.o(i.htons))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_set_header
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
</UL>

<P><STRONG><a name="[79f]"></a>i2_start</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bsp_pcf8563.o(i.i2_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = i2_start &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_set
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_get
</UL>

<P><STRONG><a name="[7a0]"></a>i2_stop</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bsp_pcf8563.o(i.i2_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = i2_stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_set
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_get
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_ack
</UL>

<P><STRONG><a name="[73d]"></a>i2c_init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bsp_pcf8563.o(i.i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = i2c_init &rArr; i2c_mastar &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_mastar
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitPcf8563
</UL>

<P><STRONG><a name="[7a1]"></a>i2c_mastar</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bsp_pcf8563.o(i.i2c_mastar))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = i2c_mastar &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_ack
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_recv_byte
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>

<P><STRONG><a name="[7a2]"></a>i2c_recv_byte</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp_pcf8563.o(i.i2c_recv_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = i2c_recv_byte &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_mastar
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_get
</UL>

<P><STRONG><a name="[7a4]"></a>i2c_send_ack</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_pcf8563.o(i.i2c_send_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = i2c_send_ack &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_get
</UL>

<P><STRONG><a name="[7a5]"></a>i2c_send_notack</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_pcf8563.o(i.i2c_send_notack))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = i2c_send_notack &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_get
</UL>

<P><STRONG><a name="[7a6]"></a>i2c_sendbyte</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, bsp_pcf8563.o(i.i2c_sendbyte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = i2c_sendbyte &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_set
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_get
</UL>

<P><STRONG><a name="[7a3]"></a>i2c_slave</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, bsp_pcf8563.o(i.i2c_slave))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_ack
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_recv_byte
</UL>

<P><STRONG><a name="[7a7]"></a>i2c_wait_ack</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_pcf8563.o(i.i2c_wait_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = i2c_wait_ack &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_mastar
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2_stop
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_set
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_get
</UL>

<P><STRONG><a name="[518]"></a>iSAutoPrintReport</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, testafterdispose.o(i.iSAutoPrintReport))
<BR><BR>[Called By]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAutoPrintReportProcess
</UL>

<P><STRONG><a name="[7a8]"></a>icmp_dest_unreach</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, icmp.o(i.icmp_dest_unreach))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = icmp_dest_unreach &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>
<BR>[Called By]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[7aa]"></a>icmp_input</STRONG> (Thumb, 404 bytes, Stack size 56 bytes, icmp.o(i.icmp_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = icmp_input &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addr_isbroadcast
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pbuf
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
</UL>
<BR>[Called By]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[7b0]"></a>icmp_time_exceeded</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, icmp.o(i.icmp_time_exceeded))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>
<BR>[Called By]<UL><LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>

<P><STRONG><a name="[169]"></a>index_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, protocol.o(i.index_get))
<BR><BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdSendBody
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdMutualBody
</UL>

<P><STRONG><a name="[7ae]"></a>inet_chksum</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, inet_chksum.o(i.inet_chksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = inet_chksum &rArr; lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>

<P><STRONG><a name="[7ac]"></a>inet_chksum_pbuf</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, inet_chksum.o(i.inet_chksum_pbuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = inet_chksum_pbuf &rArr; lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[77f]"></a>ip_addr_isbroadcast</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, ip_addr.o(i.ip_addr_isbroadcast))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ip_addr_isbroadcast
</UL>
<BR>[Called By]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_arp_entry
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[7b2]"></a>ip_frag</STRONG> (Thumb, 326 bytes, Stack size 72 bytes, ip_frag.o(i.ip_frag))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
</UL>

<P><STRONG><a name="[78a]"></a>ip_input</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, ip.o(i.ip_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = ip_input &rArr; tcp_input &rArr; tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addr_isbroadcast
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_input
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_is_up
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>

<P><STRONG><a name="[7af]"></a>ip_output</STRONG> (Thumb, 52 bytes, Stack size 48 bytes, ip.o(i.ip_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
</UL>
<BR>[Called By]<UL><LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
</UL>

<P><STRONG><a name="[7ad]"></a>ip_output_if</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, ip.o(i.ip_output_if))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
</UL>

<P><STRONG><a name="[7b7]"></a>ip_reass</STRONG> (Thumb, 400 bytes, Stack size 48 bytes, ip_frag.o(i.ip_reass))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = ip_reass &rArr; ip_reass_enqueue_new_datagram &rArr; ip_reass_remove_oldest_datagram &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[7bb]"></a>ip_route</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ip.o(i.ip_route))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ip_route
</UL>
<BR>[Calls]<UL><LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_is_up
</UL>
<BR>[Called By]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
</UL>

<P><STRONG><a name="[69b]"></a>isAgainSearchReport</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, searchreport.o(i.isAgainSearchReport))
<BR><BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportInit
</UL>

<P><STRONG><a name="[231]"></a>isShowDetailReport</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, testreport.o(i.isShowDetailReport))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportInit
</UL>

<P><STRONG><a name="[729]"></a>isqrt</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, isqrt.o(i.isqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;active_product
</UL>

<P><STRONG><a name="[7c3]"></a>lcd_ascin20</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_ascin20))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcd_ascin20 &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font20
</UL>

<P><STRONG><a name="[2bf]"></a>lcd_clear</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bsp_lcd.o(i.lcd_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lcd_clear &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Geometric_Coordinate
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_square_fill
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>

<P><STRONG><a name="[7c4]"></a>lcd_draw16x16</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_draw16x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcd_draw16x16 &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font16
</UL>

<P><STRONG><a name="[7c5]"></a>lcd_draw16x8</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_draw16x8))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcd_draw16x8 &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font16
</UL>

<P><STRONG><a name="[7c6]"></a>lcd_draw20x20</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_draw20x20))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcd_draw20x20 &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font20
</UL>

<P><STRONG><a name="[7c7]"></a>lcd_draw24x12</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_draw24x12))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcd_draw24x12 &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font24
</UL>

<P><STRONG><a name="[7c8]"></a>lcd_draw24x24</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_draw24x24))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcd_draw24x24 &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font24
</UL>

<P><STRONG><a name="[7c9]"></a>lcd_draw32x16</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_draw32x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcd_draw32x16 &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font32
</UL>

<P><STRONG><a name="[7ca]"></a>lcd_draw32x32</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_draw32x32))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcd_draw32x32 &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_err
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font32
</UL>

<P><STRONG><a name="[243]"></a>lcd_draw_circle</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_draw_circle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lcd_draw_circle &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_point
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCircleMark
</UL>

<P><STRONG><a name="[7cc]"></a>lcd_draw_dashed</STRONG> (Thumb, 270 bytes, Stack size 48 bytes, bsp_lcd.o(i.lcd_draw_dashed))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lcd_draw_dashed &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_dashed_frame
</UL>

<P><STRONG><a name="[2ff]"></a>lcd_draw_dashed_frame</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, bsp_lcd.o(i.lcd_draw_dashed_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = lcd_draw_dashed_frame &rArr; lcd_draw_dashed &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_dashed
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCoordinate
</UL>

<P><STRONG><a name="[1ec]"></a>lcd_draw_line</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, bsp_lcd.o(i.lcd_draw_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_point
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_rect
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoordinateRedrawLine
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoordinateDrawLine
</UL>

<P><STRONG><a name="[7cb]"></a>lcd_draw_point</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bsp_lcd.o(i.lcd_draw_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_line
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_circle
</UL>

<P><STRONG><a name="[2f7]"></a>lcd_draw_rect</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_draw_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_line
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReportOtherField
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrameWithTitle
</UL>

<P><STRONG><a name="[156]"></a>lcd_fill</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, bsp_lcd.o(i.lcd_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Geometric_Coordinate
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_square_fill
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageStatusBarField
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageShowFrame
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageIndicateWindowOneField
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTestResultArea
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearMainPageCoordinate
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProcessBody
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShowCurPageInfomation
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportShowCurPageInfomation
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestReportOneRowOneLevelMenuContent
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneRowOneLevelMenuContent
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelectDrawOneRectangleFrame
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TimeDateDataOneRowOneLevelMenuContent
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableSegmentsFieldContent
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableOneFieldContent
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneRowOneLevelMenuContent
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemSetDrawOneRectangleFrame
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuCue
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuContent
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicUSBIco
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicEthernetIco
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTestSaveProgressBar
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCoordinate
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultOneFieldTableContent
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultAvailValueOneFieldTableContent
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestResultOneRowOneLevelMenuContent
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneFieldContent
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationStatusBarField
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationShowFrame
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationIndicateWindowOneField
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTestResultArea
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterSegmentsFieldContent
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterOneFieldContent
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemPasswordOneRowOneLevelMenuContent
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SoftActiveOneRowOneLevelMenuContent
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_OnlineParameterDataOneRowOneLevelMenuContent
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UnitSelectOneRowOneLevelMenuContent
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterDataOneRowOneLevelMenuContent
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ModelSelectDrawOneRectangleFrame
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdvanceParameterDrawOneRectangleFrame
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestAfterDisposeOneRowOneLevelMenuContent
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTitleFrame
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemInfomationOneRowOneLevelMenuContent
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneRowOneLevelMenuContent
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemBackupOneRowOneLevelMenuContent
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestTypeSelectDrawOneRectangleFrame
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChannelSelectDrawOneRectangleFrame
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_PasswordDataOneRowOneLevelMenuContent
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_dashed
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrameWithTitle
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowOneRowTwoLevelMenu
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectWindowsDrawOneRowOneLevelMenu
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTwoLevelMenuPage
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PutinReady
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearShortCutMenuArea
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelinkPRM
</UL>

<P><STRONG><a name="[244]"></a>lcd_fill_circle</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, bsp_lcd.o(i.lcd_fill_circle))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lcd_fill_circle &rArr; LCD_HL_DrawHLine &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HL_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCircleMark
</UL>

<P><STRONG><a name="[2f8]"></a>lcd_font16</STRONG> (Thumb, 300 bytes, Stack size 112 bytes, bsp_lcd.o(i.lcd_font16))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw16x8
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw16x16
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitFont
</UL>

<P><STRONG><a name="[2fa]"></a>lcd_font20</STRONG> (Thumb, 220 bytes, Stack size 216 bytes, bsp_lcd.o(i.lcd_font20))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw20x20
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_ascin20
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr20At
</UL>

<P><STRONG><a name="[2fb]"></a>lcd_font24</STRONG> (Thumb, 296 bytes, Stack size 160 bytes, bsp_lcd.o(i.lcd_font24))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw24x24
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw24x12
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24Ht
</UL>

<P><STRONG><a name="[2fd]"></a>lcd_font32</STRONG> (Thumb, 300 bytes, Stack size 208 bytes, bsp_lcd.o(i.lcd_font32))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw32x32
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw32x16
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr32At
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr32Ht
</UL>

<P><STRONG><a name="[73b]"></a>lcd_gpio_init</STRONG> (Thumb, 362 bytes, Stack size 16 bytes, bsp_lcd.o(i.lcd_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = lcd_gpio_init &rArr; RCC_AHB3PeriphClockCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLCD
</UL>

<P><STRONG><a name="[73c]"></a>lcd_hard_reset</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp_lcd.o(i.lcd_hard_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lcd_hard_reset &rArr; bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLCD
</UL>

<P><STRONG><a name="[73a]"></a>lcd_mem_err</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_mem_err))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lcd_mem_err &rArr; lcd_draw32x32 &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw32x32
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitFont
</UL>

<P><STRONG><a name="[5b1]"></a>lcd_num48</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_num48))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lcd_num48 &rArr; lcd_num48_char &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48_char
</UL>
<BR>[Called By]<UL><LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicStrength
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSpeed
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicPeak
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicForce
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDisplacement
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDeform
</UL>

<P><STRONG><a name="[771]"></a>lcd_num48_char</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, bsp_lcd.o(i.lcd_num48_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcd_num48_char &rArr; Active_Window &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_num48
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_value
</UL>

<P><STRONG><a name="[241]"></a>lcd_show_image</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, bsp_lcd.o(i.lcd_show_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = lcd_show_image &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageLoadPageInfomation
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShowCurPageInfomation
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportShowCurPageInfomation
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicUSBIco
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicEthernetIco
</UL>

<P><STRONG><a name="[58f]"></a>link_cycle</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, cmd.o(i.link_cycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1604<LI>Call Chain = link_cycle &rArr; LinkCmdSendBody &rArr; cmd_write_prm &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_cmd
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_check
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetPackageCycle
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdSendBody
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdReceiveBody
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelinkPRM
</UL>

<P><STRONG><a name="[58e]"></a>link_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, cmd.o(i.link_init))
<BR><BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnLink
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelinkPRM
</UL>

<P><STRONG><a name="[75]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = main &rArr; PageProcessCycle &rArr; ExchangePageInit &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystem
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageProcessCycle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7d2]"></a>mem_free</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, mem.o(i.mem_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plug_holes
</UL>
<BR>[Called By]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>

<P><STRONG><a name="[732]"></a>mem_init</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, mem.o(i.mem_init))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
</UL>

<P><STRONG><a name="[78b]"></a>mem_malloc</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, mem.o(i.mem_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mem_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>

<P><STRONG><a name="[7d9]"></a>mem_realloc</STRONG> (Thumb, 316 bytes, Stack size 24 bytes, mem.o(i.mem_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
</UL>

<P><STRONG><a name="[79d]"></a>memp_free</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, memp.o(i.memp_free))
<BR><BR>[Called By]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_arp_entry
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_etharp_q
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
</UL>

<P><STRONG><a name="[733]"></a>memp_init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, memp.o(i.memp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
</UL>

<P><STRONG><a name="[787]"></a>memp_malloc</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, memp.o(i.memp_malloc))
<BR><BR>[Called By]<UL><LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
</UL>

<P><STRONG><a name="[735]"></a>netif_add</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, netif.o(i.netif_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = netif_add &rArr; netif_set_addr &rArr; netif_set_ipaddr &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
</UL>

<P><STRONG><a name="[7b6]"></a>netif_is_up</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, netif.o(i.netif_is_up))
<BR><BR>[Called By]<UL><LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[7d4]"></a>netif_set_addr</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, netif.o(i.netif_set_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = netif_set_addr &rArr; netif_set_ipaddr &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_netmask
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_gw
</UL>
<BR>[Called By]<UL><LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
</UL>

<P><STRONG><a name="[736]"></a>netif_set_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, netif.o(i.netif_set_default))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
</UL>

<P><STRONG><a name="[7d7]"></a>netif_set_gw</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, netif.o(i.netif_set_gw))
<BR><BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[7d5]"></a>netif_set_ipaddr</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, netif.o(i.netif_set_ipaddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = netif_set_ipaddr &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[7d6]"></a>netif_set_netmask</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, netif.o(i.netif_set_netmask))
<BR><BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[737]"></a>netif_set_up</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, netif.o(i.netif_set_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = netif_set_up &rArr; etharp_request &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
</UL>

<P><STRONG><a name="[74e]"></a>next_index</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, protocol.o(i.next_index))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_write_prv
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_write_prm
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_switch
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_step_norm_v
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_sign_off
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_tare
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_device_id
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_send_start
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_read_prv
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_read_prm
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_protect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_private_access
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_open_loop
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_general
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_ctrl_mode
</UL>

<P><STRONG><a name="[780]"></a>ntohl</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, inet.o(i.ntohl))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ntohl
</UL>
<BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htonl
</UL>
<BR>[Called By]<UL><LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_arp_entry
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
</UL>

<P><STRONG><a name="[7ab]"></a>ntohs</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, inet.o(i.ntohs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ntohs
</UL>
<BR>[Calls]<UL><LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
</UL>
<BR>[Called By]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_input
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_set_header
</UL>

<P><STRONG><a name="[fb]"></a>numtochar</STRONG> (Thumb, 290 bytes, Stack size 56 bytes, tools.o(i.numtochar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = numtochar &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveStrChar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestSerial
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportReadParameter
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableReadParameter
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableKeyProcess
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterReadParameter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterReadParameter
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPullData
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteSerial
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteCode
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationReadParameter
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPointForceAutoFill
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterReadParameter
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeReadParameter
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCodeFromPrm
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
</UL>

<P><STRONG><a name="[6b1]"></a>pbuf_alloc</STRONG> (Thumb, 542 bytes, Stack size 40 bytes, pbuf.o(i.pbuf_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_SendStr
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_init
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>

<P><STRONG><a name="[7c0]"></a>pbuf_cat</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, pbuf.o(i.pbuf_cat))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pbuf_cat
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
</UL>

<P><STRONG><a name="[7b5]"></a>pbuf_chain</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, pbuf.o(i.pbuf_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pbuf_chain &rArr; pbuf_cat
</UL>
<BR>[Calls]<UL><LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
</UL>
<BR>[Called By]<UL><LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>

<P><STRONG><a name="[7bc]"></a>pbuf_clen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pbuf.o(i.pbuf_clen))
<BR><BR>[Called By]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[785]"></a>pbuf_copy</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, pbuf.o(i.pbuf_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pbuf_copy &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[7b3]"></a>pbuf_copy_partial</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, pbuf.o(i.pbuf_copy_partial))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pbuf_copy_partial &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>

<P><STRONG><a name="[6b3]"></a>pbuf_free</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, pbuf.o(i.pbuf_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_SendStr
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_client_callback
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_init
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_arp_entry
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_etharp_q
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[77e]"></a>pbuf_header</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, pbuf.o(i.pbuf_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pbuf_header
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[7b4]"></a>pbuf_realloc</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, pbuf.o(i.pbuf_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = pbuf_realloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[786]"></a>pbuf_ref</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pbuf.o(i.pbuf_ref))
<BR><BR>[Called By]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
</UL>

<P><STRONG><a name="[75b]"></a>pcf8563_get</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, bsp_pcf8563.o(i.pcf8563_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pcf8563_get &rArr; i2c_recv_byte &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_ack
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sendbyte
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_notack
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_ack
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_recv_byte
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2_stop
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2_start
</UL>
<BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_get
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;date_get
</UL>

<P><STRONG><a name="[73e]"></a>pcf8563_set</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bsp_pcf8563.o(i.pcf8563_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pcf8563_set &rArr; i2c_wait_ack &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_ack
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sendbyte
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2_stop
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2_start
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitPcf8563
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_time_set
</UL>

<P><STRONG><a name="[7da]"></a>pcf8563_time_set</STRONG> (Thumb, 320 bytes, Stack size 32 bytes, bsp_pcf8563.o(i.pcf8563_time_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = pcf8563_time_set &rArr; pcf8563_set &rArr; i2c_wait_ack &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_set
</UL>

<P><STRONG><a name="[668]"></a>pcm_backup</STRONG> (Thumb, 180 bytes, Stack size 576 bytes, pcm.o(i.pcm_backup))
<BR><BR>[Stack]<UL><LI>Max Depth = 1060<LI>Call Chain = pcm_backup &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>
<BR>[Called By]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupUSBProcess
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupSDProcess
</UL>

<P><STRONG><a name="[3cc]"></a>pcm_hmi_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pcm.o(i.pcm_hmi_get))
<BR><BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestContent
</UL>

<P><STRONG><a name="[2bc]"></a>pcm_read</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, pcm.o(i.pcm_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = pcm_read &rArr; sf_ReadBuffer &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetupPage
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
</UL>

<P><STRONG><a name="[678]"></a>pcm_recover</STRONG> (Thumb, 176 bytes, Stack size 592 bytes, pcm.o(i.pcm_recover))
<BR><BR>[Stack]<UL><LI>Max Depth = 1076<LI>Call Chain = pcm_recover &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
</UL>

<P><STRONG><a name="[1ea]"></a>pcm_save</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, pcm.o(i.pcm_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckSerialRepeat
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMachineMatchTestType
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandlerDefaultPassword
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectLeavePageCheckCycle
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterWriteParameter
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterWriteParameter
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterInit
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterExchangeSampleShape
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordWriteParameter
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectWriteParameter
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDefaultParameter
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeWriteParameter
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupUSBProcess
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupSDProcess
</UL>

<P><STRONG><a name="[3cd]"></a>pcm_test_get</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pcm.o(i.pcm_test_get))
<BR><BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestContent
</UL>

<P><STRONG><a name="[595]"></a>print</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bsp_print.o(i.print))
<BR><BR>[Stack]<UL><LI>Max Depth = 1340<LI>Call Chain = print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPrintChar
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintWordsAndLineFeed
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintDottedLine
</UL>

<P><STRONG><a name="[1cd]"></a>print_chinese</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_print.o(i.print_chinese))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332<LI>Call Chain = print_chinese &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPrintChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigPrinterDefaultSet
</UL>

<P><STRONG><a name="[1ce]"></a>print_direct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_print.o(i.print_direct))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332<LI>Call Chain = print_direct &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPrintChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigPrinterDefaultSet
</UL>

<P><STRONG><a name="[596]"></a>print_enter</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_print.o(i.print_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332<LI>Call Chain = print_enter &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPrintChar
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintWordsAndLineFeed
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintRowSpace
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintDottedLine
</UL>

<P><STRONG><a name="[669]"></a>prm_backup</STRONG> (Thumb, 180 bytes, Stack size 576 bytes, prm.o(i.prm_backup))
<BR><BR>[Stack]<UL><LI>Max Depth = 1060<LI>Call Chain = prm_backup &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>
<BR>[Called By]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupUSBProcess
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupSDProcess
</UL>

<P><STRONG><a name="[2bd]"></a>prm_read</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, prm.o(i.prm_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = prm_read &rArr; sf_ReadBuffer &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetupPage
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitEthernet
</UL>

<P><STRONG><a name="[679]"></a>prm_recover</STRONG> (Thumb, 156 bytes, Stack size 608 bytes, prm.o(i.prm_recover))
<BR><BR>[Stack]<UL><LI>Max Depth = 1092<LI>Call Chain = prm_recover &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
</UL>

<P><STRONG><a name="[130]"></a>prm_save</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, prm.o(i.prm_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableWriteParameter
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterWriteParameter
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTableProcess
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expire_judge
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_product_id_set
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;active_product
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterWriteParameter
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDefaultParameter
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectWriteParameter
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupUSBProcess
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupSDProcess
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdReceiveBody
</UL>

<P><STRONG><a name="[66a]"></a>prv_backup</STRONG> (Thumb, 148 bytes, Stack size 576 bytes, prm.o(i.prv_backup))
<BR><BR>[Stack]<UL><LI>Max Depth = 1060<LI>Call Chain = prv_backup &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>
<BR>[Called By]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupUSBProcess
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupSDProcess
</UL>

<P><STRONG><a name="[2be]"></a>prv_read</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, prm.o(i.prv_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = prv_read &rArr; sf_ReadBuffer &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetupPage
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
</UL>

<P><STRONG><a name="[67a]"></a>prv_recover</STRONG> (Thumb, 88 bytes, Stack size 576 bytes, prm.o(i.prv_recover))
<BR><BR>[Stack]<UL><LI>Max Depth = 1060<LI>Call Chain = prv_recover &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
</UL>

<P><STRONG><a name="[2bb]"></a>prv_save</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, prm.o(i.prv_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = prv_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDefaultParameter
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupUSBProcess
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupSDProcess
</UL>

<P><STRONG><a name="[755]"></a>put_fat</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[7b8]"></a>raw_input</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, raw.o(i.raw_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = raw_input &rArr; ntohs
</UL>
<BR>[Calls]<UL><LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
</UL>
<BR>[Called By]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[170]"></a>reply_empty</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cmd.o(i.reply_empty))
<BR><BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdReceiveBody
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdReceiveBody
</UL>

<P><STRONG><a name="[228]"></a>report_delete</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, report.o(i.report_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = report_delete &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCurrentReport
</UL>

<P><STRONG><a name="[68a]"></a>report_exist</STRONG> (Thumb, 56 bytes, Stack size 624 bytes, report.o(i.report_exist))
<BR><BR>[Stack]<UL><LI>Max Depth = 1108<LI>Call Chain = report_exist &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterSerialAddOne
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckSerialRepeat
</UL>

<P><STRONG><a name="[1f5]"></a>report_read</STRONG> (Thumb, 84 bytes, Stack size 632 bytes, report.o(i.report_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 1116<LI>Call Chain = report_read &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageReadParameter
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePrintReport
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportReadParameter
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportConfig
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPrintOneReport
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportCurrentReport
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckSerialRepeat
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveShowReadParameter
</UL>

<P><STRONG><a name="[270]"></a>report_save</STRONG> (Thumb, 204 bytes, Stack size 632 bytes, report.o(i.report_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 1116<LI>Call Chain = report_save &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>
<BR>[Called By]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteWriteSDProcess
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportCurrentReport
</UL>

<P><STRONG><a name="[3cf]"></a>report_search_date</STRONG> (Thumb, 388 bytes, Stack size 136 bytes, report.o(i.report_search_date))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = report_search_date &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTime2fstime
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fstime2tTime
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDotNum
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestDataFromSD
</UL>

<P><STRONG><a name="[279]"></a>report_search_sn</STRONG> (Thumb, 408 bytes, Stack size 128 bytes, report.o(i.report_search_sn))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = report_search_sn &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fstime2tTime
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrstr
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDotNum
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindMatchSerialInfomation
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestDataFromSD
</UL>

<P><STRONG><a name="[6bc]"></a>sample_cycle</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, cmd.o(i.sample_cycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = sample_cycle &rArr; smpl_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_cal
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_size
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_body
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spd_cal_cycle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_cycle
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
</UL>

<P><STRONG><a name="[7e7]"></a>sf_EraseSector</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.sf_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = sf_EraseSector &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WriteEnable
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WaitForWriteEnd
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_AutoWritePage
</UL>

<P><STRONG><a name="[7e8]"></a>sf_PageWrite</STRONG> (Thumb, 316 bytes, Stack size 24 bytes, bsp_spi_flash.o(i.sf_PageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 1292<LI>Call Chain = sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WriteEnable
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WaitForWriteEnd
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_AutoWritePage
</UL>

<P><STRONG><a name="[7db]"></a>sf_ReadBuffer</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bsp_spi_flash.o(i.sf_ReadBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = sf_ReadBuffer &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_read
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_read
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_read
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_AutoWritePage
</UL>

<P><STRONG><a name="[7eb]"></a>sf_ReadID</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bsp_spi_flash.o(i.sf_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = sf_ReadID &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_ReadInfo
</UL>

<P><STRONG><a name="[73f]"></a>sf_ReadInfo</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.sf_ReadInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 1292<LI>Call Chain = sf_ReadInfo &rArr; sf_ReadID &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_ReadID
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSFlash
</UL>

<P><STRONG><a name="[7dc]"></a>sf_WriteBuffer</STRONG> (Thumb, 366 bytes, Stack size 40 bytes, bsp_spi_flash.o(i.sf_WriteBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 1372<LI>Call Chain = sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_AutoWritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_save
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
</UL>

<P><STRONG><a name="[7e2]"></a>smpl_cal</STRONG> (Thumb, 204 bytes, Stack size 28 bytes, prm.o(i.smpl_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = smpl_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_tab
</UL>
<BR>[Called By]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_cycle
</UL>

<P><STRONG><a name="[213]"></a>smpl_cof_ahead_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prm.o(i.smpl_cof_ahead_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[214]"></a>smpl_cof_break_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prm.o(i.smpl_cof_break_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[215]"></a>smpl_cof_spd_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prm.o(i.smpl_cof_spd_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[216]"></a>smpl_ctrl_crash_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prm.o(i.smpl_ctrl_crash_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[1e5]"></a>smpl_ctrl_entry_get</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prm.o(i.smpl_ctrl_entry_get))
<BR><BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestDeformCoreCycle
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterReadParameter
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteCoreCycle
</UL>

<P><STRONG><a name="[1e9]"></a>smpl_ctrl_entry_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prm.o(i.smpl_ctrl_entry_set))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterWriteParameter
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[212]"></a>smpl_ctrl_full_n_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prm.o(i.smpl_ctrl_full_n_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[14b]"></a>smpl_ctrl_full_p_get</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prm.o(i.smpl_ctrl_full_p_get))
<BR><BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageSaveCoordinateCurveToSD
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineRedrawJudgeCondition
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultCoordinate
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMainPageCoordinateDrawLine
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterReadParameter
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPointForceAutoFill
</UL>

<P><STRONG><a name="[1e8]"></a>smpl_ctrl_full_p_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prm.o(i.smpl_ctrl_full_p_set))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterWriteParameter
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[217]"></a>smpl_ctrl_overspeed_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prm.o(i.smpl_ctrl_overspeed_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[21c]"></a>smpl_pid_kd_set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, prm.o(i.smpl_pid_kd_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpl_pid_kd_set
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[21b]"></a>smpl_pid_ki_set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, prm.o(i.smpl_pid_ki_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpl_pid_ki_set
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[21a]"></a>smpl_pid_kp_set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, prm.o(i.smpl_pid_kp_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpl_pid_kp_set
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[219]"></a>smpl_pid_node_set</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, prm.o(i.smpl_pid_node_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpl_pid_node_set
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[218]"></a>smpl_pid_segs_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, prm.o(i.smpl_pid_segs_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[128]"></a>smpl_tab_code_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, prm.o(i.smpl_tab_code_get))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableReadParameter
</UL>

<P><STRONG><a name="[12f]"></a>smpl_tab_code_set</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, prm.o(i.smpl_tab_code_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpl_tab_code_set
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableWriteParameter
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTableProcess
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[10b]"></a>smpl_tab_num_get</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, prm.o(i.smpl_tab_num_get))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableReadParameter
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterReadParameter
</UL>

<P><STRONG><a name="[12d]"></a>smpl_tab_num_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, prm.o(i.smpl_tab_num_set))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableWriteParameter
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTableProcess
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[10c]"></a>smpl_tab_value_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, prm.o(i.smpl_tab_value_get))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableReadParameter
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterReadParameter
</UL>

<P><STRONG><a name="[12e]"></a>smpl_tab_value_set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, prm.o(i.smpl_tab_value_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpl_tab_value_set
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableWriteParameter
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTableProcess
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[173]"></a>smpl_tab_zero_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, prm.o(i.smpl_tab_zero_set))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdReceiveBody
</UL>

<P><STRONG><a name="[206]"></a>spcl_quick_down_set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, prm.o(i.spcl_quick_down_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[205]"></a>spcl_quick_up_set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, prm.o(i.spcl_quick_up_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[208]"></a>spcl_slow_down_set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, prm.o(i.spcl_slow_down_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[207]"></a>spcl_slow_up_set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, prm.o(i.spcl_slow_up_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[20e]"></a>spcl_unload_delay_set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, prm.o(i.spcl_unload_delay_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[211]"></a>spcl_valve_back_set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, prm.o(i.spcl_valve_back_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[20f]"></a>spcl_valve_init_set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, prm.o(i.spcl_valve_init_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[210]"></a>spcl_valve_middle_set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, prm.o(i.spcl_valve_middle_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[7ed]"></a>spd_cal</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, cmd.o(i.spd_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = spd_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spd_cal_cycle
</UL>

<P><STRONG><a name="[7e3]"></a>spd_cal_cycle</STRONG> (Thumb, 170 bytes, Stack size 4 bytes, cmd.o(i.spd_cal_cycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spd_cal_cycle &rArr; spd_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spd_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_cycle
</UL>

<P><STRONG><a name="[778]"></a>str2bcd_32</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ustring.o(i.str2bcd_32))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = str2bcd_32
</UL>
<BR>[Called By]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_product_id_set
</UL>

<P><STRONG><a name="[1d4]"></a>str2float</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, ustring.o(i.str2float))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = str2float &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterWriteParameter
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterCheckDataCycle
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterWriteParameter
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterGetConvertArea
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterAccordRoundDiameterGetCutAreaProcess
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePutinChars
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSampleSpecificationArea
</UL>

<P><STRONG><a name="[7dd]"></a>tTime2fstime</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_date.o(i.tTime2fstime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tTime2fstime
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_date
</UL>

<P><STRONG><a name="[23a]"></a>tTimeConvTimeFormate</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, tools.o(i.tTimeConvTimeFormate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = tTimeConvTimeFormate &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportReadParameter
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportReadParameter
</UL>

<P><STRONG><a name="[7d8]"></a>tcp_abandon</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, tcp.o(i.tcp_abandon))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_timewait
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_prio
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
</UL>

<P><STRONG><a name="[7f2]"></a>tcp_alloc</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, tcp.o(i.tcp_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_next_iss
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_timewait
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_prio
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
</UL>

<P><STRONG><a name="[7f6]"></a>tcp_close</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, tcp.o(i.tcp_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = tcp_close &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_ctrl
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
</UL>

<P><STRONG><a name="[7f9]"></a>tcp_eff_send_mss</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, tcp.o(i.tcp_eff_send_mss))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tcp_eff_send_mss &rArr; ip_route
</UL>
<BR>[Calls]<UL><LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
</UL>

<P><STRONG><a name="[7fa]"></a>tcp_enqueue</STRONG> (Thumb, 1068 bytes, Stack size 80 bytes, tcp_out.o(i.tcp_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = tcp_enqueue &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htonl
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_ctrl
</UL>

<P><STRONG><a name="[7fb]"></a>tcp_fasttmr</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, tcp.o(i.tcp_fasttmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = tcp_fasttmr &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>

<P><STRONG><a name="[7ba]"></a>tcp_input</STRONG> (Thumb, 1166 bytes, Stack size 48 bytes, tcp_in.o(i.tcp_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = tcp_input &rArr; tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addr_isbroadcast
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[7ff]"></a>tcp_keepalive</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, tcp_out.o(i.tcp_keepalive))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = tcp_keepalive &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htonl
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_set_header
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[7f5]"></a>tcp_next_iss</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tcp.o(i.tcp_next_iss))
<BR><BR>[Called By]<UL><LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>

<P><STRONG><a name="[7f8]"></a>tcp_output</STRONG> (Thumb, 610 bytes, Stack size 56 bytes, tcp_out.o(i.tcp_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htonl
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_set_header
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
</UL>
<BR>[Called By]<UL><LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
</UL>

<P><STRONG><a name="[804]"></a>tcp_pcb_purge</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, tcp.o(i.tcp_pcb_purge))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = tcp_pcb_purge &rArr; tcp_segs_free &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
</UL>

<P><STRONG><a name="[7ef]"></a>tcp_pcb_remove</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, tcp.o(i.tcp_pcb_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
</UL>
<BR>[Called By]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>

<P><STRONG><a name="[806]"></a>tcp_rexmit</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, tcp_out.o(i.tcp_rexmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = tcp_rexmit &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[808]"></a>tcp_rexmit_rto</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tcp_out.o(i.tcp_rexmit_rto))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = tcp_rexmit_rto &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[7f1]"></a>tcp_rst</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, tcp_out.o(i.tcp_rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = tcp_rst &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htonl
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
</UL>
<BR>[Called By]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>

<P><STRONG><a name="[803]"></a>tcp_seg_free</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, tcp.o(i.tcp_seg_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
</UL>

<P><STRONG><a name="[7f0]"></a>tcp_segs_free</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, tcp.o(i.tcp_segs_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = tcp_segs_free &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>

<P><STRONG><a name="[7f7]"></a>tcp_send_ctrl</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, tcp_out.o(i.tcp_send_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = tcp_send_ctrl &rArr; tcp_enqueue &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
</UL>

<P><STRONG><a name="[809]"></a>tcp_slowtmr</STRONG> (Thumb, 766 bytes, Stack size 32 bytes, tcp.o(i.tcp_slowtmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = tcp_slowtmr &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>

<P><STRONG><a name="[511]"></a>tcp_tmr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tcp.o(i.tcp_tmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = tcp_tmr &rArr; tcp_slowtmr &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Periodic_Handle
</UL>

<P><STRONG><a name="[807]"></a>tcp_update_rcv_ann_wnd</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, tcp.o(i.tcp_update_rcv_ann_wnd))
<BR><BR>[Called By]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[80a]"></a>tcp_zero_window_probe</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, tcp_out.o(i.tcp_zero_window_probe))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = tcp_zero_window_probe &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_set_header
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[d3]"></a>time_cycle</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_date.o(i.time_cycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = time_cycle &rArr; time_get &rArr; pcf8563_get &rArr; i2c_recv_byte &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_get
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;date_get
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvBackupWithDate
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmBackupWithDate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmBackupWithDate
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoBackUpSystem
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchReadParameter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateReadParameter
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSystemTime
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeActiveStatus
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowSystemDate
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveActiveProcess
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
</UL>

<P><STRONG><a name="[79e]"></a>time_get</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, bsp_pcf8563.o(i.time_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = time_get &rArr; pcf8563_get &rArr; i2c_recv_byte &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>

<P><STRONG><a name="[6a8]"></a>time_set</STRONG> (Thumb, 10 bytes, Stack size 16 bytes, bsp_date.o(i.time_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = time_set &rArr; pcf8563_time_set &rArr; pcf8563_set &rArr; i2c_wait_ack &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_time_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateWriteParameter
</UL>

<P><STRONG><a name="[6bd]"></a>uart_check</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, cmd.o(i.uart_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uart_check &rArr; get_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_frame_addr
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc16
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_cycle
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_cycle
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
</UL>

<P><STRONG><a name="[16e]"></a>uart_get_body</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, cmd.o(i.uart_get_body))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = uart_get_body
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_frame_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_cycle
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdReceiveBody
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdReceiveBody
</UL>

<P><STRONG><a name="[16d]"></a>uart_get_cmd</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, cmd.o(i.uart_get_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = uart_get_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_frame_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_cycle
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_cycle
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdReceiveBody
</UL>

<P><STRONG><a name="[6be]"></a>uart_get_frame_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cmd.o(i.uart_get_frame_addr))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_cmd
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_check
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_size
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_index
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_body
</UL>

<P><STRONG><a name="[16b]"></a>uart_get_index</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, cmd.o(i.uart_get_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = uart_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_frame_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdReceiveBody
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdMutualBody
</UL>

<P><STRONG><a name="[7e1]"></a>uart_get_size</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, cmd.o(i.uart_get_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = uart_get_size
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_frame_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_check
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_cycle
</UL>

<P><STRONG><a name="[748]"></a>udp_bind</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, udp.o(i.udp_bind))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = udp_bind
</UL>
<BR>[Called By]<UL><LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_init
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>

<P><STRONG><a name="[9c]"></a>udp_client_callback</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, client.o(i.udp_client_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = udp_client_callback &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataFromEthernet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> client.o(i.client_init)
</UL>
<P><STRONG><a name="[747]"></a>udp_connect</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, udp.o(i.udp_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = udp_connect &rArr; udp_bind
</UL>
<BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
</UL>
<BR>[Called By]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_init
</UL>

<P><STRONG><a name="[74b]"></a>udp_disconnect</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, udp.o(i.udp_disconnect))
<BR><BR>[Called By]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_init
</UL>

<P><STRONG><a name="[7b9]"></a>udp_input</STRONG> (Thumb, 408 bytes, Stack size 64 bytes, udp.o(i.udp_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = udp_input &rArr; icmp_dest_unreach &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addr_isbroadcast
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
</UL>
<BR>[Called By]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[746]"></a>udp_new</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, udp.o(i.udp_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = udp_new
</UL>
<BR>[Calls]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_init
</UL>

<P><STRONG><a name="[749]"></a>udp_recv</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, udp.o(i.udp_recv))
<BR><BR>[Called By]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_init
</UL>

<P><STRONG><a name="[74a]"></a>udp_send</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, udp.o(i.udp_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
</UL>
<BR>[Called By]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_init
</UL>

<P><STRONG><a name="[6b2]"></a>udp_sendto</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, udp.o(i.udp_sendto))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>
<BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_SendStr
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_send
</UL>

<P><STRONG><a name="[80b]"></a>udp_sendto_if</STRONG> (Thumb, 212 bytes, Stack size 64 bytes, udp.o(i.udp_sendto_if))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = udp_sendto_if &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
</UL>
<BR>[Called By]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
</UL>

<P><STRONG><a name="[d5]"></a>usprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, ustdlib.o(i.usprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvBackupWithDate
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmBackupWithDate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmBackupWithDate
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBackUpFileExist
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoBackUpSystem
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShowCurPageInfomation
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTimeConvTimeFormate
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReportSaveTime
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurveSaveTime
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCoordinatePoint
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportShowCurPageInfomation
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchReadParameter
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_exist
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateReadParameter
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_save
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_delete
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCoordinatePoint
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSystemTime
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicCode
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCoordinate
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCoordinateFolder
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowSystemDate
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowActiveDate
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterReadParameter
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvRecoverWithDate
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmRecoverWithDate
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmRecoverWithDate
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2str
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font32
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font24
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font20
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_font16
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPopWindowsContent
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
</UL>

<P><STRONG><a name="[7e0]"></a>ustrstr</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ustdlib.o(i.ustrstr))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ustrstr &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_sn
</UL>

<P><STRONG><a name="[f0]"></a>ustrtoul</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, ustdlib.o(i.ustrtoul))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCompleteSampleSerialAtThisPage
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBackUpFileExist
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharConvTimeFormate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str2float
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterCheckDataCycle
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateWriteParameter
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateCheckDataCycle
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableSegments
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableWriteParameter
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableCheckDataCycle
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterWriteParameter
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterCheckDataCycle
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterWriteParameter
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterWriteParameter
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterCheckDataCycle
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;active_product
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterWriteParameter
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDefaultParameter
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterCheckDataCycle
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeWriteParameter
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvRecoverWithDate
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmRecoverWithDate
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmRecoverWithDate
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePutinChars
</UL>

<P><STRONG><a name="[80c]"></a>uvsnprintf</STRONG> (Thumb, 686 bytes, Stack size 64 bytes, ustdlib.o(i.uvsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
</UL>

<P><STRONG><a name="[775]"></a>val2bcd_16</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, ustring.o(i.val2bcd_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = val2bcd_16
</UL>
<BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_preuse_date_set
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_active_date_set
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[265]"></a>ExchangePageInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.ExchangePageInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = ExchangePageInit &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_cycle
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_StartTimer
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKeyCheck
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoreStatus
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearExceptionFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageProcessCycle
</UL>

<P><STRONG><a name="[578]"></a>PageProcessCycle</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(i.PageProcessCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = PageProcessCycle &rArr; ExchangePageInit &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPage
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangePageInit
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>AutoBackUpSystem</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, initial.o(i.AutoBackUpSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 1164<LI>Call Chain = AutoBackUpSystem &rArr; PrvBackupWithDate &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvBackupWithDate
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmBackupWithDate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmBackupWithDate
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBackUpFileExist
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetupPage
</UL>

<P><STRONG><a name="[14e]"></a>CheckSystemParameterIsNull</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, initial.o(i.CheckSystemParameterIsNull))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CheckSystemParameterIsNull &rArr; CompareStrBuffIsEqualWithChar
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prv
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pcm
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareStrBuffIsEqualWithChar
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameter
</UL>

<P><STRONG><a name="[2b9]"></a>FormateSystemParameter</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, initial.o(i.FormateSystemParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = FormateSystemParameter &rArr; EraseSystemParameterAskHandler &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseSystemParameterAskHandler
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameterExecuteBody
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSystemParameterIsNull
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetupPage
</UL>

<P><STRONG><a name="[2ba]"></a>FormateSystemParameterExecuteBody</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, initial.o(i.FormateSystemParameterExecuteBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = FormateSystemParameterExecuteBody &rArr; prv_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_save
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_read
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_read
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_read
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prv
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pcm
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormateSystemParameter
</UL>

<P><STRONG><a name="[2c5]"></a>GPIO_Configuration</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, initial.o(i.GPIO_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Configuration &rArr; RCC_AHB1PeriphClockCmd &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystem
</UL>

<P><STRONG><a name="[3dc]"></a>HandlerDefaultPassword</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, initial.o(i.HandlerDefaultPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = HandlerDefaultPassword &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetupPage
</UL>

<P><STRONG><a name="[3ed]"></a>InitGeneralTask</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, initial.o(i.InitGeneralTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitGeneralTask &rArr; InitCommucationLamp &rArr; LampTask &rArr; SetLampVal &rArr; GPIO_SetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_StartAutoTimer
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLampVal
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCoreStatus
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectWindowsInit
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsInit
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitShortCutMenu
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPutinShow
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCommucationLamp
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPage
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystem
</UL>

<P><STRONG><a name="[3fd]"></a>NVIC_Configuration</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, initial.o(i.NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = NVIC_Configuration &rArr; NVIC_SetVectorTable &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystem
</UL>

<P><STRONG><a name="[4c8]"></a>PowerOnLink</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, initial.o(i.PowerOnLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 1772<LI>Call Chain = PowerOnLink &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_init
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_cycle
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkProcess
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ProgressBar
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProcessBody
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_StartTimer
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetupPage
</UL>

<P><STRONG><a name="[b6]"></a>AccordDispalcementGetDeformIncrement</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, mainpage.o(i.AccordDispalcementGetDeformIncrement))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = AccordDispalcementGetDeformIncrement &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOriginalGauge
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetExtensometerGauge
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetDeform
</UL>

<P><STRONG><a name="[155]"></a>ClearMainPageCoordinate</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainpage.o(i.ClearMainPageCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ClearMainPageCoordinate &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawCoordinate
</UL>

<P><STRONG><a name="[158]"></a>ClearTestResultArea</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, mainpage.o(i.ClearTestResultArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ClearTestResultArea &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadTestResultArea
</UL>

<P><STRONG><a name="[1c6]"></a>ConfigMainPageIndicateWindowsOneRectangleFrameCoordinate</STRONG> (Thumb, 752 bytes, Stack size 20 bytes, mainpage.o(i.ConfigMainPageIndicateWindowsOneRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigMainPageIndicateWindowsOneRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageIndicateWindowsRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1c5]"></a>ConfigMainPageIndicateWindowsRectangleFrameCoordinate</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, mainpage.o(i.ConfigMainPageIndicateWindowsRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ConfigMainPageIndicateWindowsRectangleFrameCoordinate &rArr; ConfigMainPageIndicateWindowsOneRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageIndicateWindowsOneRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPage
</UL>

<P><STRONG><a name="[32f]"></a>ConfigMainPageKLTestRectangleFrameCoordinate</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, mainpage.o(i.ConfigMainPageKLTestRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ConfigMainPageKLTestRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawTetResultArea
</UL>

<P><STRONG><a name="[1c8]"></a>ConfigMainPageStatusBarOneRectangleFrameCoordinate</STRONG> (Thumb, 354 bytes, Stack size 16 bytes, mainpage.o(i.ConfigMainPageStatusBarOneRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ConfigMainPageStatusBarOneRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageStatusBarRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1c7]"></a>ConfigMainPageStatusBarRectangleFrameCoordinate</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, mainpage.o(i.ConfigMainPageStatusBarRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ConfigMainPageStatusBarRectangleFrameCoordinate &rArr; ConfigMainPageStatusBarOneRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageStatusBarOneRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPage
</UL>

<P><STRONG><a name="[1ca]"></a>ConfigMainPageTableTestResultOneFeildRectangleFrameCoordinate</STRONG> (Thumb, 444 bytes, Stack size 20 bytes, mainpage.o(i.ConfigMainPageTableTestResultOneFeildRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigMainPageTableTestResultOneFeildRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageTableTestResultOneRowRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1c9]"></a>ConfigMainPageTableTestResultOneRowRectangleFrameCoordinate</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, mainpage.o(i.ConfigMainPageTableTestResultOneRowRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ConfigMainPageTableTestResultOneRowRectangleFrameCoordinate &rArr; ConfigMainPageTableTestResultOneFeildRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageTableTestResultOneFeildRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageTableTestResultRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1cb]"></a>ConfigMainPageTableTestResultRectangleFrameCoordinate</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, mainpage.o(i.ConfigMainPageTableTestResultRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ConfigMainPageTableTestResultRectangleFrameCoordinate &rArr; ConfigMainPageTableTestResultOneRowRectangleFrameCoordinate &rArr; ConfigMainPageTableTestResultOneFeildRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageTableTestResultOneRowRectangleFrameCoordinate
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawTetResultArea
</UL>

<P><STRONG><a name="[278]"></a>FindMatchSerialInfomation</STRONG> (Thumb, 160 bytes, Stack size 312 bytes, mainpage.o(i.FindMatchSerialInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 860<LI>Call Chain = FindMatchSerialInfomation &rArr; report_search_sn &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_search_sn
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePrintReport
</UL>

<P><STRONG><a name="[2c4]"></a>FromTestParameterCopyToReport</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, mainpage.o(i.FromTestParameterCopyToReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FromTestParameterCopyToReport
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageReadParameter
</UL>

<P><STRONG><a name="[322]"></a>GUI_MainPage</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, mainpage.o(i.GUI_MainPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412<LI>Call Chain = GUI_MainPage &rArr; GUI_MainPageDrawTetResultArea &rArr; LoadMainPageGetTestInfomationPage &rArr; TestParameterInit &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultCoordinate
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageStatusBarField
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageShowTestTitle
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageShowFrame
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageIndicateWindowField
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawTetResultArea
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawStatusBarRectangleFrame
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawIndicateWindowsRectangleFrame
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageStatusBarRectangleFrameCoordinate
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageIndicateWindowsRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
</UL>

<P><STRONG><a name="[7b]"></a>GUI_MainPageDrawCoordinate</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, mainpage.o(i.GUI_MainPageDrawCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = GUI_MainPageDrawCoordinate &rArr; GUI_DrawCoordinate &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearMainPageCoordinate
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoordinateDataAddr
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultCoordinate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainpage.o(i.InitMainPageCoordinateDrawLine)
</UL>
<P><STRONG><a name="[323]"></a>GUI_MainPageDrawIndicateWindowsRectangleFrame</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mainpage.o(i.GUI_MainPageDrawIndicateWindowsRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_MainPageDrawIndicateWindowsRectangleFrame &rArr; GUI_MainPageDrawOneIndicateWindowsRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawOneIndicateWindowsRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPage
</UL>

<P><STRONG><a name="[32b]"></a>GUI_MainPageDrawOneIndicateWindowsRectangleFrame</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, mainpage.o(i.GUI_MainPageDrawOneIndicateWindowsRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_MainPageDrawOneIndicateWindowsRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawIndicateWindowsRectangleFrame
</UL>

<P><STRONG><a name="[32c]"></a>GUI_MainPageDrawOneRowRectangleFrame</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, mainpage.o(i.GUI_MainPageDrawOneRowRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_MainPageDrawOneRowRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageRectangleFrame
</UL>

<P><STRONG><a name="[329]"></a>GUI_MainPageDrawStatusBarRectangleFrame</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, mainpage.o(i.GUI_MainPageDrawStatusBarRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_MainPageDrawStatusBarRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPage
</UL>

<P><STRONG><a name="[326]"></a>GUI_MainPageDrawTetResultArea</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, mainpage.o(i.GUI_MainPageDrawTetResultArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = GUI_MainPageDrawTetResultArea &rArr; LoadMainPageGetTestInfomationPage &rArr; TestParameterInit &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageTableTitleField
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageRectangleFrame
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageLoadPageInfomation
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageKLTestRectangleFrame
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageKLTestOneLevelMenu
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageTableTestResultRectangleFrameCoordinate
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMainPageKLTestRectangleFrameCoordinate
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPageGetTestInfomationPage
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPage
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadTestResultArea
</UL>

<P><STRONG><a name="[324]"></a>GUI_MainPageIndicateWindowField</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mainpage.o(i.GUI_MainPageIndicateWindowField))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = GUI_MainPageIndicateWindowField &rArr; GUI_MainPageIndicateWindowOneRowField &rArr; GUI_MainPageIndicateWindowOneField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageIndicateWindowOneRowField
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPage
</UL>

<P><STRONG><a name="[335]"></a>GUI_MainPageIndicateWindowOneField</STRONG> (Thumb, 554 bytes, Stack size 48 bytes, mainpage.o(i.GUI_MainPageIndicateWindowOneField))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = GUI_MainPageIndicateWindowOneField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageIndicateWindowOneRowField
</UL>

<P><STRONG><a name="[334]"></a>GUI_MainPageIndicateWindowOneRowField</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, mainpage.o(i.GUI_MainPageIndicateWindowOneRowField))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = GUI_MainPageIndicateWindowOneRowField &rArr; GUI_MainPageIndicateWindowOneField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageIndicateWindowOneField
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageIndicateWindowField
</UL>

<P><STRONG><a name="[336]"></a>GUI_MainPageKLTestDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, mainpage.o(i.GUI_MainPageKLTestDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_MainPageKLTestDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageKLTestRectangleFrame
</UL>

<P><STRONG><a name="[337]"></a>GUI_MainPageKLTestDrawOneRowOneLevelMenu</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, mainpage.o(i.GUI_MainPageKLTestDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_MainPageKLTestDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageKLTestOneLevelMenu
</UL>

<P><STRONG><a name="[331]"></a>GUI_MainPageKLTestOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mainpage.o(i.GUI_MainPageKLTestOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_MainPageKLTestOneLevelMenu &rArr; GUI_MainPageKLTestDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageKLTestDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawTetResultArea
</UL>

<P><STRONG><a name="[330]"></a>GUI_MainPageKLTestRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mainpage.o(i.GUI_MainPageKLTestRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_MainPageKLTestRectangleFrame &rArr; GUI_MainPageKLTestDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageKLTestDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawTetResultArea
</UL>

<P><STRONG><a name="[333]"></a>GUI_MainPageLoadPageInfomation</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mainpage.o(i.GUI_MainPageLoadPageInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = GUI_MainPageLoadPageInfomation &rArr; lcd_show_image &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_show_image
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawTetResultArea
</UL>

<P><STRONG><a name="[32d]"></a>GUI_MainPageRectangleFrame</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, mainpage.o(i.GUI_MainPageRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_MainPageRectangleFrame &rArr; GUI_MainPageDrawOneRowRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawOneRowRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawTetResultArea
</UL>

<P><STRONG><a name="[327]"></a>GUI_MainPageShowFrame</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, mainpage.o(i.GUI_MainPageShowFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GUI_MainPageShowFrame &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPage
</UL>

<P><STRONG><a name="[328]"></a>GUI_MainPageShowTestTitle</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, mainpage.o(i.GUI_MainPageShowTestTitle))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = GUI_MainPageShowTestTitle &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr32At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPage
</UL>

<P><STRONG><a name="[32a]"></a>GUI_MainPageStatusBarField</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, mainpage.o(i.GUI_MainPageStatusBarField))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = GUI_MainPageStatusBarField &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPage
</UL>

<P><STRONG><a name="[32e]"></a>GUI_MainPageTableTitleField</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, mainpage.o(i.GUI_MainPageTableTitleField))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_MainPageTableTitleField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawTetResultArea
</UL>

<P><STRONG><a name="[420]"></a>GetCompletePiecePageNum</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, mainpage.o(i.GetCompletePiecePageNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetCompletePiecePageNum
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCancelLastPiece
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KZKY_TestJumpTestResultPage
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_MainPageTestResultTableContent
</UL>

<P><STRONG><a name="[407]"></a>GetCompletePieceSerialInCurrentPageSerial</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mainpage.o(i.GetCompletePieceSerialInCurrentPageSerial))
<BR><BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCurrentSampleReachToPageTail
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_MainPageTestResultTableContent
</UL>

<P><STRONG><a name="[3bd]"></a>GetDownYieldForce</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, mainpage.o(i.GetDownYieldForce))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetDownYieldForce &rArr; SortBubble
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SortBubble
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawLineAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
</UL>

<P><STRONG><a name="[41c]"></a>GetKL_TestCompletePiecePageNum</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mainpage.o(i.GetKL_TestCompletePiecePageNum))
<BR><BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCancelLastPiece
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestJumpTestResultPage
</UL>

<P><STRONG><a name="[55b]"></a>GetMainPageIndicateWindowsFieldIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mainpage.o(i.GetMainPageIndicateWindowsFieldIndex))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicContent
</UL>

<P><STRONG><a name="[523]"></a>GetMainPageKLTestResultFieldIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mainpage.o(i.GetMainPageKLTestResultFieldIndex))
<BR><BR>[Called By]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestUpYieldStrength
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestUpYieldForce
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestSerial
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxStrength
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForceTotalElongation
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForceAllExtend
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForce
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestDownYieldStrength
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestDownYieldForce
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageClearKLTestData
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestResultOneLevelMenuContent
</UL>

<P><STRONG><a name="[5ad]"></a>GetMainPageStatusBarFieldIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mainpage.o(i.GetMainPageStatusBarFieldIndex))
<BR><BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicContent
</UL>

<P><STRONG><a name="[520]"></a>GetMainPageTestResultFieldIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mainpage.o(i.GetMainPageTestResultFieldIndex))
<BR><BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageLoadCursor
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageClearCursor
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultTableAvailValue
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultTable
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKZKYParameter
</UL>

<P><STRONG><a name="[3c4]"></a>GetMaxForceSumElongation</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, mainpage.o(i.GetMaxForceSumElongation))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetMaxForceSumElongation &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMaxForceSumExtend
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetParallelLenth
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
</UL>

<P><STRONG><a name="[3c5]"></a>GetMaxForceSumExtend</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mainpage.o(i.GetMaxForceSumExtend))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMaxForceSumElongation
</UL>

<P><STRONG><a name="[51d]"></a>GetTestStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mainpage.o(i.GetTestStatus))
<BR><BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageShortcutCycleTask
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F3
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F1
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineJudgeCondition
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckWarn
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckLinkPCCycle
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTestStatus
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentStrength
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentPeak
</UL>

<P><STRONG><a name="[3f8]"></a>InitKL_TestBody</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, mainpage.o(i.InitKL_TestBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitKL_TestBody
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteTestStartBody
</UL>

<P><STRONG><a name="[3fa]"></a>InitMainPageCoordinateDrawLine</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, mainpage.o(i.InitMainPageCoordinateDrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InitMainPageCoordinateDrawLine &rArr; InitCoordinateDrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_full_p_get
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCoordinateDrawLine
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawLineAddr
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoordinateDataAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineJudgeCondition
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultCoordinate
</UL>

<P><STRONG><a name="[405]"></a>IsCompleteSampleSerialAtThisPage</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, mainpage.o(i.IsCompleteSampleSerialAtThisPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IsCompleteSampleSerialAtThisPage &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageLoadCursor
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageClearCursor
</UL>

<P><STRONG><a name="[406]"></a>IsCurrentSampleReachToPageTail</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mainpage.o(i.IsCurrentSampleReachToPageTail))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IsCurrentSampleReachToPageTail
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompletePieceSerialInCurrentPageSerial
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KZKY_TestJumpTestResultPage
</UL>

<P><STRONG><a name="[40b]"></a>JudgeForceAvail</STRONG> (Thumb, 570 bytes, Stack size 216 bytes, mainpage.o(i.JudgeForceAvail))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = JudgeForceAvail &rArr; SortBubble
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SortBubble
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverage
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetArrayEqualZeroIndex
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindArrayValNotZeroCount
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetAvailForce
</UL>

<P><STRONG><a name="[413]"></a>KL_TestCheckPeakCycle</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, mainpage.o(i.KL_TestCheckPeakCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = KL_TestCheckPeakCycle &rArr; MainPageGetDeform &rArr; AccordDispalcementGetDeformIncrement &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetDeform
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPeakValue
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawLineSomeTimePointForce
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawLineNowTimePoint
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
</UL>

<P><STRONG><a name="[418]"></a>KL_TestDeformCoreCycle</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, mainpage.o(i.KL_TestDeformCoreCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = KL_TestDeformCoreCycle &rArr; FromForceGetStrength &rArr; GetSampleSpecificationArea &rArr; str2float &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteTestEndBody
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_entry_get
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromForceGetStrength
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTestStatus
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
</UL>

<P><STRONG><a name="[41b]"></a>KL_TestJumpTestResultPage</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, mainpage.o(i.KL_TestJumpTestResultPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428<LI>Call Chain = KL_TestJumpTestResultPage &rArr; ReloadTestResultArea &rArr;  MainPageReadParameter (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKL_TestCompletePiecePageNum
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadTestResultArea
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteTestStartBody
</UL>

<P><STRONG><a name="[41e]"></a>KL_TestLoadCoreCycle</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, mainpage.o(i.KL_TestLoadCoreCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = KL_TestLoadCoreCycle &rArr; FromForceGetStrength &rArr; GetSampleSpecificationArea &rArr; str2float &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPeakValue
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawLineSomeTimePointForce
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawLineNowTimePoint
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromForceGetStrength
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTestStatus
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
</UL>

<P><STRONG><a name="[41f]"></a>KZKY_TestJumpTestResultPage</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, mainpage.o(i.KZKY_TestJumpTestResultPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420<LI>Call Chain = KZKY_TestJumpTestResultPage &rArr; ReloadTestResultArea &rArr;  MainPageReadParameter (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageLoadCursor
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageClearCursor
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCurrentSampleReachToPageTail
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompletePiecePageNum
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadTestResultArea
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteTestStartBody
</UL>

<P><STRONG><a name="[325]"></a>LoadDefaultCoordinate</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, mainpage.o(i.LoadDefaultCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = LoadDefaultCoordinate &rArr; GUI_MainPageDrawCoordinate &rArr; GUI_DrawCoordinate &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMainPageCoordinateDrawLine
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawCoordinate
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_full_p_get
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPage
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentPeak
</UL>

<P><STRONG><a name="[514]"></a>MainPageAllowRunTest</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, mainpage.o(i.MainPageAllowRunTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 2204<LI>Call Chain = MainPageAllowRunTest &rArr; MainPageCheckSerialRepeat &rArr; TestParameterCheckSerialRepeat &rArr; TestParameterSerialAddOne &rArr; report_exist &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckSerialRepeat
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeActiveStatus
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkStatus
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCurrentModel
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActiveStatusHandler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
</UL>

<P><STRONG><a name="[516]"></a>MainPageAskSampleFractureSurfaceProcess</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, mainpage.o(i.MainPageAskSampleFractureSurfaceProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = MainPageAskSampleFractureSurfaceProcess &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSelectPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopWindowsSelectResult
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestAfterDisposeExecuteCycle
</UL>

<P><STRONG><a name="[517]"></a>MainPageAutoPrintReportProcess</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, mainpage.o(i.MainPageAutoPrintReportProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 2484<LI>Call Chain = MainPageAutoPrintReportProcess &rArr; MainPagePrintReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePrintReport
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iSAutoPrintReport
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestAfterDisposeExecuteCycle
</UL>

<P><STRONG><a name="[51a]"></a>MainPageAutoUpdateSerial</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, mainpage.o(i.MainPageAutoUpdateSerial))
<BR><BR>[Stack]<UL><LI>Max Depth = 2196<LI>Call Chain = MainPageAutoUpdateSerial &rArr; MainPageCheckSerialRepeat &rArr; TestParameterCheckSerialRepeat &rArr; TestParameterSerialAddOne &rArr; report_exist &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckSerialRepeat
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageReadParameter
</UL>

<P><STRONG><a name="[51b]"></a>MainPageCancelLastPiece</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, mainpage.o(i.MainPageCancelLastPiece))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MainPageCancelLastPiece &rArr; SetPopWindowsInfomation
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKL_TestCompletePiecePageNum
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompletePiecePageNum
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTestStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F2
</UL>

<P><STRONG><a name="[51c]"></a>MainPageCheckLinkPCCycle</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, mainpage.o(i.MainPageCheckLinkPCCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492<LI>Call Chain = MainPageCheckLinkPCCycle &rArr; JudgeActiveStatus &rArr; expire_judge &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeActiveStatus
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkStatus
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLinkStatus
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActiveStatusHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCtrlCoreCycle
</UL>

<P><STRONG><a name="[515]"></a>MainPageCheckSerialRepeat</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, mainpage.o(i.MainPageCheckSerialRepeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 2188<LI>Call Chain = MainPageCheckSerialRepeat &rArr; TestParameterCheckSerialRepeat &rArr; TestParameterSerialAddOne &rArr; report_exist &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearExceptionFlag
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckSerialRepeat
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadTestResultArea
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAutoUpdateSerial
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAllowRunTest
</UL>

<P><STRONG><a name="[51f]"></a>MainPageCheckWarn</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mainpage.o(i.MainPageCheckWarn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MainPageCheckWarn &rArr; CheckPrmWarning
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPrmWarning
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCtrlCoreCycle
</UL>

<P><STRONG><a name="[421]"></a>MainPageClearCursor</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, mainpage.o(i.MainPageClearCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = MainPageClearCursor &rArr; Show_MainPageTestResultTable &rArr; Show_MainPageTestResultOneFieldTableContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCompleteSampleSerialAtThisPage
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageTestResultFieldIndex
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultTable
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KZKY_TestJumpTestResultPage
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_MainPageTestResultTableContent
</UL>

<P><STRONG><a name="[530]"></a>MainPageClearForce</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mainpage.o(i.MainPageClearForce))
<BR><BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
</UL>

<P><STRONG><a name="[522]"></a>MainPageClearKLTestData</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, mainpage.o(i.MainPageClearKLTestData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MainPageClearKLTestData
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageKLTestResultFieldIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
</UL>

<P><STRONG><a name="[531]"></a>MainPageClearStrength</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mainpage.o(i.MainPageClearStrength))
<BR><BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
</UL>

<P><STRONG><a name="[458]"></a>MainPageConfig</STRONG> (Thumb, 1078 bytes, Stack size 8 bytes, mainpage.o(i.MainPageConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MainPageConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplacementOrDeformShow
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
</UL>

<P><STRONG><a name="[525]"></a>MainPageCoordinateDrawLineBodyCycle</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, mainpage.o(i.MainPageCoordinateDrawLineBodyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = MainPageCoordinateDrawLineBodyCycle &rArr; CoordinateDrawLineBodyCycle &rArr; CoordinateRedrawLine &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineRedrawJudgeCondition
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineJudgeCondition
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCoordinateRecordPointOverflow
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawLineAddr
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoordinateDrawLineBodyCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCtrlCoreCycle
</UL>

<P><STRONG><a name="[526]"></a>MainPageCoordinateDrawLineJudgeCondition</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, mainpage.o(i.MainPageCoordinateDrawLineJudgeCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MainPageCoordinateDrawLineJudgeCondition &rArr; InitMainPageCoordinateDrawLine &rArr; InitCoordinateDrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMainPageCoordinateDrawLine
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadCoordinate
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurveShowStartValue
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineBodyCycle
</UL>

<P><STRONG><a name="[528]"></a>MainPageCoordinateDrawLineRedrawJudgeCondition</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, mainpage.o(i.MainPageCoordinateDrawLineRedrawJudgeCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MainPageCoordinateDrawLineRedrawJudgeCondition
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_full_p_get
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoordinateDataAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineBodyCycle
</UL>

<P><STRONG><a name="[45d]"></a>MainPageCtrlCoreCycle</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, mainpage.o(i.MainPageCtrlCoreCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 2516<LI>Call Chain = MainPageCtrlCoreCycle &rArr; MainPageTestExecuteCoreCycle &rArr; MainPageTestAfterDisposeExecuteCycle &rArr; MainPageAutoPrintReportProcess &rArr; MainPagePrintReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCycle
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCoordinateDrawLineBodyCycle
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckWarn
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckLinkPCCycle
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCM_CmdSendCycle
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOfflineCycle
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicContent
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
</UL>

<P><STRONG><a name="[52e]"></a>MainPageEndOneGroup</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mainpage.o(i.MainPageEndOneGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MainPageEndOneGroup
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTestStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F3
</UL>

<P><STRONG><a name="[52f]"></a>MainPageExecuteCancelLastPiece</STRONG> (Thumb, 594 bytes, Stack size 8 bytes, mainpage.o(i.MainPageExecuteCancelLastPiece))
<BR><BR>[Stack]<UL><LI>Max Depth = 780<LI>Call Chain = MainPageExecuteCancelLastPiece &rArr; MainPageLoadCursor &rArr; Show_MainPageTestResultTable &rArr; Show_MainPageTestResultOneFieldTableContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageLoadCursor
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageClearStrength
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageClearKLTestData
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageClearForce
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageClearCursor
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompletePieceSerialInCurrentPageSerial
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_delete
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTestSaveProgressBar
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCoordinateFolder
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultTable
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestResultOneLevelMenuContent
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestOneLevelMenuUnit
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestAfterDisposeExecuteCycle
</UL>

<P><STRONG><a name="[534]"></a>MainPageExecuteEndOneGroupProcess</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, mainpage.o(i.MainPageExecuteEndOneGroupProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = MainPageExecuteEndOneGroupProcess &rArr; Show_MainPageTestResultTableAvailValue &rArr; Show_MainPageTestResultAvailValueOneFieldTableContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteAvailStrength
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteAvailForce
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetAvailStrength
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageGetAvailForce
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultTableAvailValue
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestAfterDisposeExecuteCycle
</UL>

<P><STRONG><a name="[53a]"></a>MainPageExecuteEndOnePieceProcess</STRONG> (Thumb, 660 bytes, Stack size 32 bytes, mainpage.o(i.MainPageExecuteEndOnePieceProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = MainPageExecuteEndOnePieceProcess &rArr; MainPageSaveCoordinateCurveToSD &rArr; SaveCoordinatePoint &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestUpYieldStrength
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestUpYieldForce
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxStrength
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForceTotalElongation
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForceAllExtend
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForce
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestDownYieldStrength
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestDownYieldForce
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteForce
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageSaveCoordinateCurveToSD
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMaxForceSumElongation
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDownYieldForce
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompletePieceSerialInCurrentPageSerial
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromForceGetStrength
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultTable
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestResultOneLevelMenuContent
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestOneLevelMenuUnit
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteStrength
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestAfterDisposeExecuteCycle
</UL>

<P><STRONG><a name="[546]"></a>MainPageExecuteHandEndGroup</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mainpage.o(i.MainPageExecuteHandEndGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MainPageExecuteHandEndGroup &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestAfterDisposeExecuteCycle
</UL>

<P><STRONG><a name="[419]"></a>MainPageExecuteTestEndBody</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mainpage.o(i.MainPageExecuteTestEndBody))
<BR><BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestDeformCoreCycle
</UL>

<P><STRONG><a name="[547]"></a>MainPageExecuteTestStartBody</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, mainpage.o(i.MainPageExecuteTestStartBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436<LI>Call Chain = MainPageExecuteTestStartBody &rArr; KL_TestJumpTestResultPage &rArr; ReloadTestResultArea &rArr;  MainPageReadParameter (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KZKY_TestJumpTestResultPage
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestJumpTestResultPage
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKL_TestBody
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitJudgeBreakPoint
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTestStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
</UL>

<P><STRONG><a name="[549]"></a>MainPageExecuteWriteSDProcess</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, mainpage.o(i.MainPageExecuteWriteSDProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1124<LI>Call Chain = MainPageExecuteWriteSDProcess &rArr; report_save &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_save
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTestSaveProgressBar
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestAfterDisposeExecuteCycle
</UL>

<P><STRONG><a name="[536]"></a>MainPageGetAvailForce</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, mainpage.o(i.MainPageGetAvailForce))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = MainPageGetAvailForce &rArr; JudgeForceAvail &rArr; SortBubble
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeForceAvail
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOneGroupProcess
</UL>

<P><STRONG><a name="[535]"></a>MainPageGetAvailStrength</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, mainpage.o(i.MainPageGetAvailStrength))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MainPageGetAvailStrength &rArr; JudgeStrengthAvail &rArr; FindNotMatch_Per15_Condition &rArr; ContrastFloatDataEqual &rArr; __hardfp_fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeStrengthAvail
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOneGroupProcess
</UL>

<P><STRONG><a name="[415]"></a>MainPageGetDeform</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, mainpage.o(i.MainPageGetDeform))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MainPageGetDeform &rArr; AccordDispalcementGetDeformIncrement &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordDispalcementGetDeformIncrement
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplacementOrDeformShow
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestCheckPeakCycle
</UL>

<P><STRONG><a name="[457]"></a>MainPageInit</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, mainpage.o(i.MainPageInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MainPageInit &rArr; disp_syn
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_syn
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitInterfaceElement
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWY_SmplUnit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestAttribute
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFH_SmplUnit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBX_SmplUnit
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTestStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadTestResultArea
</UL>

<P><STRONG><a name="[54a]"></a>MainPageJudgeBreakCoreCycle</STRONG> (Thumb, 378 bytes, Stack size 56 bytes, mainpage.o(i.MainPageJudgeBreakCoreCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MainPageJudgeBreakCoreCycle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWithMaxForceDifference
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTargetWithMaxForceDifference
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTargetBreakStartValue
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTargetBreakDownPoint
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTargetAttenuationRate
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTargetAdjoinTwoPointDiff
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJudgeBreakType
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBreakDownPoint
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAttenuationRate
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdjoinTwoPointDifference
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTestStatus
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
</UL>

<P><STRONG><a name="[52a]"></a>MainPageJudgeBreakCycle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, mainpage.o(i.MainPageJudgeBreakCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MainPageJudgeBreakCycle &rArr; JudgeBreakCalculateCycle &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeBreakCalculateCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCtrlCoreCycle
</UL>

<P><STRONG><a name="[45c]"></a>MainPageKeyProcess</STRONG> (Thumb, 408 bytes, Stack size 8 bytes, mainpage.o(i.MainPageKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 2492<LI>Call Chain = MainPageKeyProcess &rArr; MainPagePressKEY_F1 &rArr; MainPagePrintReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTurningPageRight
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTurningPageLeft
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F3
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F1
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageConfig
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageIndicateWindowsFieldIndex
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageIndicateWindowOneField
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_syn
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisplacementOrDeformShow
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChannelTareCmd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplacementOrDeformShow
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadTestResultArea
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
</UL>

<P><STRONG><a name="[45e]"></a>MainPageLeavePageCheckCycle</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mainpage.o(i.MainPageLeavePageCheckCycle))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
</UL>

<P><STRONG><a name="[422]"></a>MainPageLoadCursor</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, mainpage.o(i.MainPageLoadCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = MainPageLoadCursor &rArr; Show_MainPageTestResultTable &rArr; Show_MainPageTestResultOneFieldTableContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCompleteSampleSerialAtThisPage
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageTestResultFieldIndex
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultTable
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KZKY_TestJumpTestResultPage
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_MainPageTestResultTableContent
</UL>

<P><STRONG><a name="[555]"></a>MainPagePressKEY_F1</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, mainpage.o(i.MainPagePressKEY_F1))
<BR><BR>[Stack]<UL><LI>Max Depth = 2484<LI>Call Chain = MainPagePressKEY_F1 &rArr; MainPagePrintReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePrintReport
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
</UL>

<P><STRONG><a name="[556]"></a>MainPagePressKEY_F2</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, mainpage.o(i.MainPagePressKEY_F2))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MainPagePressKEY_F2 &rArr; MainPageCancelLastPiece &rArr; SetPopWindowsInfomation
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCancelLastPiece
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
</UL>

<P><STRONG><a name="[557]"></a>MainPagePressKEY_F3</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, mainpage.o(i.MainPagePressKEY_F3))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MainPagePressKEY_F3 &rArr; MainPageEndOneGroup
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageEndOneGroup
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPasswordType
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPasswordPutinTargetPage
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPasswordPutinSourcePage
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChannelSelectTargetPage
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChannelSelectSourcePage
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLssuedParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
</UL>

<P><STRONG><a name="[519]"></a>MainPagePrintReport</STRONG> (Thumb, 138 bytes, Stack size 1016 bytes, mainpage.o(i.MainPagePrintReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 2476<LI>Call Chain = MainPagePrintReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindMatchSerialInfomation
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPrintingShortcutMenu
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPagePressKEY_F1
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAutoPrintReportProcess
</UL>

<P><STRONG><a name="[459]"></a>MainPageReadParameter</STRONG> (Thumb, 416 bytes, Stack size 16 bytes, mainpage.o(i.MainPageReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 2212<LI>Call Chain = MainPageReadParameter &rArr; MainPageAutoUpdateSerial &rArr; MainPageCheckSerialRepeat &rArr; TestParameterCheckSerialRepeat &rArr; TestParameterSerialAddOne &rArr; report_exist &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLParameter
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAutoUpdateSerial
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromTestParameterCopyToReport
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKZKYParameter
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadTestResultArea
</UL>

<P><STRONG><a name="[53b]"></a>MainPageSaveCoordinateCurveToSD</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, mainpage.o(i.MainPageSaveCoordinateCurveToSD))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = MainPageSaveCoordinateCurveToSD &rArr; SaveCoordinatePoint &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_full_p_get
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCoordinatePoint
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawLineAddr
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoordinatePointAddr
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
</UL>

<P><STRONG><a name="[45b]"></a>MainPageShortcutCycleTask</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, mainpage.o(i.MainPageShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = MainPageShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
</UL>

<P><STRONG><a name="[562]"></a>MainPageTestAfterDisposeExecuteCycle</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, mainpage.o(i.MainPageTestAfterDisposeExecuteCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 2492<LI>Call Chain = MainPageTestAfterDisposeExecuteCycle &rArr; MainPageAutoPrintReportProcess &rArr; MainPagePrintReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteWriteSDProcess
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteHandEndGroup
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOneGroupProcess
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAutoPrintReportProcess
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAskSampleFractureSurfaceProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
</UL>

<P><STRONG><a name="[52d]"></a>MainPageTestExecuteCoreCycle</STRONG> (Thumb, 300 bytes, Stack size 16 bytes, mainpage.o(i.MainPageTestExecuteCoreCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 2508<LI>Call Chain = MainPageTestExecuteCoreCycle &rArr; MainPageTestAfterDisposeExecuteCycle &rArr; MainPageAutoPrintReportProcess &rArr; MainPagePrintReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestAfterDisposeExecuteCycle
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteTestStartBody
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteTestEndBody
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageAllowRunTest
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestLoadCoreCycle
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestDeformCoreCycle
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestCheckPeakCycle
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_entry_get
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetShortCutMenuCue
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTestStatus
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCtrlCoreCycle
</UL>

<P><STRONG><a name="[558]"></a>MainPageTurningPageLeft</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, mainpage.o(i.MainPageTurningPageLeft))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
</UL>

<P><STRONG><a name="[559]"></a>MainPageTurningPageRight</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, mainpage.o(i.MainPageTurningPageRight))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
</UL>

<P><STRONG><a name="[537]"></a>MainPageWriteAvailForce</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, mainpage.o(i.MainPageWriteAvailForce))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = MainPageWriteAvailForce &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOneGroupProcess
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKZKYParameter
</UL>

<P><STRONG><a name="[538]"></a>MainPageWriteAvailStrength</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, mainpage.o(i.MainPageWriteAvailStrength))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = MainPageWriteAvailStrength &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOneGroupProcess
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKZKYParameter
</UL>

<P><STRONG><a name="[564]"></a>MainPageWriteAvailValue</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mainpage.o(i.MainPageWriteAvailValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MainPageWriteAvailValue
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKZKYParameter
</UL>

<P><STRONG><a name="[53c]"></a>MainPageWriteForce</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, mainpage.o(i.MainPageWriteForce))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = MainPageWriteForce &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKZKYParameter
</UL>

<P><STRONG><a name="[561]"></a>MainPageWriteKLParameter</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, mainpage.o(i.MainPageWriteKLParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = MainPageWriteKLParameter &rArr; MainPageWriteKLTestUpYieldStrength &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestUpYieldStrength
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestUpYieldForce
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestSerial
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxStrength
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForceTotalElongation
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForceAllExtend
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestMaxForce
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestDownYieldStrength
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLTestDownYieldForce
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageReadParameter
</UL>

<P><STRONG><a name="[541]"></a>MainPageWriteKLTestDownYieldForce</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, mainpage.o(i.MainPageWriteKLTestDownYieldForce))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = MainPageWriteKLTestDownYieldForce &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageKLTestResultFieldIndex
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLParameter
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
</UL>

<P><STRONG><a name="[543]"></a>MainPageWriteKLTestDownYieldStrength</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, mainpage.o(i.MainPageWriteKLTestDownYieldStrength))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = MainPageWriteKLTestDownYieldStrength &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageKLTestResultFieldIndex
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLParameter
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
</UL>

<P><STRONG><a name="[53e]"></a>MainPageWriteKLTestMaxForce</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, mainpage.o(i.MainPageWriteKLTestMaxForce))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = MainPageWriteKLTestMaxForce &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageKLTestResultFieldIndex
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLParameter
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
</UL>

<P><STRONG><a name="[544]"></a>MainPageWriteKLTestMaxForceAllExtend</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, mainpage.o(i.MainPageWriteKLTestMaxForceAllExtend))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = MainPageWriteKLTestMaxForceAllExtend &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageKLTestResultFieldIndex
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLParameter
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
</UL>

<P><STRONG><a name="[545]"></a>MainPageWriteKLTestMaxForceTotalElongation</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, mainpage.o(i.MainPageWriteKLTestMaxForceTotalElongation))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = MainPageWriteKLTestMaxForceTotalElongation &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageKLTestResultFieldIndex
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLParameter
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
</UL>

<P><STRONG><a name="[53f]"></a>MainPageWriteKLTestMaxStrength</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, mainpage.o(i.MainPageWriteKLTestMaxStrength))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = MainPageWriteKLTestMaxStrength &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageKLTestResultFieldIndex
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLParameter
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
</UL>

<P><STRONG><a name="[565]"></a>MainPageWriteKLTestSerial</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, mainpage.o(i.MainPageWriteKLTestSerial))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MainPageWriteKLTestSerial &rArr; numtochar &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageKLTestResultFieldIndex
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLParameter
</UL>

<P><STRONG><a name="[540]"></a>MainPageWriteKLTestUpYieldForce</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, mainpage.o(i.MainPageWriteKLTestUpYieldForce))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = MainPageWriteKLTestUpYieldForce &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageKLTestResultFieldIndex
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLParameter
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
</UL>

<P><STRONG><a name="[542]"></a>MainPageWriteKLTestUpYieldStrength</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, mainpage.o(i.MainPageWriteKLTestUpYieldStrength))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = MainPageWriteKLTestUpYieldStrength &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageKLTestResultFieldIndex
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKLParameter
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
</UL>

<P><STRONG><a name="[560]"></a>MainPageWriteKZKYParameter</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, mainpage.o(i.MainPageWriteKZKYParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = MainPageWriteKZKYParameter &rArr; MainPageWriteForce &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteForce
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteAvailValue
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteAvailStrength
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteAvailForce
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageTestResultFieldIndex
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteStrength
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteSerial
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageReadParameter
</UL>

<P><STRONG><a name="[566]"></a>MainPageWriteSerial</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, mainpage.o(i.MainPageWriteSerial))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MainPageWriteSerial &rArr; numtochar &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKZKYParameter
</UL>

<P><STRONG><a name="[53d]"></a>MainPageWriteStrength</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, mainpage.o(i.MainPageWriteStrength))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = MainPageWriteStrength &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageWriteKZKYParameter
</UL>

<P><STRONG><a name="[52c]"></a>RefreshDynamicContent</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, mainpage.o(i.RefreshDynamicContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = RefreshDynamicContent &rArr; Show_MainPageOneStatusBarContent &rArr; RefreshDynamicSystemTime &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageStatusBarFieldIndex
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageIndicateWindowsFieldIndex
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneStatusBarContent
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageOneIndicateWindowsContent
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCtrlCoreCycle
</UL>

<P><STRONG><a name="[41d]"></a>ReloadTestResultArea</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mainpage.o(i.ReloadTestResultArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + In Cycle
<LI>Call Chain = ReloadTestResultArea &rArr;  MainPageReadParameter (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageReadParameter
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageInit
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageDrawTetResultArea
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTestResultArea
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestResultTable
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageKeyProcess
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCheckSerialRepeat
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KZKY_TestJumpTestResultPage
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestJumpTestResultPage
</UL>

<P><STRONG><a name="[60b]"></a>SetDynamicContentPeak</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, mainpage.o(i.SetDynamicContentPeak))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = SetDynamicContentPeak &rArr; LoadDefaultCoordinate &rArr; GUI_MainPageDrawCoordinate &rArr; GUI_DrawCoordinate &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultCoordinate
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceElementPeak
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPeakValue
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurveStayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
</UL>

<P><STRONG><a name="[60e]"></a>SetDynamicContentStrength</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, mainpage.o(i.SetDynamicContentStrength))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = SetDynamicContentStrength &rArr; FromForceGetStrength &rArr; GetSampleSpecificationArea &rArr; str2float &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceElementStrength
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromForceGetStrength
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
</UL>

<P><STRONG><a name="[52b]"></a>SetDynamicContentTask</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, mainpage.o(i.SetDynamicContentTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = SetDynamicContentTask &rArr; SetDynamicContentNETStatus &rArr; GetEthLinkStatus &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentUSBStatus
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentNETStatus
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentLinkStatus
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentForce
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentFHSpeed
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentDispalcement
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentDeform
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentCode
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplacementOrDeformShow
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTestStatus
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentStrength
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentPeak
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCtrlCoreCycle
</UL>

<P><STRONG><a name="[610]"></a>SetDynamicContentTestStatus</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mainpage.o(i.SetDynamicContentTestStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetDynamicContentTestStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestStatus
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceTestStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentTask
</UL>

<P><STRONG><a name="[41a]"></a>SetTestStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mainpage.o(i.SetTestStatus))
<BR><BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageTestExecuteCoreCycle
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageJudgeBreakCoreCycle
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageInit
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteTestStartBody
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageEndOneGroup
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageCancelLastPiece
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestLoadCoreCycle
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL_TestDeformCoreCycle
</UL>

<P><STRONG><a name="[533]"></a>Show_MainPageKLTestOneLevelMenuUnit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mainpage.o(i.Show_MainPageKLTestOneLevelMenuUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_MainPageKLTestOneLevelMenuUnit &rArr; Show_MainPageKLTestOneRowOneLevelMenuUnit &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestOneRowOneLevelMenuUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestResultTable
</UL>

<P><STRONG><a name="[636]"></a>Show_MainPageKLTestOneRowOneLevelMenuUnit</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, mainpage.o(i.Show_MainPageKLTestOneRowOneLevelMenuUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = Show_MainPageKLTestOneRowOneLevelMenuUnit &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestOneLevelMenuUnit
</UL>

<P><STRONG><a name="[532]"></a>Show_MainPageKLTestResultOneLevelMenuContent</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, mainpage.o(i.Show_MainPageKLTestResultOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Show_MainPageKLTestResultOneLevelMenuContent &rArr; Show_MainPageKLTestResultOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageKLTestResultFieldIndex
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestResultOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestResultTable
</UL>

<P><STRONG><a name="[637]"></a>Show_MainPageKLTestResultOneRowOneLevelMenuContent</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, mainpage.o(i.Show_MainPageKLTestResultOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_MainPageKLTestResultOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestResultOneLevelMenuContent
</UL>

<P><STRONG><a name="[5ac]"></a>Show_MainPageOneIndicateWindowsContent</STRONG> (Thumb, 362 bytes, Stack size 40 bytes, mainpage.o(i.Show_MainPageOneIndicateWindowsContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Show_MainPageOneIndicateWindowsContent &rArr; RefreshDynamicSpeed &rArr; disp_value &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicStrength
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSpeed
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicPeak
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicForce
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDisplacement
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDeform
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementStrength
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementPeak
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementForce
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementFHSpeed
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementDisPlacement
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementDeform
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplacementOrDeformShow
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicContent
</UL>

<P><STRONG><a name="[5ae]"></a>Show_MainPageOneStatusBarContent</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, mainpage.o(i.Show_MainPageOneStatusBarContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Show_MainPageOneStatusBarContent &rArr; RefreshDynamicSystemTime &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicUSBIco
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicTestStatus
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSystemTime
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicEthernetIco
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicCommunicationStatus
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicCode
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceTestStatus
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceLinkStatus
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementUSBStatus
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementEthernetConnectStatus
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementCode
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicContent
</UL>

<P><STRONG><a name="[63b]"></a>Show_MainPageTestResultAvailValueOneFieldTableContent</STRONG> (Thumb, 484 bytes, Stack size 48 bytes, mainpage.o(i.Show_MainPageTestResultAvailValueOneFieldTableContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_MainPageTestResultAvailValueOneFieldTableContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultTableAvailValue
</UL>

<P><STRONG><a name="[63c]"></a>Show_MainPageTestResultOneFieldTableContent</STRONG> (Thumb, 738 bytes, Stack size 56 bytes, mainpage.o(i.Show_MainPageTestResultOneFieldTableContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Show_MainPageTestResultOneFieldTableContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultTable
</UL>

<P><STRONG><a name="[521]"></a>Show_MainPageTestResultTable</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, mainpage.o(i.Show_MainPageTestResultTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = Show_MainPageTestResultTable &rArr; Show_MainPageTestResultOneFieldTableContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageTestResultFieldIndex
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultOneFieldTableContent
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageLoadCursor
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOnePieceProcess
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteCancelLastPiece
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageClearCursor
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_MainPageTestResultTableContent
</UL>

<P><STRONG><a name="[539]"></a>Show_MainPageTestResultTableAvailValue</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainpage.o(i.Show_MainPageTestResultTableAvailValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = Show_MainPageTestResultTableAvailValue &rArr; Show_MainPageTestResultAvailValueOneFieldTableContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainPageTestResultFieldIndex
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultAvailValueOneFieldTableContent
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageExecuteEndOneGroupProcess
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_MainPageTestResultTableAvailValue
</UL>

<P><STRONG><a name="[6a9]"></a>Traverse_MainPageTestResultTableAvailValue</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mainpage.o(i.Traverse_MainPageTestResultTableAvailValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = Traverse_MainPageTestResultTableAvailValue &rArr; Show_MainPageTestResultTableAvailValue &rArr; Show_MainPageTestResultAvailValueOneFieldTableContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultTableAvailValue
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestResultTable
</UL>

<P><STRONG><a name="[6aa]"></a>Traverse_MainPageTestResultTableContent</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, mainpage.o(i.Traverse_MainPageTestResultTableContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 788<LI>Call Chain = Traverse_MainPageTestResultTableContent &rArr; MainPageLoadCursor &rArr; Show_MainPageTestResultTable &rArr; Show_MainPageTestResultOneFieldTableContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageLoadCursor
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPageClearCursor
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompletePieceSerialInCurrentPageSerial
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompletePiecePageNum
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageTestResultTable
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestResultTable
</UL>

<P><STRONG><a name="[45a]"></a>Traverse_TestResultTable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, mainpage.o(i.Traverse_TestResultTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = Traverse_TestResultTable &rArr; Traverse_MainPageTestResultTableContent &rArr; MainPageLoadCursor &rArr; Show_MainPageTestResultTable &rArr; Show_MainPageTestResultOneFieldTableContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_MainPageTestResultTableContent
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_MainPageTestResultTableAvailValue
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestResultOneLevelMenuContent
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_MainPageKLTestOneLevelMenuUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPage
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadTestResultArea
</UL>

<P><STRONG><a name="[79]"></a>compFloatData</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mainpage.o(i.compFloatData))
<BR>[Address Reference Count : 2]<UL><LI> mainpage.o(i.GetDownYieldForce)
<LI> mainpage.o(i.JudgeForceAvail)
</UL>
<P><STRONG><a name="[161]"></a>Clear_TestParameterOneRowOneLevelMenuArrow</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, testparameter.o(i.Clear_TestParameterOneRowOneLevelMenuArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Clear_TestParameterOneRowOneLevelMenuArrow &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterRestoreShowOneMenu
</UL>

<P><STRONG><a name="[339]"></a>ConfigTestParameterRectangleFrameCoordinate</STRONG> (Thumb, 546 bytes, Stack size 16 bytes, testparameter.o(i.ConfigTestParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ConfigTestParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameter
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageTestInfomation
</UL>

<P><STRONG><a name="[338]"></a>GUI_MainPageTestInfomation</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, testparameter.o(i.GUI_MainPageTestInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = GUI_MainPageTestInfomation &rArr; GUI_TestParameterOneLevelMenu &rArr; GUI_TestParameterDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameterRectangleFrame
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameterOneLevelMenu
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTestParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPageGetTestInfomationPage
</UL>

<P><STRONG><a name="[393]"></a>GUI_TestParameter</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, testparameter.o(i.GUI_TestParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_TestParameter &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameterRectangleFrame
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameterOneLevelMenu
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTestParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
</UL>

<P><STRONG><a name="[394]"></a>GUI_TestParameterDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, testparameter.o(i.GUI_TestParameterDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_TestParameterDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameterRectangleFrame
</UL>

<P><STRONG><a name="[395]"></a>GUI_TestParameterDrawOneRowOneLevelMenu</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, testparameter.o(i.GUI_TestParameterDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_TestParameterDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameterOneLevelMenu
</UL>

<P><STRONG><a name="[33b]"></a>GUI_TestParameterOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testparameter.o(i.GUI_TestParameterOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_TestParameterOneLevelMenu &rArr; GUI_TestParameterDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameterDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameter
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageTestInfomation
</UL>

<P><STRONG><a name="[33a]"></a>GUI_TestParameterRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testparameter.o(i.GUI_TestParameterRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_TestParameterRectangleFrame &rArr; GUI_TestParameterDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameterDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestParameter
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MainPageTestInfomation
</UL>

<P><STRONG><a name="[687]"></a>GetTestParameterIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, testparameter.o(i.GetTestParameterIndex))
<BR><BR>[Called By]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterWriteParameter
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterReadParameter
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterGetConvertArea
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterExchangeSampleShape
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckPutinData
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterAccordRoundDiameterGetCutAreaProcess
</UL>

<P><STRONG><a name="[695]"></a>SerialAddOneCycle</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, testparameter.o(i.SerialAddOneCycle))
<BR><BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterSerialAddOne
</UL>

<P><STRONG><a name="[64c]"></a>Show_TestParameterOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testparameter.o(i.Show_TestParameterOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_TestParameterOneLevelMenuContent &rArr; Show_TestParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestParameter
</UL>

<P><STRONG><a name="[64e]"></a>Show_TestParameterOneLevelMenuUnit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testparameter.o(i.Show_TestParameterOneLevelMenuUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_TestParameterOneLevelMenuUnit &rArr; Show_TestParameterOneRowOneLevelMenuUnit &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestParameter
</UL>

<P><STRONG><a name="[650]"></a>Show_TestParameterOneRowOneLevelMenuArrow</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, testparameter.o(i.Show_TestParameterOneRowOneLevelMenuArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Show_TestParameterOneRowOneLevelMenuArrow &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterShowOneMenuWithCursor
</UL>

<P><STRONG><a name="[64d]"></a>Show_TestParameterOneRowOneLevelMenuContent</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, testparameter.o(i.Show_TestParameterOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_TestParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterShowOneMenuWithCursor
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterRestoreShowOneMenu
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneLevelMenuContent
</UL>

<P><STRONG><a name="[651]"></a>Show_TestParameterOneRowOneLevelMenuCue</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, testparameter.o(i.Show_TestParameterOneRowOneLevelMenuCue))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = Show_TestParameterOneRowOneLevelMenuCue &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterTwoLevelMenuKeyProcess
</UL>

<P><STRONG><a name="[64f]"></a>Show_TestParameterOneRowOneLevelMenuUnit</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, testparameter.o(i.Show_TestParameterOneRowOneLevelMenuUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = Show_TestParameterOneRowOneLevelMenuUnit &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterShowOneMenuWithCursor
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterRestoreShowOneMenu
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneLevelMenuUnit
</UL>

<P><STRONG><a name="[686]"></a>TestParameterAccordRoundDiameterGetCutAreaProcess</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, testparameter.o(i.TestParameterAccordRoundDiameterGetCutAreaProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = TestParameterAccordRoundDiameterGetCutAreaProcess &rArr; TestParameterRestoreShowOneMenu &rArr; Show_TestParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str2float
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterRestoreShowOneMenu
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestParameterIndex
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
</UL>

<P><STRONG><a name="[689]"></a>TestParameterCheckPutinData</STRONG> (Thumb, 1204 bytes, Stack size 32 bytes, testparameter.o(i.TestParameterCheckPutinData))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TestParameterCheckPutinData &rArr; SetPopWindowsInfomation
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinFloatDataAddr
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestParameterIndex
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterTwoLevelMenuKeyProcess
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
</UL>

<P><STRONG><a name="[460]"></a>TestParameterConfig</STRONG> (Thumb, 5664 bytes, Stack size 0 bytes, testparameter.o(i.TestParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPageGetTestInfomationPage
</UL>

<P><STRONG><a name="[68c]"></a>TestParameterExchangeSampleShape</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, testparameter.o(i.TestParameterExchangeSampleShape))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = TestParameterExchangeSampleShape &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestParameterIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
</UL>

<P><STRONG><a name="[68d]"></a>TestParameterGetConvertArea</STRONG> (Thumb, 714 bytes, Stack size 48 bytes, testparameter.o(i.TestParameterGetConvertArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = TestParameterGetConvertArea &rArr; TestParameterRestoreShowOneMenu &rArr; Show_TestParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str2float
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCircularArea
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterRestoreShowOneMenu
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestParameterIndex
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
</UL>
<BR>[Called By]<UL><LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterTwoLevelMenuKeyProcess
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
</UL>

<P><STRONG><a name="[462]"></a>TestParameterIndexCrossTheBorderProcess</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, testparameter.o(i.TestParameterIndexCrossTheBorderProcess))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPageGetTestInfomationPage
</UL>

<P><STRONG><a name="[696]"></a>TestParameterIndexUpdate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, testparameter.o(i.TestParameterIndexUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterUpdateStatus
</UL>

<P><STRONG><a name="[45f]"></a>TestParameterInit</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, testparameter.o(i.TestParameterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = TestParameterInit &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestContent
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModelType
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPageGetTestInfomationPage
</UL>

<P><STRONG><a name="[4d9]"></a>TestParameterKeyProcess</STRONG> (Thumb, 798 bytes, Stack size 24 bytes, testparameter.o(i.TestParameterKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 2180<LI>Call Chain = TestParameterKeyProcess &rArr; TestParameterCheckSerialRepeat &rArr; TestParameterSerialAddOne &rArr; report_exist &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTestTypeSelectTargetPage
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTestTypeSelectSourcePage
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTwoLevelMenuAddr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterUpdateStatus
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterTwoLevelMenuKeyProcess
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPullData
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterGetConvertArea
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterExchangeSampleShape
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckPutinData
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterAccordRoundDiameterGetCutAreaProcess
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuUnit
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuContent
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestParameterIndex
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckSerialRepeat
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
</UL>

<P><STRONG><a name="[4db]"></a>TestParameterLeavePageCheckCycle</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testparameter.o(i.TestParameterLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = TestParameterLeavePageCheckCycle &rArr; TestParameterWriteParameter &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterWriteParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
</UL>

<P><STRONG><a name="[4d7]"></a>TestParameterMoveCursorProcess</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, testparameter.o(i.TestParameterMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = TestParameterMoveCursorProcess &rArr; TestParameterShowOneMenuWithCursor &rArr; Show_TestParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterShowOneMenuWithCursor
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterRestoreShowOneMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
</UL>

<P><STRONG><a name="[4d5]"></a>TestParameterMoveIndexProcess</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, testparameter.o(i.TestParameterMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TestParameterMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
</UL>

<P><STRONG><a name="[463]"></a>TestParameterOneLevelMenuContentProcess</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, testparameter.o(i.TestParameterOneLevelMenuContentProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TestParameterOneLevelMenuContentProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPageGetTestInfomationPage
</UL>

<P><STRONG><a name="[4da]"></a>TestParameterPopWindowsProcess</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, testparameter.o(i.TestParameterPopWindowsProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = TestParameterPopWindowsProcess &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
</UL>

<P><STRONG><a name="[690]"></a>TestParameterPullData</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, testparameter.o(i.TestParameterPullData))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = TestParameterPullData &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinFloatDataAddr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterTwoLevelMenuKeyProcess
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
</UL>

<P><STRONG><a name="[4d4]"></a>TestParameterPutinProcess</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, testparameter.o(i.TestParameterPutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = TestParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterTwoLevelMenuKeyProcess
</UL>

<P><STRONG><a name="[461]"></a>TestParameterReadParameter</STRONG> (Thumb, 1484 bytes, Stack size 16 bytes, testparameter.o(i.TestParameterReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = TestParameterReadParameter &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCircularArea
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestParameterIndex
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPageGetTestInfomationPage
</UL>

<P><STRONG><a name="[688]"></a>TestParameterRestoreShowOneMenu</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, testparameter.o(i.TestParameterRestoreShowOneMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = TestParameterRestoreShowOneMenu &rArr; Show_TestParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuUnit
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuContent
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_TestParameterOneRowOneLevelMenuArrow
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterMoveCursorProcess
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterGetConvertArea
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterAccordRoundDiameterGetCutAreaProcess
</UL>

<P><STRONG><a name="[68b]"></a>TestParameterSerialAddOne</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, testparameter.o(i.TestParameterSerialAddOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 1164<LI>Call Chain = TestParameterSerialAddOne &rArr; report_exist &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_exist
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrCutBackReplace
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialAddOneCycle
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckSerialRepeat
</UL>

<P><STRONG><a name="[4d8]"></a>TestParameterShortcutCycleTask</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, testparameter.o(i.TestParameterShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = TestParameterShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
</UL>

<P><STRONG><a name="[694]"></a>TestParameterShowOneMenuWithCursor</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, testparameter.o(i.TestParameterShowOneMenuWithCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = TestParameterShowOneMenuWithCursor &rArr; Show_TestParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuUnit
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuContent
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuArrow
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterMoveCursorProcess
</UL>

<P><STRONG><a name="[4d6]"></a>TestParameterStatusProcess</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, testparameter.o(i.TestParameterStatusProcess))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
</UL>

<P><STRONG><a name="[68e]"></a>TestParameterTwoLevelMenuKeyProcess</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, testparameter.o(i.TestParameterTwoLevelMenuKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748<LI>Call Chain = TestParameterTwoLevelMenuKeyProcess &rArr; TestParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPutinProcess
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterPullData
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterGetConvertArea
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterCheckPutinData
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneRowOneLevelMenuCue
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
</UL>

<P><STRONG><a name="[68f]"></a>TestParameterUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, testparameter.o(i.TestParameterUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TestParameterUpdateStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterIndexUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterKeyProcess
</UL>

<P><STRONG><a name="[693]"></a>TestParameterWriteParameter</STRONG> (Thumb, 1008 bytes, Stack size 16 bytes, testparameter.o(i.TestParameterWriteParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = TestParameterWriteParameter &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str2float
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCircularArea
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestParameterIndex
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestParameterLeavePageCheckCycle
</UL>

<P><STRONG><a name="[464]"></a>Traverse_TestParameter</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, testparameter.o(i.Traverse_TestParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_TestParameter &rArr; Show_TestParameterOneLevelMenuContent &rArr; Show_TestParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneLevelMenuUnit
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestParameterOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestParameterPage
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMainPageGetTestInfomationPage
</UL>

<P><STRONG><a name="[6a2]"></a>AccordingIndexConvTestType</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, testselect.o(i.AccordingIndexConvTestType))
<BR><BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectLeavePageCheckCycle
</UL>

<P><STRONG><a name="[6a3]"></a>AccordingTestTypeConvIndex</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, testselect.o(i.AccordingTestTypeConvIndex))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectReadParameter
</UL>

<P><STRONG><a name="[39d]"></a>ConfigTestSelectRectangleFrameCoordinate</STRONG> (Thumb, 310 bytes, Stack size 20 bytes, testselect.o(i.ConfigTestSelectRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigTestSelectRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelect
</UL>

<P><STRONG><a name="[39c]"></a>GUI_TestSelect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, testselect.o(i.GUI_TestSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_TestSelect &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelectRectangleFrame
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelectOneLevelMenu
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTestSelectRectangleFrameCoordinate
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
</UL>

<P><STRONG><a name="[3a0]"></a>GUI_TestSelectDrawOneRectangleFrame</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, testselect.o(i.GUI_TestSelectDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_TestSelectDrawOneRectangleFrame &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectMoveCursorProcess
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelectRectangleFrame
</UL>

<P><STRONG><a name="[3a1]"></a>GUI_TestSelectDrawOneRowOneLevelMenu</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, testselect.o(i.GUI_TestSelectDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = GUI_TestSelectDrawOneRowOneLevelMenu &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr32At
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectMoveCursorProcess
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelectOneLevelMenu
</UL>

<P><STRONG><a name="[39f]"></a>GUI_TestSelectOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testselect.o(i.GUI_TestSelectOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = GUI_TestSelectOneLevelMenu &rArr; GUI_TestSelectDrawOneRowOneLevelMenu &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelectDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelect
</UL>

<P><STRONG><a name="[39e]"></a>GUI_TestSelectRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testselect.o(i.GUI_TestSelectRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_TestSelectRectangleFrame &rArr; GUI_TestSelectDrawOneRectangleFrame &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelectDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelect
</UL>

<P><STRONG><a name="[4e7]"></a>TestSelectConfig</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, testselect.o(i.TestSelectConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TestSelectConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectTestAttribute
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
</UL>

<P><STRONG><a name="[4e6]"></a>TestSelectInit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, testselect.o(i.TestSelectInit))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
</UL>

<P><STRONG><a name="[4ec]"></a>TestSelectKeyProcess</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, testselect.o(i.TestSelectKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TestSelectKeyProcess &rArr; TestSelectShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectShortcutCheckCycle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
</UL>

<P><STRONG><a name="[4ed]"></a>TestSelectLeavePageCheckCycle</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, testselect.o(i.TestSelectLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = TestSelectLeavePageCheckCycle &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordingIndexConvTestType
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
</UL>

<P><STRONG><a name="[4eb]"></a>TestSelectMoveCursorProcess</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, testselect.o(i.TestSelectMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = TestSelectMoveCursorProcess &rArr; GUI_TestSelectDrawOneRowOneLevelMenu &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelectDrawOneRowOneLevelMenu
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestSelectDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
</UL>

<P><STRONG><a name="[4e9]"></a>TestSelectMoveIndexProcess</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, testselect.o(i.TestSelectMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TestSelectMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
</UL>

<P><STRONG><a name="[4e8]"></a>TestSelectReadParameter</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, testselect.o(i.TestSelectReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TestSelectReadParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordingTestTypeConvIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
</UL>

<P><STRONG><a name="[6a1]"></a>TestSelectShortcutCheckCycle</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, testselect.o(i.TestSelectShortcutCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TestSelectShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressNum
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKeyProcess
</UL>

<P><STRONG><a name="[4ea]"></a>TestSelectStatusProcess</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, testselect.o(i.TestSelectStatusProcess))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestSelectPage
</UL>

<P><STRONG><a name="[15f]"></a>Clear_ReportSearchOneRowOneLevelMenuArrow</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, searchreport.o(i.Clear_ReportSearchOneRowOneLevelMenuArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Clear_ReportSearchOneRowOneLevelMenuArrow &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchMoveCursorProcess
</UL>

<P><STRONG><a name="[353]"></a>ConfigReportSearchRectangleFrameCoordinate</STRONG> (Thumb, 566 bytes, Stack size 8 bytes, searchreport.o(i.ConfigReportSearchRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ConfigReportSearchRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearch
</UL>

<P><STRONG><a name="[352]"></a>GUI_ReportSearch</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, searchreport.o(i.GUI_ReportSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_ReportSearch &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSearchType
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearchRectangleFrame
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearchOneLevelMenu
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearchCue
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigReportSearchRectangleFrameCoordinate
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[357]"></a>GUI_ReportSearchCue</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, searchreport.o(i.GUI_ReportSearchCue))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = GUI_ReportSearchCue &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearch
</UL>

<P><STRONG><a name="[359]"></a>GUI_ReportSearchDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, searchreport.o(i.GUI_ReportSearchDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_ReportSearchDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearchRectangleFrame
</UL>

<P><STRONG><a name="[35a]"></a>GUI_ReportSearchDrawOneRowOneLevelMenu</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, searchreport.o(i.GUI_ReportSearchDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_ReportSearchDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearchOneLevelMenu
</UL>

<P><STRONG><a name="[355]"></a>GUI_ReportSearchOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, searchreport.o(i.GUI_ReportSearchOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_ReportSearchOneLevelMenu &rArr; GUI_ReportSearchDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearchDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearch
</UL>

<P><STRONG><a name="[354]"></a>GUI_ReportSearchRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, searchreport.o(i.GUI_ReportSearchRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ReportSearchRectangleFrame &rArr; GUI_ReportSearchDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearchDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearch
</UL>

<P><STRONG><a name="[3c8]"></a>GetReportSearchDataAddr</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, searchreport.o(i.GetReportSearchDataAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetReportSearchDataAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchDataRealIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestDataFromSD
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneRowOneLevelMenuContent
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchReadParameter
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
</UL>

<P><STRONG><a name="[3c9]"></a>GetReportSearchDataRealIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, searchreport.o(i.GetReportSearchDataRealIndex))
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchDataAddr
</UL>

<P><STRONG><a name="[358]"></a>GetReportSearchIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, searchreport.o(i.GetReportSearchIndex))
<BR><BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestDataFromSD
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSearchType
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneRowOneLevelMenuContent
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchReadParameter
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchConfig
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReportSearchCue
</UL>

<P><STRONG><a name="[5c8]"></a>GetReportSearchTestTypeIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, searchreport.o(i.GetReportSearchTestTypeIndex))
<BR><BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchReadParameter
</UL>

<P><STRONG><a name="[483]"></a>ReportSearchConfig</STRONG> (Thumb, 792 bytes, Stack size 8 bytes, searchreport.o(i.ReportSearchConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReportSearchConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[5c9]"></a>ReportSearchIndexUpdate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, searchreport.o(i.ReportSearchIndexUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchUpdateStatus
</UL>

<P><STRONG><a name="[482]"></a>ReportSearchInit</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, searchreport.o(i.ReportSearchInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReportSearchInit &rArr; GetModelType
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModelType
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[48b]"></a>ReportSearchKeyProcess</STRONG> (Thumb, 818 bytes, Stack size 24 bytes, searchreport.o(i.ReportSearchKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1724<LI>Call Chain = ReportSearchKeyProcess &rArr; LoadTwoLevelMenuPage &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneRowOneLevelMenuContent
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchUpdateStatus
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchIndex
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchDataAddr
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTwoLevelMenuAddr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[48c]"></a>ReportSearchLeavePageCheckCycle</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, searchreport.o(i.ReportSearchLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 956<LI>Call Chain = ReportSearchLeavePageCheckCycle &rArr; StartOneReportSearch &rArr; GetTestDataFromSD &rArr; report_search_date &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartOneReportSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[489]"></a>ReportSearchMoveCursorProcess</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, searchreport.o(i.ReportSearchMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = ReportSearchMoveCursorProcess &rArr; Show_ReportSearchOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneRowOneLevelMenuContent
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneRowOneLevelMenuArrow
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_ReportSearchOneRowOneLevelMenuArrow
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[487]"></a>ReportSearchMoveIndexProcess</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, searchreport.o(i.ReportSearchMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ReportSearchMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[486]"></a>ReportSearchPutinProcess</STRONG> (Thumb, 336 bytes, Stack size 16 bytes, searchreport.o(i.ReportSearchPutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = ReportSearchPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSearchType
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[484]"></a>ReportSearchReadParameter</STRONG> (Thumb, 340 bytes, Stack size 48 bytes, searchreport.o(i.ReportSearchReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ReportSearchReadParameter &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSearchType
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchTestTypeIndex
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchIndex
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchDataAddr
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[48a]"></a>ReportSearchShortcutCycleTask</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, searchreport.o(i.ReportSearchShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = ReportSearchShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[488]"></a>ReportSearchStatusProcess</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, searchreport.o(i.ReportSearchStatusProcess))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[5c6]"></a>ReportSearchUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, searchreport.o(i.ReportSearchUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReportSearchUpdateStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchIndexUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
</UL>

<P><STRONG><a name="[63f]"></a>Show_ReportSearchOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, searchreport.o(i.Show_ReportSearchOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = Show_ReportSearchOneLevelMenuContent &rArr; Show_ReportSearchOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ReportSearch
</UL>

<P><STRONG><a name="[5c7]"></a>Show_ReportSearchOneRowOneLevelMenuArrow</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, searchreport.o(i.Show_ReportSearchOneRowOneLevelMenuArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Show_ReportSearchOneRowOneLevelMenuArrow &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchMoveCursorProcess
</UL>

<P><STRONG><a name="[5c5]"></a>Show_ReportSearchOneRowOneLevelMenuContent</STRONG> (Thumb, 302 bytes, Stack size 56 bytes, searchreport.o(i.Show_ReportSearchOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Show_ReportSearchOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDateFormate
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSearchType
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchIndex
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReportSearchDataAddr
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneLevelMenuContent
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchMoveCursorProcess
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportSearchKeyProcess
</UL>

<P><STRONG><a name="[660]"></a>TestSearchResultInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, searchreport.o(i.TestSearchResultInit))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartOneReportSearch
</UL>

<P><STRONG><a name="[485]"></a>Traverse_ReportSearch</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, searchreport.o(i.Traverse_ReportSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = Traverse_ReportSearch &rArr; Show_ReportSearchOneLevelMenuContent &rArr; Show_ReportSearchOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ReportSearchOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadReportSearchPage
</UL>

<P><STRONG><a name="[1d1]"></a>ConfigTestReportOnwRowRectangleFrameCoordinate</STRONG> (Thumb, 732 bytes, Stack size 12 bytes, testreport.o(i.ConfigTestReportOnwRowRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ConfigTestReportOnwRowRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTestReportRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1d0]"></a>ConfigTestReportRectangleFrameCoordinate</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, testreport.o(i.ConfigTestReportRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ConfigTestReportRectangleFrameCoordinate &rArr; ConfigTestReportOnwRowRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTestReportOnwRowRectangleFrameCoordinate
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReport
</UL>

<P><STRONG><a name="[21e]"></a>DeleteAllReportShortcutCycleTask</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, testreport.o(i.DeleteAllReportShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = DeleteAllReportShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllReport
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportAllReport
</UL>

<P><STRONG><a name="[226]"></a>DeleteCurrentReport</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, testreport.o(i.DeleteCurrentReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = DeleteCurrentReport &rArr; DeleteCoordinateFolder &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestReportIndex
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_delete
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCoordinateFolder
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDelete
</UL>

<P><STRONG><a name="[222]"></a>DeletePageReport</STRONG> (Thumb, 512 bytes, Stack size 104 bytes, testreport.o(i.DeletePageReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 1828<LI>Call Chain = DeletePageReport &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ProgressBar
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProcessBody
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsWithoutOperate
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopWindowsAddr
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestReportIndex
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_delete
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCoordinateFolder
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllReport
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDelete
</UL>

<P><STRONG><a name="[26d]"></a>ExportAllReport</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, testreport.o(i.ExportAllReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 2340<LI>Call Chain = ExportAllReport &rArr; ExportPageReport &rArr; ExportCurrentReport &rArr; SaveCoordinatePoint &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportReadParameter
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllReportShortcutCycleTask
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportExport
</UL>

<P><STRONG><a name="[26f]"></a>ExportCurrentReport</STRONG> (Thumb, 304 bytes, Stack size 1008 bytes, testreport.o(i.ExportCurrentReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 2228<LI>Call Chain = ExportCurrentReport &rArr; SaveCoordinatePoint &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReportSaveTime
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurveSaveTime
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCoordinatePoint
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_save
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCoordinatePoint
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoordinatePointAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportExport
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
</UL>

<P><STRONG><a name="[26e]"></a>ExportPageReport</STRONG> (Thumb, 408 bytes, Stack size 96 bytes, testreport.o(i.ExportPageReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 2324<LI>Call Chain = ExportPageReport &rArr; ExportCurrentReport &rArr; SaveCoordinatePoint &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ProgressBar
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProcessBody
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsWithoutOperate
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopWindowsAddr
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestReportIndex
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportCurrentReport
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportExport
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportAllReport
</UL>

<P><STRONG><a name="[396]"></a>GUI_TestReport</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, testreport.o(i.GUI_TestReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_TestReport &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportShowCurPageInfomation
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReportRectangleFrame
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReportField
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTestReportRectangleFrameCoordinate
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
</UL>

<P><STRONG><a name="[39a]"></a>GUI_TestReportDrawOneRectangleFrame</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, testreport.o(i.GUI_TestReportDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_TestReportDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReportRectangleFrame
</UL>

<P><STRONG><a name="[39b]"></a>GUI_TestReportDrawOneRowTitleRectangleFrame</STRONG> (Thumb, 268 bytes, Stack size 16 bytes, testreport.o(i.GUI_TestReportDrawOneRowTitleRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_TestReportDrawOneRowTitleRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReportRectangleFrame
</UL>

<P><STRONG><a name="[398]"></a>GUI_TestReportField</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, testreport.o(i.GUI_TestReportField))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_TestReportField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestReportIndex
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReport
</UL>

<P><STRONG><a name="[397]"></a>GUI_TestReportRectangleFrame</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, testreport.o(i.GUI_TestReportRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_TestReportRectangleFrame &rArr; GUI_TestReportDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReportDrawOneRowTitleRectangleFrame
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReportDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReport
</UL>

<P><STRONG><a name="[227]"></a>GetTestReportIndex</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, testreport.o(i.GetTestReportIndex))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportReadParameter
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestReportOneRowOneLevelMenuContent
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReportField
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCurrentReport
</UL>

<P><STRONG><a name="[4dc]"></a>LoadTestReportDeleteSelectPage</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, testreport.o(i.LoadTestReportDeleteSelectPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadTestReportDeleteSelectPage &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSelectPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopWindowsSelectResult
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectWindowsAddr
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopWindowsAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDelete
</UL>

<P><STRONG><a name="[4de]"></a>LoadTestReportExportSelectPage</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, testreport.o(i.LoadTestReportExportSelectPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1716<LI>Call Chain = LoadTestReportExportSelectPage &rArr; LoadSelectWindows &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectWindowsAddr
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopWindowsAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportExport
</UL>

<P><STRONG><a name="[652]"></a>Show_TestReportOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testreport.o(i.Show_TestReportOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_TestReportOneLevelMenuContent &rArr; Show_TestReportOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestReportOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestReport
</UL>

<P><STRONG><a name="[653]"></a>Show_TestReportOneRowOneLevelMenuContent</STRONG> (Thumb, 862 bytes, Stack size 40 bytes, testreport.o(i.Show_TestReportOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_TestReportOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestReportIndex
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportMoveCursorProcess
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestReportOneLevelMenuContent
</UL>

<P><STRONG><a name="[4e0]"></a>TestReportConfig</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, testreport.o(i.TestReportConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TestReportConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSearchReportResultAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
</UL>

<P><STRONG><a name="[698]"></a>TestReportDelete</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, testreport.o(i.TestReportDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 1860<LI>Call Chain = TestReportDelete &rArr; DeleteAllReport &rArr; DeletePageReport &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllReport
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportDeleteSelectPage
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeletePageReport
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCurrentReport
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDeleteReport
</UL>

<P><STRONG><a name="[699]"></a>TestReportExport</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, testreport.o(i.TestReportExport))
<BR><BR>[Stack]<UL><LI>Max Depth = 2356<LI>Call Chain = TestReportExport &rArr; ExportAllReport &rArr; ExportPageReport &rArr; ExportCurrentReport &rArr; SaveCoordinatePoint &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportExportSelectPage
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportPageReport
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportCurrentReport
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportAllReport
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportExportReport
</UL>

<P><STRONG><a name="[4df]"></a>TestReportInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, testreport.o(i.TestReportInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TestReportInit
</UL>
<BR>[Calls]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isAgainSearchReport
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetAgainSearchReport
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
</UL>

<P><STRONG><a name="[4e5]"></a>TestReportKeyProcess</STRONG> (Thumb, 324 bytes, Stack size 8 bytes, testreport.o(i.TestReportKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 2476<LI>Call Chain = TestReportKeyProcess &rArr; TestReportPrintAllPageReport &rArr; TestReportPrintOneReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportExportReport
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDeleteReport
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPrintAllPageReport
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPressNumPrintReport
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
</UL>

<P><STRONG><a name="[4e3]"></a>TestReportMoveCursorProcess</STRONG> (Thumb, 766 bytes, Stack size 8 bytes, testreport.o(i.TestReportMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = TestReportMoveCursorProcess &rArr; Show_TestReportOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestReportOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
</UL>

<P><STRONG><a name="[4e2]"></a>TestReportMoveIndexProcess</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, testreport.o(i.TestReportMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TestReportMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
</UL>

<P><STRONG><a name="[69d]"></a>TestReportPressNumPrintReport</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, testreport.o(i.TestReportPressNumPrintReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 2468<LI>Call Chain = TestReportPressNumPrintReport &rArr; TestReportPrintOneReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPrintOneReport
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressNum
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPrintingShortcutMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportKeyProcess
</UL>

<P><STRONG><a name="[69e]"></a>TestReportPrintAllPageReport</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, testreport.o(i.TestReportPrintAllPageReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 2468<LI>Call Chain = TestReportPrintAllPageReport &rArr; TestReportPrintOneReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPrintOneReport
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPrintingShortcutMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportKeyProcess
</UL>

<P><STRONG><a name="[69f]"></a>TestReportPrintOneReport</STRONG> (Thumb, 102 bytes, Stack size 992 bytes, testreport.o(i.TestReportPrintOneReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 2452<LI>Call Chain = TestReportPrintOneReport &rArr; PrintTestReport &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
</UL>
<BR>[Called By]<UL><LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPrintAllPageReport
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportPressNumPrintReport
</UL>

<P><STRONG><a name="[221]"></a>TestReportReadParameter</STRONG> (Thumb, 378 bytes, Stack size 32 bytes, testreport.o(i.TestReportReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 972<LI>Call Chain = TestReportReadParameter &rArr; GetTestDataFromSD &rArr; report_search_date &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTimeConvTimeFormate
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestReportIndex
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestDataFromSD
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSearchType
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDeleteReport
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllReport
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportAllReport
</UL>

<P><STRONG><a name="[4e4]"></a>TestReportShortcutCycleTask</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, testreport.o(i.TestReportShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = TestReportShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
</UL>

<P><STRONG><a name="[399]"></a>TestReportShowCurPageInfomation</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, testreport.o(i.TestReportShowCurPageInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = TestReportShowCurPageInfomation &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_show_image
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestReport
</UL>

<P><STRONG><a name="[4e1]"></a>Traverse_TestReport</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, testreport.o(i.Traverse_TestReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_TestReport &rArr; Show_TestReportOneLevelMenuContent &rArr; Show_TestReportOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestReportOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestReportPage
</UL>

<P><STRONG><a name="[1a7]"></a>ConfigDetailReportOneFieldRectangleFrameCoordinate</STRONG> (Thumb, 1564 bytes, Stack size 20 bytes, detailreport.o(i.ConfigDetailReportOneFieldRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigDetailReportOneFieldRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDetailReportOnwRowRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1a6]"></a>ConfigDetailReportOnwRowRectangleFrameCoordinate</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, detailreport.o(i.ConfigDetailReportOnwRowRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ConfigDetailReportOnwRowRectangleFrameCoordinate &rArr; ConfigDetailReportOneFieldRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDetailReportOneFieldRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDetailReportRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1a9]"></a>ConfigDetailReportOtherFieldRectangleFrameCoordinate</STRONG> (Thumb, 216 bytes, Stack size 20 bytes, detailreport.o(i.ConfigDetailReportOtherFieldRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigDetailReportOtherFieldRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDetailReportRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1a8]"></a>ConfigDetailReportRectangleFrameCoordinate</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, detailreport.o(i.ConfigDetailReportRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ConfigDetailReportRectangleFrameCoordinate &rArr; ConfigDetailReportOnwRowRectangleFrameCoordinate &rArr; ConfigDetailReportOneFieldRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDetailReportOtherFieldRectangleFrameCoordinate
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDetailReportOnwRowRectangleFrameCoordinate
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReport
</UL>

<P><STRONG><a name="[22d]"></a>DetailReportConfig</STRONG> (Thumb, 4536 bytes, Stack size 16 bytes, detailreport.o(i.DetailReportConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = DetailReportConfig &rArr; report_read &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectReportFileNameAddr
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDetailReportPage
</UL>

<P><STRONG><a name="[22e]"></a>DetailReportDeleteReport</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, detailreport.o(i.DetailReportDeleteReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 1876<LI>Call Chain = DetailReportDeleteReport &rArr; TestReportDeleteReport &rArr; TestReportDelete &rArr; DeleteAllReport &rArr; DeletePageReport &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportDeleteReport
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportKeyProcess
</UL>

<P><STRONG><a name="[230]"></a>DetailReportInit</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, detailreport.o(i.DetailReportInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DetailReportInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isShowDetailReport
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetShowDetailReport
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectReportTestType
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurPageTestReportNum
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestAttribute
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDetailReportPage
</UL>

<P><STRONG><a name="[235]"></a>DetailReportKeyProcess</STRONG> (Thumb, 340 bytes, Stack size 8 bytes, detailreport.o(i.DetailReportKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1884<LI>Call Chain = DetailReportKeyProcess &rArr; DetailReportDeleteReport &rArr; TestReportDeleteReport &rArr; TestReportDelete &rArr; DeleteAllReport &rArr; DeletePageReport &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportDeleteReport
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportIndexIncrease
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReportIndexDecrease
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDetailReportPage
</UL>

<P><STRONG><a name="[238]"></a>DetailReportReadParameter</STRONG> (Thumb, 2486 bytes, Stack size 40 bytes, detailreport.o(i.DetailReportReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1156<LI>Call Chain = DetailReportReadParameter &rArr; report_read &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetailReportFieldIndex
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTimeConvTimeFormate
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestReportTime
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectReportFileNameAddr
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDetailReportPage
</UL>

<P><STRONG><a name="[23c]"></a>DetailReportShortcutCycleTask</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, detailreport.o(i.DetailReportShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = DetailReportShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDetailReportPage
</UL>

<P><STRONG><a name="[23d]"></a>DetailReportShowCircleMarkInfomation</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, detailreport.o(i.DetailReportShowCircleMarkInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = DetailReportShowCircleMarkInfomation &rArr; DrawCircleMark &rArr; lcd_fill_circle &rArr; LCD_HL_DrawHLine &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurPageTestReportNum
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurPageCurTestReportIndex
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCircleMark
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReport
</UL>

<P><STRONG><a name="[240]"></a>DetailReportShowCurPageInfomation</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, detailreport.o(i.DetailReportShowCurPageInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = DetailReportShowCurPageInfomation &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_show_image
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReport
</UL>

<P><STRONG><a name="[2f2]"></a>GUI_DetailReport</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, detailreport.o(i.GUI_DetailReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_DetailReport &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReportRectangleFrame
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReportOtherField
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReportField
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShowCurPageInfomation
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportShowCircleMarkInfomation
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDetailReportRectangleFrameCoordinate
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDetailReportPage
</UL>

<P><STRONG><a name="[2f6]"></a>GUI_DetailReportDrawOneRowTitleRectangleFrame</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, detailreport.o(i.GUI_DetailReportDrawOneRowTitleRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DetailReportDrawOneRowTitleRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReportRectangleFrame
</UL>

<P><STRONG><a name="[2f5]"></a>GUI_DetailReportField</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, detailreport.o(i.GUI_DetailReportField))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_DetailReportField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReport
</UL>

<P><STRONG><a name="[2f4]"></a>GUI_DetailReportOtherField</STRONG> (Thumb, 378 bytes, Stack size 40 bytes, detailreport.o(i.GUI_DetailReportOtherField))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_DetailReportOtherField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_rect
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReport
</UL>

<P><STRONG><a name="[2f3]"></a>GUI_DetailReportRectangleFrame</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, detailreport.o(i.GUI_DetailReportRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DetailReportRectangleFrame &rArr; GUI_DetailReportDrawOneRowTitleRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReportDrawOneRowTitleRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DetailReport
</UL>

<P><STRONG><a name="[23b]"></a>GetDetailReportFieldIndex</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, detailreport.o(i.GetDetailReportFieldIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetDetailReportFieldIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetailReportReadParameter
</UL>

<P><STRONG><a name="[620]"></a>Show_DetailReportAvailStrengthFieldContent</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, detailreport.o(i.Show_DetailReportAvailStrengthFieldContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Show_DetailReportAvailStrengthFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOtherFieldContent
</UL>

<P><STRONG><a name="[621]"></a>Show_DetailReportOneFieldContent</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, detailreport.o(i.Show_DetailReportOneFieldContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_DetailReportOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOneRowOneLevelMenuContent
</UL>

<P><STRONG><a name="[622]"></a>Show_DetailReportOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, detailreport.o(i.Show_DetailReportOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = Show_DetailReportOneLevelMenuContent &rArr; Show_DetailReportOneRowOneLevelMenuContent &rArr; Show_DetailReportOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_DetailReport
</UL>

<P><STRONG><a name="[623]"></a>Show_DetailReportOneRowOneLevelMenuContent</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, detailreport.o(i.Show_DetailReportOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Show_DetailReportOneRowOneLevelMenuContent &rArr; Show_DetailReportOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOneFieldContent
</UL>
<BR>[Called By]<UL><LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOneLevelMenuContent
</UL>

<P><STRONG><a name="[624]"></a>Show_DetailReportOtherFieldContent</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, detailreport.o(i.Show_DetailReportOtherFieldContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = Show_DetailReportOtherFieldContent &rArr; Show_DetailReportTimeFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportTimeFieldContent
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportStandardFieldContent
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportSerialFieldContent
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportAvailStrengthFieldContent
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_DetailReport
</UL>

<P><STRONG><a name="[625]"></a>Show_DetailReportSerialFieldContent</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, detailreport.o(i.Show_DetailReportSerialFieldContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Show_DetailReportSerialFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOtherFieldContent
</UL>

<P><STRONG><a name="[627]"></a>Show_DetailReportStandardFieldContent</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, detailreport.o(i.Show_DetailReportStandardFieldContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Show_DetailReportStandardFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOtherFieldContent
</UL>

<P><STRONG><a name="[626]"></a>Show_DetailReportTimeFieldContent</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, detailreport.o(i.Show_DetailReportTimeFieldContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Show_DetailReportTimeFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOtherFieldContent
</UL>

<P><STRONG><a name="[44f]"></a>Traverse_DetailReport</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, detailreport.o(i.Traverse_DetailReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = Traverse_DetailReport &rArr; Show_DetailReportOneLevelMenuContent &rArr; Show_DetailReportOneRowOneLevelMenuContent &rArr; Show_DetailReportOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOtherFieldContent
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_DetailReportOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDetailReportPage
</UL>

<P><STRONG><a name="[388]"></a>ConfigSystemSetRectangleFrameCoordinate</STRONG> (Thumb, 310 bytes, Stack size 20 bytes, systemset.o(i.ConfigSystemSetRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigSystemSetRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemSet
</UL>

<P><STRONG><a name="[387]"></a>GUI_SystemSet</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, systemset.o(i.GUI_SystemSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_SystemSet &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemSetRectangleFrame
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigSystemSetRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetPage
</UL>

<P><STRONG><a name="[38a]"></a>GUI_SystemSetDrawOneRectangleFrame</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, systemset.o(i.GUI_SystemSetDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = GUI_SystemSetDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr32At
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetMoveCursorProcess
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemSetRectangleFrame
</UL>

<P><STRONG><a name="[389]"></a>GUI_SystemSetRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systemset.o(i.GUI_SystemSetRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = GUI_SystemSetRectangleFrame &rArr; GUI_SystemSetDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemSetDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemSet
</UL>

<P><STRONG><a name="[4c2]"></a>SystemSetConfig</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, systemset.o(i.SystemSetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetPage
</UL>

<P><STRONG><a name="[4c1]"></a>SystemSetInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, systemset.o(i.SystemSetInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemSetInit
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelSelectChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetPage
</UL>

<P><STRONG><a name="[4c5]"></a>SystemSetKeyProcess</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, systemset.o(i.SystemSetKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemSetKeyProcess &rArr; SystemSetShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetShortcutCheckCycle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetPage
</UL>

<P><STRONG><a name="[4c6]"></a>SystemSetLeavePageCheckCycle</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, systemset.o(i.SystemSetLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = SystemSetLeavePageCheckCycle &rArr; LssuedParameterProcess &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChannelSelectNextPage
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LssuedParameterProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetPage
</UL>

<P><STRONG><a name="[4c4]"></a>SystemSetMoveCursorProcess</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, systemset.o(i.SystemSetMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = SystemSetMoveCursorProcess &rArr; GUI_SystemSetDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemSetDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetPage
</UL>

<P><STRONG><a name="[4c3]"></a>SystemSetMoveIndexProcess</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, systemset.o(i.SystemSetMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SystemSetMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemSetPage
</UL>

<P><STRONG><a name="[67e]"></a>SystemSetShortcutCheckCycle</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, systemset.o(i.SystemSetShortcutCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemSetShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressNum
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSetKeyProcess
</UL>

<P><STRONG><a name="[15d]"></a>Clear_ControlParameterOneRowOneLevelMenuArrow</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, controlparameter.o(i.Clear_ControlParameterOneRowOneLevelMenuArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Clear_ControlParameterOneRowOneLevelMenuArrow &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterMoveCursorProcess
</UL>

<P><STRONG><a name="[2e7]"></a>ConfigControlParameterParameterRectangleFrameCoordinate</STRONG> (Thumb, 568 bytes, Stack size 12 bytes, controlparameter.o(i.ConfigControlParameterParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ConfigControlParameterParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameter
</UL>

<P><STRONG><a name="[1d3]"></a>ControlParameterCheckDataCycle</STRONG> (Thumb, 826 bytes, Stack size 24 bytes, controlparameter.o(i.ControlParameterCheckDataCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ControlParameterCheckDataCycle &rArr; str2float &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str2float
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterLeavePageCheckCycle
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
</UL>

<P><STRONG><a name="[44b]"></a>ControlParameterConfig</STRONG> (Thumb, 764 bytes, Stack size 0 bytes, controlparameter.o(i.ControlParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[1e7]"></a>ControlParameterIndexUpdate</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, controlparameter.o(i.ControlParameterIndexUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterUpdateStatus
</UL>

<P><STRONG><a name="[1d5]"></a>ControlParameterInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, controlparameter.o(i.ControlParameterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ControlParameterInit
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelSelectChannel
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWY_SmplUnit
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFH_SmplUnit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBX_SmplUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[1d6]"></a>ControlParameterKeyProcess</STRONG> (Thumb, 790 bytes, Stack size 32 bytes, controlparameter.o(i.ControlParameterKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = ControlParameterKeyProcess &rArr; LoadTwoLevelMenuPage &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTwoLevelMenuAddr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinFloatDataAddr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneRowOneLevelMenuContent
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterUpdateStatus
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterCheckDataCycle
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[1dc]"></a>ControlParameterLeavePageCheckCycle</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, controlparameter.o(i.ControlParameterLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = ControlParameterLeavePageCheckCycle &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLssuedParameter
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterWriteParameter
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterCheckDataCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[1de]"></a>ControlParameterMoveCursorProcess</STRONG> (Thumb, 316 bytes, Stack size 8 bytes, controlparameter.o(i.ControlParameterMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = ControlParameterMoveCursorProcess &rArr; Show_ControlParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneRowOneLevelMenuUnit
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneRowOneLevelMenuContent
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneRowOneLevelMenuArrow
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_ControlParameterOneRowOneLevelMenuArrow
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[1e1]"></a>ControlParameterMoveIndexProcess</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, controlparameter.o(i.ControlParameterMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ControlParameterMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[1e2]"></a>ControlParameterPutinProcess</STRONG> (Thumb, 320 bytes, Stack size 16 bytes, controlparameter.o(i.ControlParameterPutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = ControlParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[1e3]"></a>ControlParameterReadParameter</STRONG> (Thumb, 860 bytes, Stack size 24 bytes, controlparameter.o(i.ControlParameterReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ControlParameterReadParameter &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetControlParameterIndex
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_full_p_get
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_entry_get
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[1e6]"></a>ControlParameterShortcutCycleTask</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, controlparameter.o(i.ControlParameterShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = ControlParameterShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[44d]"></a>ControlParameterStatusProcess</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, controlparameter.o(i.ControlParameterStatusProcess))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[1db]"></a>ControlParameterUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, controlparameter.o(i.ControlParameterUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ControlParameterUpdateStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterIndexUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
</UL>

<P><STRONG><a name="[1dd]"></a>ControlParameterWriteParameter</STRONG> (Thumb, 754 bytes, Stack size 24 bytes, controlparameter.o(i.ControlParameterWriteParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = ControlParameterWriteParameter &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str2float
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_full_p_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_entry_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetControlParameterIndex
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterLeavePageCheckCycle
</UL>

<P><STRONG><a name="[2e6]"></a>GUI_ControlParameter</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, controlparameter.o(i.GUI_ControlParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_ControlParameter &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameterRectangleFrame
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameterOneLevelMenu
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigControlParameterParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[2ea]"></a>GUI_ControlParameterDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, controlparameter.o(i.GUI_ControlParameterDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_ControlParameterDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameterRectangleFrame
</UL>

<P><STRONG><a name="[2eb]"></a>GUI_ControlParameterDrawOneRowOneLevelMenu</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, controlparameter.o(i.GUI_ControlParameterDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_ControlParameterDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameterOneLevelMenu
</UL>

<P><STRONG><a name="[2e9]"></a>GUI_ControlParameterOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, controlparameter.o(i.GUI_ControlParameterOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_ControlParameterOneLevelMenu &rArr; GUI_ControlParameterDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameterDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameter
</UL>

<P><STRONG><a name="[2e8]"></a>GUI_ControlParameterRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, controlparameter.o(i.GUI_ControlParameterRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ControlParameterRectangleFrame &rArr; GUI_ControlParameterDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameterDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ControlParameter
</UL>

<P><STRONG><a name="[1e4]"></a>GetControlParameterIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, controlparameter.o(i.GetControlParameterIndex))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterWriteParameter
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterReadParameter
</UL>

<P><STRONG><a name="[61e]"></a>Show_ControlParameterOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, controlparameter.o(i.Show_ControlParameterOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_ControlParameterOneLevelMenuContent &rArr; Show_ControlParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ControlParameter
</UL>

<P><STRONG><a name="[61f]"></a>Show_ControlParameterOneLevelMenuUnit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, controlparameter.o(i.Show_ControlParameterOneLevelMenuUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_ControlParameterOneLevelMenuUnit &rArr; Show_ControlParameterOneRowOneLevelMenuUnit &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneRowOneLevelMenuUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ControlParameter
</UL>

<P><STRONG><a name="[1e0]"></a>Show_ControlParameterOneRowOneLevelMenuArrow</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, controlparameter.o(i.Show_ControlParameterOneRowOneLevelMenuArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Show_ControlParameterOneRowOneLevelMenuArrow &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterMoveCursorProcess
</UL>

<P><STRONG><a name="[1d8]"></a>Show_ControlParameterOneRowOneLevelMenuContent</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, controlparameter.o(i.Show_ControlParameterOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_ControlParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneLevelMenuContent
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterMoveCursorProcess
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterKeyProcess
</UL>

<P><STRONG><a name="[1df]"></a>Show_ControlParameterOneRowOneLevelMenuUnit</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, controlparameter.o(i.Show_ControlParameterOneRowOneLevelMenuUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = Show_ControlParameterOneRowOneLevelMenuUnit &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneLevelMenuUnit
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParameterMoveCursorProcess
</UL>

<P><STRONG><a name="[44c]"></a>Traverse_ControlParameter</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, controlparameter.o(i.Traverse_ControlParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_ControlParameter &rArr; Show_ControlParameterOneLevelMenuContent &rArr; Show_ControlParameterOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneLevelMenuUnit
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ControlParameterOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadControlParameterPage
</UL>

<P><STRONG><a name="[113]"></a>CalibrationTableAccordKeyIndexConvCoordinateIndex</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, calibrationtable.o(i.CalibrationTableAccordKeyIndexConvCoordinateIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CalibrationTableAccordKeyIndexConvCoordinateIndex &rArr; GetCalibrationTableSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableSegments
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableTableCursorProcess
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTablePutinProcess
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableMoveIndexProcess
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableKeyProcess
</UL>

<P><STRONG><a name="[115]"></a>CalibrationTableCheckDataCycle</STRONG> (Thumb, 410 bytes, Stack size 32 bytes, calibrationtable.o(i.CalibrationTableCheckDataCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CalibrationTableCheckDataCycle &rArr; GetCalibrationTableSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableSegments
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableFieldIndex
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableLeavePageCheckCycle
</UL>

<P><STRONG><a name="[117]"></a>CalibrationTableCheckSegmentPoint</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, calibrationtable.o(i.CalibrationTableCheckSegmentPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CalibrationTableCheckSegmentPoint &rArr; SetPopWindowsInfomation
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableKeyProcess
</UL>

<P><STRONG><a name="[443]"></a>CalibrationTableConfig</STRONG> (Thumb, 482 bytes, Stack size 0 bytes, calibrationtable.o(i.CalibrationTableConfig))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[118]"></a>CalibrationTableIndexUpdate</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, calibrationtable.o(i.CalibrationTableIndexUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CalibrationTableIndexUpdate &rArr; GetCalibrationTableSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableSegments
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableFieldIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableUpdateStatus
</UL>

<P><STRONG><a name="[119]"></a>CalibrationTableInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, calibrationtable.o(i.CalibrationTableInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CalibrationTableInit
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelSelectChannel
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWY_SmplUnit
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFH_SmplUnit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBX_SmplUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[11a]"></a>CalibrationTableKeyProcess</STRONG> (Thumb, 442 bytes, Stack size 24 bytes, calibrationtable.o(i.CalibrationTableKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484<LI>Call Chain = CalibrationTableKeyProcess &rArr; CalibrationTablePagePrint &rArr; PrintCalibrationTable &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableUpdateStatus
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTablePagePrint
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableCheckSegmentPoint
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableAccordKeyIndexConvCoordinateIndex
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[11d]"></a>CalibrationTableLeavePageCheckCycle</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, calibrationtable.o(i.CalibrationTableLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = CalibrationTableLeavePageCheckCycle &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableWriteParameter
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableCheckDataCycle
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLssuedParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[120]"></a>CalibrationTableMoveCursorProcess</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, calibrationtable.o(i.CalibrationTableMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = CalibrationTableMoveCursorProcess &rArr; CalibrationTableTableCursorProcess &rArr; Show_CalibrationTableOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableTableCursorProcess
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableSegmentCursorProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[123]"></a>CalibrationTableMoveIndexProcess</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, calibrationtable.o(i.CalibrationTableMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = CalibrationTableMoveIndexProcess &rArr; CalibrationTableTableCursorProcess &rArr; Show_CalibrationTableOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableSegments
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableTableCursorProcess
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableSegmentCursorProcess
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableAccordKeyIndexConvCoordinateIndex
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[11c]"></a>CalibrationTablePagePrint</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, calibrationtable.o(i.CalibrationTablePagePrint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460<LI>Call Chain = CalibrationTablePagePrint &rArr; PrintCalibrationTable &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPrintingShortcutMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableKeyProcess
</UL>

<P><STRONG><a name="[126]"></a>CalibrationTablePutinProcess</STRONG> (Thumb, 680 bytes, Stack size 16 bytes, calibrationtable.o(i.CalibrationTablePutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = CalibrationTablePutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableAccordKeyIndexConvCoordinateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[127]"></a>CalibrationTableReadParameter</STRONG> (Thumb, 454 bytes, Stack size 40 bytes, calibrationtable.o(i.CalibrationTableReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = CalibrationTableReadParameter &rArr; numtochar &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_value_get
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_num_get
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_code_get
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableSegments
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableFieldIndex
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[121]"></a>CalibrationTableSegmentCursorProcess</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, calibrationtable.o(i.CalibrationTableSegmentCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = CalibrationTableSegmentCursorProcess &rArr; Show_CalibrationTableSegmentsFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableSegmentsFieldContent
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableMoveIndexProcess
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableMoveCursorProcess
</UL>

<P><STRONG><a name="[12a]"></a>CalibrationTableShortcutCycleTask</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, calibrationtable.o(i.CalibrationTableShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = CalibrationTableShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[12b]"></a>CalibrationTableStatusProcess</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, calibrationtable.o(i.CalibrationTableStatusProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CalibrationTableStatusProcess &rArr; GetCalibrationTableSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableSegments
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[122]"></a>CalibrationTableTableCursorProcess</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, calibrationtable.o(i.CalibrationTableTableCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = CalibrationTableTableCursorProcess &rArr; Show_CalibrationTableOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableOneFieldContent
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableAccordKeyIndexConvCoordinateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableMoveIndexProcess
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableMoveCursorProcess
</UL>

<P><STRONG><a name="[11b]"></a>CalibrationTableUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, calibrationtable.o(i.CalibrationTableUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CalibrationTableUpdateStatus &rArr; CalibrationTableIndexUpdate &rArr; GetCalibrationTableSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableIndexUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableKeyProcess
</UL>

<P><STRONG><a name="[11e]"></a>CalibrationTableWriteParameter</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, calibrationtable.o(i.CalibrationTableWriteParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = CalibrationTableWriteParameter &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_value_set
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_num_set
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_code_set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableSegments
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableFieldIndex
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableLeavePageCheckCycle
</UL>

<P><STRONG><a name="[1a3]"></a>ConfigCalibrationTableOnwFieldRectangleFrameCoordinate</STRONG> (Thumb, 444 bytes, Stack size 20 bytes, calibrationtable.o(i.ConfigCalibrationTableOnwFieldRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigCalibrationTableOnwFieldRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationTableOnwRowRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1a2]"></a>ConfigCalibrationTableOnwRowRectangleFrameCoordinate</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, calibrationtable.o(i.ConfigCalibrationTableOnwRowRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ConfigCalibrationTableOnwRowRectangleFrameCoordinate &rArr; ConfigCalibrationTableOnwFieldRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationTableOnwFieldRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationTableRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1a5]"></a>ConfigCalibrationTableOtherFieldRectangleFrameCoordinate</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, calibrationtable.o(i.ConfigCalibrationTableOtherFieldRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ConfigCalibrationTableOtherFieldRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationTableRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1a4]"></a>ConfigCalibrationTableRectangleFrameCoordinate</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, calibrationtable.o(i.ConfigCalibrationTableRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ConfigCalibrationTableRectangleFrameCoordinate &rArr; ConfigCalibrationTableOnwRowRectangleFrameCoordinate &rArr; ConfigCalibrationTableOnwFieldRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableSegments
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationTableOtherFieldRectangleFrameCoordinate
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationTableOnwRowRectangleFrameCoordinate
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTable
</UL>

<P><STRONG><a name="[2d7]"></a>GUI_CalibrationTable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, calibrationtable.o(i.GUI_CalibrationTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_CalibrationTable &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableSegmentsField
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableRectangleFrame
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableField
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationTableRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[2db]"></a>GUI_CalibrationTableDrawOneRowSegmentRectangleFrame</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, calibrationtable.o(i.GUI_CalibrationTableDrawOneRowSegmentRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_CalibrationTableDrawOneRowSegmentRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableRectangleFrame
</UL>

<P><STRONG><a name="[2dc]"></a>GUI_CalibrationTableDrawOneRowTitleRectangleFrame</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, calibrationtable.o(i.GUI_CalibrationTableDrawOneRowTitleRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_CalibrationTableDrawOneRowTitleRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableRectangleFrame
</UL>

<P><STRONG><a name="[2da]"></a>GUI_CalibrationTableField</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, calibrationtable.o(i.GUI_CalibrationTableField))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_CalibrationTableField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTable
</UL>

<P><STRONG><a name="[2d8]"></a>GUI_CalibrationTableRectangleFrame</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, calibrationtable.o(i.GUI_CalibrationTableRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_CalibrationTableRectangleFrame &rArr; GUI_CalibrationTableDrawOneRowTitleRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableSegments
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableDrawOneRowTitleRectangleFrame
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableDrawOneRowSegmentRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTable
</UL>

<P><STRONG><a name="[2d9]"></a>GUI_CalibrationTableSegmentsField</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, calibrationtable.o(i.GUI_CalibrationTableSegmentsField))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = GUI_CalibrationTableSegmentsField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTable
</UL>

<P><STRONG><a name="[116]"></a>GetCalibrationTableFieldIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, calibrationtable.o(i.GetCalibrationTableFieldIndex))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableWriteParameter
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableReadParameter
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableIndexUpdate
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableCheckDataCycle
</UL>

<P><STRONG><a name="[114]"></a>GetCalibrationTableSegments</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, calibrationtable.o(i.GetCalibrationTableSegments))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetCalibrationTableSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableOneLevelMenuContent
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationTableRectangleFrame
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationTableRectangleFrameCoordinate
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableWriteParameter
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableStatusProcess
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableReadParameter
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableMoveIndexProcess
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableIndexUpdate
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableCheckDataCycle
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableAccordKeyIndexConvCoordinateIndex
</UL>

<P><STRONG><a name="[12c]"></a>Show_CalibrationTableOneFieldContent</STRONG> (Thumb, 514 bytes, Stack size 48 bytes, calibrationtable.o(i.Show_CalibrationTableOneFieldContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_CalibrationTableOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableOneRowOneLevelMenuContent
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableTableCursorProcess
</UL>

<P><STRONG><a name="[61a]"></a>Show_CalibrationTableOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, calibrationtable.o(i.Show_CalibrationTableOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = Show_CalibrationTableOneLevelMenuContent &rArr; Show_CalibrationTableOneRowOneLevelMenuContent &rArr; Show_CalibrationTableOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableOneRowOneLevelMenuContent
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationTableSegments
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_CalibrationTable
</UL>

<P><STRONG><a name="[61b]"></a>Show_CalibrationTableOneRowOneLevelMenuContent</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, calibrationtable.o(i.Show_CalibrationTableOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = Show_CalibrationTableOneRowOneLevelMenuContent &rArr; Show_CalibrationTableOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableOneFieldContent
</UL>
<BR>[Called By]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableOneLevelMenuContent
</UL>

<P><STRONG><a name="[129]"></a>Show_CalibrationTableSegmentsFieldContent</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, calibrationtable.o(i.Show_CalibrationTableSegmentsFieldContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_CalibrationTableSegmentsFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_CalibrationTable
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationTableSegmentCursorProcess
</UL>

<P><STRONG><a name="[444]"></a>Traverse_CalibrationTable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, calibrationtable.o(i.Traverse_CalibrationTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = Traverse_CalibrationTable &rArr; Show_CalibrationTableOneLevelMenuContent &rArr; Show_CalibrationTableOneRowOneLevelMenuContent &rArr; Show_CalibrationTableOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableSegmentsFieldContent
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationTableOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationTablePage
</UL>

<P><STRONG><a name="[3a7]"></a>ConfigTimeDateParameterRectangleFrameCoordinate</STRONG> (Thumb, 282 bytes, Stack size 20 bytes, timedate.o(i.ConfigTimeDateParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigTimeDateParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDate
</UL>

<P><STRONG><a name="[3a6]"></a>GUI_TimeDate</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, timedate.o(i.GUI_TimeDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_TimeDate &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateRectangleFrame
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateOneLevelMenu
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateCutOffRuleOneLevelMenu
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTimeDateParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
</UL>

<P><STRONG><a name="[3aa]"></a>GUI_TimeDateCutOffRuleOneLevelMenu</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, timedate.o(i.GUI_TimeDateCutOffRuleOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = GUI_TimeDateCutOffRuleOneLevelMenu &rArr; GUI_TimeDateCutOffRuleSingleOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeDateIndex
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateCutOffRuleSingleOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDate
</UL>

<P><STRONG><a name="[3ac]"></a>GUI_TimeDateCutOffRuleSingleOneLevelMenu</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, timedate.o(i.GUI_TimeDateCutOffRuleSingleOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_TimeDateCutOffRuleSingleOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateCutOffRuleOneLevelMenu
</UL>

<P><STRONG><a name="[3ad]"></a>GUI_TimeDateDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, timedate.o(i.GUI_TimeDateDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_TimeDateDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateRectangleFrame
</UL>

<P><STRONG><a name="[3ae]"></a>GUI_TimeDateDrawOneRowOneLevelMenu</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, timedate.o(i.GUI_TimeDateDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_TimeDateDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateOneLevelMenu
</UL>

<P><STRONG><a name="[3a9]"></a>GUI_TimeDateOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, timedate.o(i.GUI_TimeDateOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_TimeDateOneLevelMenu &rArr; GUI_TimeDateDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDate
</UL>

<P><STRONG><a name="[3a8]"></a>GUI_TimeDateRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, timedate.o(i.GUI_TimeDateRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_TimeDateRectangleFrame &rArr; GUI_TimeDateDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDate
</UL>

<P><STRONG><a name="[3ab]"></a>GetTimeDateIndex</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, timedate.o(i.GetTimeDateIndex))
<BR><BR>[Called By]<UL><LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateWriteParameter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateReadParameter
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateCheckDataCycle
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TimeDateCutOffRuleOneLevelMenu
</UL>

<P><STRONG><a name="[654]"></a>Show_TimeDateDataOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, timedate.o(i.Show_TimeDateDataOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_TimeDateDataOneLevelMenuContent &rArr; Show_TimeDateDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TimeDateDataOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TimeDate
</UL>

<P><STRONG><a name="[655]"></a>Show_TimeDateDataOneRowOneLevelMenuContent</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, timedate.o(i.Show_TimeDateDataOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_TimeDateDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateMoveCursorProcess
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TimeDateDataOneLevelMenuContent
</UL>

<P><STRONG><a name="[6a4]"></a>TimeDateCheckDataCycle</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, timedate.o(i.TimeDateCheckDataCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TimeDateCheckDataCycle &rArr; GetAMonthDays &rArr; GetTwoMonthDays
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAMonthDays
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeDateIndex
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateLeavePageCheckCycle
</UL>

<P><STRONG><a name="[6a7]"></a>TimeDateIndexUpdate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, timedate.o(i.TimeDateIndexUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateUpdateStatus
</UL>

<P><STRONG><a name="[4f6]"></a>TimeDateInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, timedate.o(i.TimeDateInit))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
</UL>

<P><STRONG><a name="[4fe]"></a>TimeDateKeyProcess</STRONG> (Thumb, 344 bytes, Stack size 24 bytes, timedate.o(i.TimeDateKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = TimeDateKeyProcess &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinFloatDataAddr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateUpdateStatus
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
</UL>

<P><STRONG><a name="[4ff]"></a>TimeDateLeavePageCheckCycle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, timedate.o(i.TimeDateLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = TimeDateLeavePageCheckCycle &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateWriteParameter
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateCheckDataCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
</UL>

<P><STRONG><a name="[4fc]"></a>TimeDateMoveCursorProcess</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, timedate.o(i.TimeDateMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = TimeDateMoveCursorProcess &rArr; Show_TimeDateDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TimeDateDataOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
</UL>

<P><STRONG><a name="[4fb]"></a>TimeDateMoveIndexProcess</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timedate.o(i.TimeDateMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TimeDateMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
</UL>

<P><STRONG><a name="[4f7]"></a>TimeDateParameterConfig</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, timedate.o(i.TimeDateParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
</UL>

<P><STRONG><a name="[4fa]"></a>TimeDatePutinProcess</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, timedate.o(i.TimeDatePutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = TimeDatePutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
</UL>

<P><STRONG><a name="[4f8]"></a>TimeDateReadParameter</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, timedate.o(i.TimeDateReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TimeDateReadParameter &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeDateIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
</UL>

<P><STRONG><a name="[4fd]"></a>TimeDateShortcutCycleTask</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, timedate.o(i.TimeDateShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = TimeDateShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
</UL>

<P><STRONG><a name="[6a5]"></a>TimeDateUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, timedate.o(i.TimeDateUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TimeDateUpdateStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateIndexUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateKeyProcess
</UL>

<P><STRONG><a name="[6a6]"></a>TimeDateWriteParameter</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, timedate.o(i.TimeDateWriteParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TimeDateWriteParameter &rArr; time_set &rArr; pcf8563_time_set &rArr; pcf8563_set &rArr; i2c_wait_ack &rArr; i2c_slave &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_set
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeDateIndex
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateLeavePageCheckCycle
</UL>

<P><STRONG><a name="[4f9]"></a>Traverse_TimeDate</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, timedate.o(i.Traverse_TimeDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_TimeDate &rArr; Show_TimeDateDataOneLevelMenuContent &rArr; Show_TimeDateDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TimeDateDataOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTimeDatePage
</UL>

<P><STRONG><a name="[341]"></a>ConfigOnlineParameterRectangleFrameCoordinate</STRONG> (Thumb, 284 bytes, Stack size 20 bytes, onlineparameter.o(i.ConfigOnlineParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigOnlineParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameter
</UL>

<P><STRONG><a name="[340]"></a>GUI_OnlineParameter</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, onlineparameter.o(i.GUI_OnlineParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_OnlineParameter &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterRectangleFrame
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterOneLevelMenu
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterCutOffRuleOneLevelMenu
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigOnlineParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
</UL>

<P><STRONG><a name="[344]"></a>GUI_OnlineParameterCutOffRuleOneLevelMenu</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, onlineparameter.o(i.GUI_OnlineParameterCutOffRuleOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = GUI_OnlineParameterCutOffRuleOneLevelMenu &rArr; GUI_OnlineParameterCutOffRuleSingleOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterCutOffRuleSingleOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameter
</UL>

<P><STRONG><a name="[345]"></a>GUI_OnlineParameterCutOffRuleSingleOneLevelMenu</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, onlineparameter.o(i.GUI_OnlineParameterCutOffRuleSingleOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_OnlineParameterCutOffRuleSingleOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterCutOffRuleOneLevelMenu
</UL>

<P><STRONG><a name="[346]"></a>GUI_OnlineParameterDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, onlineparameter.o(i.GUI_OnlineParameterDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_OnlineParameterDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterRectangleFrame
</UL>

<P><STRONG><a name="[347]"></a>GUI_OnlineParameterDrawOneRowOneLevelMenu</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, onlineparameter.o(i.GUI_OnlineParameterDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_OnlineParameterDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterOneLevelMenu
</UL>

<P><STRONG><a name="[343]"></a>GUI_OnlineParameterOneLevelMenu</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, onlineparameter.o(i.GUI_OnlineParameterOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_OnlineParameterOneLevelMenu &rArr; GUI_OnlineParameterDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOnlineParameterIndex
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameter
</UL>

<P><STRONG><a name="[342]"></a>GUI_OnlineParameterRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, onlineparameter.o(i.GUI_OnlineParameterRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_OnlineParameterRectangleFrame &rArr; GUI_OnlineParameterDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameter
</UL>

<P><STRONG><a name="[348]"></a>GetOnlineParameterIndex</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, onlineparameter.o(i.GetOnlineParameterIndex))
<BR><BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnlineParameterOneLevelMenu
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterWriteParameter
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterReadParameter
</UL>

<P><STRONG><a name="[570]"></a>OnlineParameterCheckDataCycle</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, onlineparameter.o(i.OnlineParameterCheckDataCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OnlineParameterCheckDataCycle &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterLeavePageCheckCycle
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
</UL>

<P><STRONG><a name="[575]"></a>OnlineParameterIndexUpdate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, onlineparameter.o(i.OnlineParameterIndexUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterUpdateStatus
</UL>

<P><STRONG><a name="[46c]"></a>OnlineParameterInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, onlineparameter.o(i.OnlineParameterInit))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
</UL>

<P><STRONG><a name="[474]"></a>OnlineParameterKeyProcess</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, onlineparameter.o(i.OnlineParameterKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = OnlineParameterKeyProcess &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinFloatDataAddr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterCheckDataCycle
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterUpdateStatus
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
</UL>

<P><STRONG><a name="[475]"></a>OnlineParameterLeavePageCheckCycle</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, onlineparameter.o(i.OnlineParameterLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = OnlineParameterLeavePageCheckCycle &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSelectPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopWindowsSelectResult
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterCheckDataCycle
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSoftwareReset
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterWriteParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
</UL>

<P><STRONG><a name="[472]"></a>OnlineParameterMoveCursorProcess</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, onlineparameter.o(i.OnlineParameterMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = OnlineParameterMoveCursorProcess &rArr; Show_OnlineParameterDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_OnlineParameterDataOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
</UL>

<P><STRONG><a name="[471]"></a>OnlineParameterMoveIndexProcess</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, onlineparameter.o(i.OnlineParameterMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OnlineParameterMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
</UL>

<P><STRONG><a name="[46d]"></a>OnlineParameterParameterConfig</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, onlineparameter.o(i.OnlineParameterParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
</UL>

<P><STRONG><a name="[470]"></a>OnlineParameterPutinProcess</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, onlineparameter.o(i.OnlineParameterPutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = OnlineParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
</UL>

<P><STRONG><a name="[46e]"></a>OnlineParameterReadParameter</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, onlineparameter.o(i.OnlineParameterReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OnlineParameterReadParameter &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOnlineParameterIndex
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devc_ip_get
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
</UL>

<P><STRONG><a name="[473]"></a>OnlineParameterShortcutCycleTask</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, onlineparameter.o(i.OnlineParameterShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = OnlineParameterShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
</UL>

<P><STRONG><a name="[571]"></a>OnlineParameterUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, onlineparameter.o(i.OnlineParameterUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OnlineParameterUpdateStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterIndexUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterKeyProcess
</UL>

<P><STRONG><a name="[572]"></a>OnlineParameterWriteParameter</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, onlineparameter.o(i.OnlineParameterWriteParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = OnlineParameterWriteParameter &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOnlineParameterIndex
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devc_ip_set
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterLeavePageCheckCycle
</UL>

<P><STRONG><a name="[63d]"></a>Show_OnlineParameterDataOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, onlineparameter.o(i.Show_OnlineParameterDataOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_OnlineParameterDataOneLevelMenuContent &rArr; Show_OnlineParameterDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_OnlineParameterDataOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_OnlineParameter
</UL>

<P><STRONG><a name="[573]"></a>Show_OnlineParameterDataOneRowOneLevelMenuContent</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, onlineparameter.o(i.Show_OnlineParameterDataOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_OnlineParameterDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_OnlineParameterDataOneLevelMenuContent
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineParameterMoveCursorProcess
</UL>

<P><STRONG><a name="[46f]"></a>Traverse_OnlineParameter</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, onlineparameter.o(i.Traverse_OnlineParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_OnlineParameter &rArr; Show_OnlineParameterDataOneLevelMenuContent &rArr; Show_OnlineParameterDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_OnlineParameterDataOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOnlineParameterPage
</UL>

<P><STRONG><a name="[363]"></a>ConfigSoftActiveParameterRectangleFrameCoordinate</STRONG> (Thumb, 278 bytes, Stack size 20 bytes, softactive.o(i.ConfigSoftActiveParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigSoftActiveParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActive
</UL>

<P><STRONG><a name="[362]"></a>GUI_SoftActive</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, softactive.o(i.GUI_SoftActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_SoftActive &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveTimeCue
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveRectangleFrame
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveProductSerialCue
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveOneLevelMenu
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigSoftActiveParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
</UL>

<P><STRONG><a name="[368]"></a>GUI_SoftActiveDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, softactive.o(i.GUI_SoftActiveDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_SoftActiveDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveRectangleFrame
</UL>

<P><STRONG><a name="[369]"></a>GUI_SoftActiveDrawOneRowOneLevelMenu</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, softactive.o(i.GUI_SoftActiveDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_SoftActiveDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveOneLevelMenu
</UL>

<P><STRONG><a name="[365]"></a>GUI_SoftActiveOneLevelMenu</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, softactive.o(i.GUI_SoftActiveOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_SoftActiveOneLevelMenu &rArr; GUI_SoftActiveDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActive
</UL>

<P><STRONG><a name="[366]"></a>GUI_SoftActiveProductSerialCue</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, softactive.o(i.GUI_SoftActiveProductSerialCue))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_SoftActiveProductSerialCue &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSoftActiveIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActive
</UL>

<P><STRONG><a name="[364]"></a>GUI_SoftActiveRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, softactive.o(i.GUI_SoftActiveRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_SoftActiveRectangleFrame &rArr; GUI_SoftActiveDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActive
</UL>

<P><STRONG><a name="[367]"></a>GUI_SoftActiveTimeCue</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, softactive.o(i.GUI_SoftActiveTimeCue))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = GUI_SoftActiveTimeCue &rArr; GUI_ShowActiveDate &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowSystemDate
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowActiveDate
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSoftActiveIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActive
</UL>

<P><STRONG><a name="[36a]"></a>GetSoftActiveIndex</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, softactive.o(i.GetSoftActiveIndex))
<BR><BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SoftActive
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveReadParameter
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveTimeCue
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SoftActiveProductSerialCue
</UL>

<P><STRONG><a name="[641]"></a>Show_SoftActiveOneRowOneLevelMenuContent</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, softactive.o(i.Show_SoftActiveOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_SoftActiveOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SoftActive
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveMoveCursorProcess
</UL>

<P><STRONG><a name="[659]"></a>SoftActiveActiveProcess</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, softactive.o(i.SoftActiveActiveProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1508<LI>Call Chain = SoftActiveActiveProcess &rArr; active_product &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;active_product
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
</UL>

<P><STRONG><a name="[492]"></a>SoftActiveInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, softactive.o(i.SoftActiveInit))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
</UL>

<P><STRONG><a name="[49a]"></a>SoftActiveKeyProcess</STRONG> (Thumb, 364 bytes, Stack size 24 bytes, softactive.o(i.SoftActiveKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1532<LI>Call Chain = SoftActiveKeyProcess &rArr; SoftActiveActiveProcess &rArr; active_product &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinFloatDataAddr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveUpdateStatus
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveActiveProcess
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSoftActiveIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
</UL>

<P><STRONG><a name="[49b]"></a>SoftActiveLeavePageCheckCycle</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, softactive.o(i.SoftActiveLeavePageCheckCycle))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
</UL>

<P><STRONG><a name="[499]"></a>SoftActiveMoveCursorProcess</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, softactive.o(i.SoftActiveMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = SoftActiveMoveCursorProcess &rArr; Show_SoftActiveOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SoftActiveOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
</UL>

<P><STRONG><a name="[497]"></a>SoftActiveMoveIndexProcess</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, softactive.o(i.SoftActiveMoveIndexProcess))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
</UL>

<P><STRONG><a name="[493]"></a>SoftActiveParameterConfig</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, softactive.o(i.SoftActiveParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
</UL>

<P><STRONG><a name="[496]"></a>SoftActivePutinProcess</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, softactive.o(i.SoftActivePutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = SoftActivePutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
</UL>

<P><STRONG><a name="[494]"></a>SoftActiveReadParameter</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, softactive.o(i.SoftActiveReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444<LI>Call Chain = SoftActiveReadParameter &rArr; dvc_product_id_set &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2str_32
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_product_id_set
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvc_product_id_get
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDeviceID
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStrNotIncludeNumBit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSoftActiveIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
</UL>

<P><STRONG><a name="[498]"></a>SoftActiveShortcutCycleTask</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, softactive.o(i.SoftActiveShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = SoftActiveShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
</UL>

<P><STRONG><a name="[65b]"></a>SoftActiveUpdateStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, softactive.o(i.SoftActiveUpdateStatus))
<BR><BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftActiveKeyProcess
</UL>

<P><STRONG><a name="[495]"></a>Traverse_SoftActive</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, softactive.o(i.Traverse_SoftActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Traverse_SoftActive &rArr; Show_SoftActiveOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SoftActiveOneRowOneLevelMenuContent
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSoftActiveIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSoftActivePage
</UL>

<P><STRONG><a name="[37a]"></a>ConfigSystemPasswordParameterRectangleFrameCoordinate</STRONG> (Thumb, 286 bytes, Stack size 20 bytes, systempassword.o(i.ConfigSystemPasswordParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigSystemPasswordParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPassword
</UL>

<P><STRONG><a name="[379]"></a>GUI_SystemPassword</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, systempassword.o(i.GUI_SystemPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_SystemPassword &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPasswordRectangleFrame
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPasswordOneLevelMenu
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigSystemPasswordParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
</UL>

<P><STRONG><a name="[37d]"></a>GUI_SystemPasswordDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, systempassword.o(i.GUI_SystemPasswordDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_SystemPasswordDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPasswordRectangleFrame
</UL>

<P><STRONG><a name="[37e]"></a>GUI_SystemPasswordDrawOneRowOneLevelMenu</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, systempassword.o(i.GUI_SystemPasswordDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_SystemPasswordDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPasswordOneLevelMenu
</UL>

<P><STRONG><a name="[37c]"></a>GUI_SystemPasswordOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systempassword.o(i.GUI_SystemPasswordOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_SystemPasswordOneLevelMenu &rArr; GUI_SystemPasswordDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPasswordDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPassword
</UL>

<P><STRONG><a name="[37b]"></a>GUI_SystemPasswordRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systempassword.o(i.GUI_SystemPasswordRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_SystemPasswordRectangleFrame &rArr; GUI_SystemPasswordDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPasswordDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemPassword
</UL>

<P><STRONG><a name="[671]"></a>GetSystemPasswordIndex</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, systempassword.o(i.GetSystemPasswordIndex))
<BR><BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordWriteParameter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordReadParameter
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordCheckDataCycle
</UL>

<P><STRONG><a name="[646]"></a>Show_SystemPasswordOneRowOneLevelMenuContent</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, systempassword.o(i.Show_SystemPasswordOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_SystemPasswordOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SystemPassword
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordMoveCursorProcess
</UL>

<P><STRONG><a name="[670]"></a>SystemPasswordCheckDataCycle</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, systempassword.o(i.SystemPasswordCheckDataCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemPasswordCheckDataCycle &rArr; SetPopWindowsInfomation
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestUserPassword
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestManagerPassword
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemPasswordIndex
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
</UL>

<P><STRONG><a name="[674]"></a>SystemPasswordIndexUpdate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, systempassword.o(i.SystemPasswordIndexUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordUpdateStatus
</UL>

<P><STRONG><a name="[4ac]"></a>SystemPasswordInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, systempassword.o(i.SystemPasswordInit))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
</UL>

<P><STRONG><a name="[4b4]"></a>SystemPasswordKeyProcess</STRONG> (Thumb, 356 bytes, Stack size 24 bytes, systempassword.o(i.SystemPasswordKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = SystemPasswordKeyProcess &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinFloatDataAddr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordUpdateStatus
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordCheckDataCycle
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
</UL>

<P><STRONG><a name="[4b5]"></a>SystemPasswordLeavePageCheckCycle</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systempassword.o(i.SystemPasswordLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = SystemPasswordLeavePageCheckCycle &rArr; SystemPasswordWriteParameter &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordWriteParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
</UL>

<P><STRONG><a name="[4b2]"></a>SystemPasswordMoveCursorProcess</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, systempassword.o(i.SystemPasswordMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = SystemPasswordMoveCursorProcess &rArr; Show_SystemPasswordOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemPasswordOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
</UL>

<P><STRONG><a name="[4b1]"></a>SystemPasswordMoveIndexProcess</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, systempassword.o(i.SystemPasswordMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SystemPasswordMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
</UL>

<P><STRONG><a name="[4ad]"></a>SystemPasswordParameterConfig</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, systempassword.o(i.SystemPasswordParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
</UL>

<P><STRONG><a name="[4b0]"></a>SystemPasswordPutinProcess</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, systempassword.o(i.SystemPasswordPutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = SystemPasswordPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
</UL>

<P><STRONG><a name="[4ae]"></a>SystemPasswordReadParameter</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, systempassword.o(i.SystemPasswordReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemPasswordReadParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemPasswordIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
</UL>

<P><STRONG><a name="[4b3]"></a>SystemPasswordShortcutCycleTask</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, systempassword.o(i.SystemPasswordShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = SystemPasswordShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
</UL>

<P><STRONG><a name="[672]"></a>SystemPasswordUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, systempassword.o(i.SystemPasswordUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemPasswordUpdateStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordIndexUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordKeyProcess
</UL>

<P><STRONG><a name="[673]"></a>SystemPasswordWriteParameter</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, systempassword.o(i.SystemPasswordWriteParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = SystemPasswordWriteParameter &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemPasswordIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPasswordLeavePageCheckCycle
</UL>

<P><STRONG><a name="[4af]"></a>Traverse_SystemPassword</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systempassword.o(i.Traverse_SystemPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Traverse_SystemPassword &rArr; Show_SystemPasswordOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemPasswordOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemPasswordPage
</UL>

<P><STRONG><a name="[ec]"></a>CalibrationParameterAccordKeyIndexConvCoordinateIndex</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, calibrationparameter.o(i.CalibrationParameterAccordKeyIndexConvCoordinateIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CalibrationParameterAccordKeyIndexConvCoordinateIndex &rArr; GetCalibrationParameterSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterableCursorProcess
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterPutinProcess
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterMoveIndexProcess
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
</UL>

<P><STRONG><a name="[ee]"></a>CalibrationParameterCheckDataCycle</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, calibrationparameter.o(i.CalibrationParameterCheckDataCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CalibrationParameterCheckDataCycle &rArr; GetCalibrationParameterSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterFieldIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterLeavePageCheckCycle
</UL>

<P><STRONG><a name="[f1]"></a>CalibrationParameterCheckSegmentPoint</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, calibrationparameter.o(i.CalibrationParameterCheckSegmentPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CalibrationParameterCheckSegmentPoint &rArr; SetPopWindowsInfomation
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
</UL>

<P><STRONG><a name="[441]"></a>CalibrationParameterConfig</STRONG> (Thumb, 360 bytes, Stack size 0 bytes, calibrationparameter.o(i.CalibrationParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[f2]"></a>CalibrationParameterIndexUpdate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, calibrationparameter.o(i.CalibrationParameterIndexUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CalibrationParameterIndexUpdate &rArr; GetCalibrationParameterSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterUpdateStatus
</UL>

<P><STRONG><a name="[f3]"></a>CalibrationParameterInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, calibrationparameter.o(i.CalibrationParameterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CalibrationParameterInit
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelSelectChannel
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWY_SmplUnit
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFH_SmplUnit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBX_SmplUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[f8]"></a>CalibrationParameterKeyProcess</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, calibrationparameter.o(i.CalibrationParameterKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = CalibrationParameterKeyProcess &rArr; CheckPointForceAutoFill &rArr; numtochar &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelSelectNextPage
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPointForceAutoFill
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterUpdateStatus
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterCheckSegmentPoint
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterAccordKeyIndexConvCoordinateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[ff]"></a>CalibrationParameterLeavePageCheckCycle</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, calibrationparameter.o(i.CalibrationParameterLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = CalibrationParameterLeavePageCheckCycle &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterWriteParameter
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterCheckDataCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[102]"></a>CalibrationParameterMoveCursorProcess</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, calibrationparameter.o(i.CalibrationParameterMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = CalibrationParameterMoveCursorProcess &rArr; CalibrationParameterableCursorProcess &rArr; Show_CalibrationParameterOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterableCursorProcess
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterSegmentCursorProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[105]"></a>CalibrationParameterMoveIndexProcess</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, calibrationparameter.o(i.CalibrationParameterMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = CalibrationParameterMoveIndexProcess &rArr; CalibrationParameterableCursorProcess &rArr; Show_CalibrationParameterOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterableCursorProcess
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterSegmentCursorProcess
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterAccordKeyIndexConvCoordinateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[106]"></a>CalibrationParameterPutinProcess</STRONG> (Thumb, 680 bytes, Stack size 16 bytes, calibrationparameter.o(i.CalibrationParameterPutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = CalibrationParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterAccordKeyIndexConvCoordinateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[10a]"></a>CalibrationParameterReadParameter</STRONG> (Thumb, 400 bytes, Stack size 32 bytes, calibrationparameter.o(i.CalibrationParameterReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = CalibrationParameterReadParameter &rArr; numtochar &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_value_get
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_num_get
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterFieldIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[103]"></a>CalibrationParameterSegmentCursorProcess</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, calibrationparameter.o(i.CalibrationParameterSegmentCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = CalibrationParameterSegmentCursorProcess &rArr; Show_CalibrationParameterSegmentsFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterSegmentsFieldContent
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterMoveIndexProcess
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterMoveCursorProcess
</UL>

<P><STRONG><a name="[10e]"></a>CalibrationParameterShortcutCycleTask</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, calibrationparameter.o(i.CalibrationParameterShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = CalibrationParameterShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[111]"></a>CalibrationParameterStatusProcess</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, calibrationparameter.o(i.CalibrationParameterStatusProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CalibrationParameterStatusProcess &rArr; GetCalibrationParameterSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[fd]"></a>CalibrationParameterUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, calibrationparameter.o(i.CalibrationParameterUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CalibrationParameterUpdateStatus &rArr; CalibrationParameterIndexUpdate &rArr; GetCalibrationParameterSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterIndexUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
</UL>

<P><STRONG><a name="[101]"></a>CalibrationParameterWriteParameter</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, calibrationparameter.o(i.CalibrationParameterWriteParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CalibrationParameterWriteParameter &rArr; GetCalibrationParameterSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterFieldIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterLeavePageCheckCycle
</UL>

<P><STRONG><a name="[104]"></a>CalibrationParameterableCursorProcess</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, calibrationparameter.o(i.CalibrationParameterableCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = CalibrationParameterableCursorProcess &rArr; Show_CalibrationParameterOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterOneFieldContent
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterAccordKeyIndexConvCoordinateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterMoveIndexProcess
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterMoveCursorProcess
</UL>

<P><STRONG><a name="[fc]"></a>CheckPointForceAutoFill</STRONG> (Thumb, 1188 bytes, Stack size 248 bytes, calibrationparameter.o(i.CheckPointForceAutoFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = CheckPointForceAutoFill &rArr; numtochar &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_full_p_get
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterFieldIndex
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
</UL>

<P><STRONG><a name="[19f]"></a>ConfigCalibrationParameterOnwFieldRectangleFrameCoordinate</STRONG> (Thumb, 408 bytes, Stack size 20 bytes, calibrationparameter.o(i.ConfigCalibrationParameterOnwFieldRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigCalibrationParameterOnwFieldRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationParameterOnwRowRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[19e]"></a>ConfigCalibrationParameterOnwRowRectangleFrameCoordinate</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, calibrationparameter.o(i.ConfigCalibrationParameterOnwRowRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ConfigCalibrationParameterOnwRowRectangleFrameCoordinate &rArr; ConfigCalibrationParameterOnwFieldRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationParameterOnwFieldRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationParameterRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1a1]"></a>ConfigCalibrationParameterOtherFieldRectangleFrameCoordinate</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, calibrationparameter.o(i.ConfigCalibrationParameterOtherFieldRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ConfigCalibrationParameterOtherFieldRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationParameterRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1a0]"></a>ConfigCalibrationParameterRectangleFrameCoordinate</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, calibrationparameter.o(i.ConfigCalibrationParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ConfigCalibrationParameterRectangleFrameCoordinate &rArr; ConfigCalibrationParameterOnwRowRectangleFrameCoordinate &rArr; ConfigCalibrationParameterOnwFieldRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationParameterOtherFieldRectangleFrameCoordinate
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationParameterOnwRowRectangleFrameCoordinate
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameter
</UL>

<P><STRONG><a name="[2d0]"></a>GUI_CalibrationParameter</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, calibrationparameter.o(i.GUI_CalibrationParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_CalibrationParameter &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterSegmentsField
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterRectangleFrame
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterField
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[2d4]"></a>GUI_CalibrationParameterDrawOneRowSegmentRectangleFrame</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, calibrationparameter.o(i.GUI_CalibrationParameterDrawOneRowSegmentRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_CalibrationParameterDrawOneRowSegmentRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterRectangleFrame
</UL>

<P><STRONG><a name="[2d6]"></a>GUI_CalibrationParameterDrawOneRowTitleRectangleFrame</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, calibrationparameter.o(i.GUI_CalibrationParameterDrawOneRowTitleRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_CalibrationParameterDrawOneRowTitleRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterRectangleFrame
</UL>

<P><STRONG><a name="[2d2]"></a>GUI_CalibrationParameterField</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, calibrationparameter.o(i.GUI_CalibrationParameterField))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_CalibrationParameterField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameter
</UL>

<P><STRONG><a name="[2d1]"></a>GUI_CalibrationParameterRectangleFrame</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, calibrationparameter.o(i.GUI_CalibrationParameterRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_CalibrationParameterRectangleFrame &rArr; GUI_CalibrationParameterDrawOneRowTitleRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterDrawOneRowTitleRectangleFrame
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterDrawOneRowSegmentRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameter
</UL>

<P><STRONG><a name="[2d3]"></a>GUI_CalibrationParameterSegmentsField</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, calibrationparameter.o(i.GUI_CalibrationParameterSegmentsField))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = GUI_CalibrationParameterSegmentsField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameter
</UL>

<P><STRONG><a name="[ef]"></a>GetCalibrationParameterFieldIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, calibrationparameter.o(i.GetCalibrationParameterFieldIndex))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPointForceAutoFill
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterWriteParameter
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterReadParameter
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterCheckDataCycle
</UL>

<P><STRONG><a name="[ed]"></a>GetCalibrationParameterSegments</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, calibrationparameter.o(i.GetCalibrationParameterSegments))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetCalibrationParameterSegments &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterOneLevelMenuContent
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalibrationParameterRectangleFrame
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigCalibrationParameterRectangleFrameCoordinate
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterWriteParameter
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterStatusProcess
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterReadParameter
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterMoveIndexProcess
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterKeyProcess
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterIndexUpdate
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterCheckDataCycle
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterAccordKeyIndexConvCoordinateIndex
</UL>

<P><STRONG><a name="[112]"></a>Show_CalibrationParameterOneFieldContent</STRONG> (Thumb, 512 bytes, Stack size 48 bytes, calibrationparameter.o(i.Show_CalibrationParameterOneFieldContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_CalibrationParameterOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterOneRowOneLevelMenuContent
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterableCursorProcess
</UL>

<P><STRONG><a name="[618]"></a>Show_CalibrationParameterOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, calibrationparameter.o(i.Show_CalibrationParameterOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = Show_CalibrationParameterOneLevelMenuContent &rArr; Show_CalibrationParameterOneRowOneLevelMenuContent &rArr; Show_CalibrationParameterOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterOneRowOneLevelMenuContent
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationParameterSegments
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_CalibrationParameter
</UL>

<P><STRONG><a name="[619]"></a>Show_CalibrationParameterOneRowOneLevelMenuContent</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, calibrationparameter.o(i.Show_CalibrationParameterOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = Show_CalibrationParameterOneRowOneLevelMenuContent &rArr; Show_CalibrationParameterOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterOneFieldContent
</UL>
<BR>[Called By]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterOneLevelMenuContent
</UL>

<P><STRONG><a name="[10d]"></a>Show_CalibrationParameterSegmentsFieldContent</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, calibrationparameter.o(i.Show_CalibrationParameterSegmentsFieldContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_CalibrationParameterSegmentsFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_CalibrationParameter
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationParameterSegmentCursorProcess
</UL>

<P><STRONG><a name="[442]"></a>Traverse_CalibrationParameter</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, calibrationparameter.o(i.Traverse_CalibrationParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = Traverse_CalibrationParameter &rArr; Show_CalibrationParameterOneLevelMenuContent &rArr; Show_CalibrationParameterOneRowOneLevelMenuContent &rArr; Show_CalibrationParameterOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterSegmentsFieldContent
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_CalibrationParameterOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibrationParameterPage
</UL>

<P><STRONG><a name="[159]"></a>ClearTestResultArea</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, forcecalibration.o(i.ClearTestResultArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ClearTestResultArea &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadForceCalibrationArea
</UL>

<P><STRONG><a name="[1ab]"></a>ConfigForceCalibrationIndicateWindowsOneRectangleFrameCoordinate</STRONG> (Thumb, 648 bytes, Stack size 20 bytes, forcecalibration.o(i.ConfigForceCalibrationIndicateWindowsOneRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigForceCalibrationIndicateWindowsOneRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationIndicateWindowsRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1aa]"></a>ConfigForceCalibrationIndicateWindowsRectangleFrameCoordinate</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, forcecalibration.o(i.ConfigForceCalibrationIndicateWindowsRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ConfigForceCalibrationIndicateWindowsRectangleFrameCoordinate &rArr; ConfigForceCalibrationIndicateWindowsOneRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationIndicateWindowsOneRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibration
</UL>

<P><STRONG><a name="[1ad]"></a>ConfigForceCalibrationOneFieldRectangleFrameCoordinate</STRONG> (Thumb, 448 bytes, Stack size 20 bytes, forcecalibration.o(i.ConfigForceCalibrationOneFieldRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigForceCalibrationOneFieldRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationOnwRowRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1ac]"></a>ConfigForceCalibrationOnwRowRectangleFrameCoordinate</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, forcecalibration.o(i.ConfigForceCalibrationOnwRowRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ConfigForceCalibrationOnwRowRectangleFrameCoordinate &rArr; ConfigForceCalibrationOneFieldRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationOneFieldRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1ae]"></a>ConfigForceCalibrationRectangleFrameCoordinate</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, forcecalibration.o(i.ConfigForceCalibrationRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ConfigForceCalibrationRectangleFrameCoordinate &rArr; ConfigForceCalibrationOnwRowRectangleFrameCoordinate &rArr; ConfigForceCalibrationOneFieldRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationOnwRowRectangleFrameCoordinate
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawCalibrationTable
</UL>

<P><STRONG><a name="[1b0]"></a>ConfigForceCalibrationStatusBarOneRectangleFrameCoordinate</STRONG> (Thumb, 354 bytes, Stack size 16 bytes, forcecalibration.o(i.ConfigForceCalibrationStatusBarOneRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ConfigForceCalibrationStatusBarOneRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationStatusBarRectangleFrameCoordinate
</UL>

<P><STRONG><a name="[1af]"></a>ConfigForceCalibrationStatusBarRectangleFrameCoordinate</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, forcecalibration.o(i.ConfigForceCalibrationStatusBarRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ConfigForceCalibrationStatusBarRectangleFrameCoordinate &rArr; ConfigForceCalibrationStatusBarOneRectangleFrameCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationStatusBarOneRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibration
</UL>

<P><STRONG><a name="[284]"></a>ForceCalibationConfig</STRONG> (Thumb, 1100 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibationConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ForceCalibationConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPageName
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadForceCalibrationArea
</UL>

<P><STRONG><a name="[286]"></a>ForceCalibationInit</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibationInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ForceCalibationInit &rArr; disp_syn
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelSelectChannel
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_syn
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitInterfaceElement
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWY_SmplUnit
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFH_SmplUnit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBX_SmplUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadForceCalibrationArea
</UL>

<P><STRONG><a name="[289]"></a>ForceCalibrationAllowRunCalibration</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationAllowRunCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ForceCalibrationAllowRunCalibration &rArr; CheckCurrentModel &rArr; GetModelType
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkStatus
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCurrentModel
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteCoreCycle
</UL>

<P><STRONG><a name="[28b]"></a>ForceCalibrationCancelPointProcess</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationCancelPointProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = ForceCalibrationCancelPointProcess &rArr; ReloadForceCalibrationArea &rArr; Traverse_ForceCalibration &rArr; Show_ForceCalibrationTestResultTable &rArr; Show_ForceCalibrationOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationTestResultTable
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadForceCalibrationArea
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCurrentPointReachToPageTail
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibrationPageNum
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompletePieceSerialInCurrentPageSerial
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationClearForce
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationClearDeviation
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationClearCode
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointCoreCycle
</UL>

<P><STRONG><a name="[294]"></a>ForceCalibrationChangeCalibrationTable</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationChangeCalibrationTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = ForceCalibrationChangeCalibrationTable &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSelectPopWindowsInfomation
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopWindowsSelectResult
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLssuedParameter
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTableProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyF3Process
</UL>

<P><STRONG><a name="[295]"></a>ForceCalibrationChangeCalibrationTableProcess</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, forcecalibration.o(i.ForceCalibrationChangeCalibrationTableProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = ForceCalibrationChangeCalibrationTableProcess &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_value_set
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_num_set
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_code_set
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCheckCalibrationDateIsAvail
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTable
</UL>

<P><STRONG><a name="[296]"></a>ForceCalibrationCheckCalibrationDateIsAvail</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationCheckCalibrationDateIsAvail))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ForceCalibrationCheckCalibrationDateIsAvail
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTableProcess
</UL>

<P><STRONG><a name="[297]"></a>ForceCalibrationCheckWarn</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationCheckWarn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ForceCalibrationCheckWarn &rArr; CheckPrmWarning
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPrmWarning
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCtrlCoreCycle
</UL>

<P><STRONG><a name="[28f]"></a>ForceCalibrationClearCode</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, forcecalibration.o(i.ForceCalibrationClearCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ForceCalibrationClearCode
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationFieldIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCancelPointProcess
</UL>

<P><STRONG><a name="[290]"></a>ForceCalibrationClearDeviation</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, forcecalibration.o(i.ForceCalibrationClearDeviation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ForceCalibrationClearDeviation
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationFieldIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCancelPointProcess
</UL>

<P><STRONG><a name="[28d]"></a>ForceCalibrationClearForce</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, forcecalibration.o(i.ForceCalibrationClearForce))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ForceCalibrationClearForce
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationFieldIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCancelPointProcess
</UL>

<P><STRONG><a name="[299]"></a>ForceCalibrationCtrlCoreCycle</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationCtrlCoreCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1684<LI>Call Chain = ForceCalibrationCtrlCoreCycle &rArr; CheckOfflineCycle &rArr; RelinkPRM &rArr; link_cycle &rArr; LinkCmdSendBody &rArr; cmd_write_prm &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCM_CmdSendCycle
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOfflineCycle
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshForceCalibrationDynamicContent
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteCoreCycle
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCheckWarn
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
</UL>

<P><STRONG><a name="[29a]"></a>ForceCalibrationExecuteCoreCycle</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, forcecalibration.o(i.ForceCalibrationExecuteCoreCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 820<LI>Call Chain = ForceCalibrationExecuteCoreCycle &rArr; ForceCalibrationTakePointCoreCycle &rArr; ForceCalibrationTakePointProcess &rArr; ReloadForceCalibrationArea &rArr; Traverse_ForceCalibration &rArr; Show_ForceCalibrationTestResultTable &rArr; Show_ForceCalibrationOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_entry_get
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCalibrationStatus
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationStatus
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointCoreCycle
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteStartBody
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteEndBody
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationAllowRunCalibration
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCtrlCoreCycle
</UL>

<P><STRONG><a name="[2a0]"></a>ForceCalibrationExecuteEndBody</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationExecuteEndBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ForceCalibrationExecuteEndBody
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCalibrationStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteCoreCycle
</UL>

<P><STRONG><a name="[29f]"></a>ForceCalibrationExecuteStartBody</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationExecuteStartBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = ForceCalibrationExecuteStartBody &rArr; ReloadForceCalibrationArea &rArr; Traverse_ForceCalibration &rArr; Show_ForceCalibrationTestResultTable &rArr; Show_ForceCalibrationOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCalibrationStatus
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadForceCalibrationArea
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteCoreCycle
</UL>

<P><STRONG><a name="[2a3]"></a>ForceCalibrationKeyF2Process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationKeyF2Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476<LI>Call Chain = ForceCalibrationKeyF2Process &rArr; ForceCalibrationPrintCalibrationResult &rArr; PrintForceCalibrationResultTable &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationStatus
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationPrintCalibrationResult
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
</UL>

<P><STRONG><a name="[2a5]"></a>ForceCalibrationKeyF3Process</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationKeyF3Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = ForceCalibrationKeyF3Process &rArr; ForceCalibrationChangeCalibrationTable &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationStatus
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationChangeCalibrationTable
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
</UL>

<P><STRONG><a name="[2a6]"></a>ForceCalibrationKeyF4Process</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationKeyF4Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ForceCalibrationKeyF4Process
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
</UL>

<P><STRONG><a name="[2a7]"></a>ForceCalibrationKeyProcess</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748<LI>Call Chain = ForceCalibrationKeyProcess &rArr; ForceCalibrationKeyF3Process &rArr; ForceCalibrationChangeCalibrationTable &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChannelTareCmd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationStatus
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTurningPageRight
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTurningPageLeft
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyF4Process
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyF3Process
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyF2Process
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
</UL>

<P><STRONG><a name="[2ab]"></a>ForceCalibrationLeavePageCheckCycle</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ForceCalibrationLeavePageCheckCycle
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCalibrationStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
</UL>

<P><STRONG><a name="[2a4]"></a>ForceCalibrationPrintCalibrationResult</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationPrintCalibrationResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 1468<LI>Call Chain = ForceCalibrationPrintCalibrationResult &rArr; PrintForceCalibrationResultTable &rArr; PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPrintingShortcutMenu
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyF2Process
</UL>

<P><STRONG><a name="[2ad]"></a>ForceCalibrationReadParameter</STRONG> (Thumb, 1550 bytes, Stack size 48 bytes, forcecalibration.o(i.ForceCalibrationReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = ForceCalibrationReadParameter &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationFieldIndex
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadForceCalibrationArea
</UL>

<P><STRONG><a name="[2af]"></a>ForceCalibrationShortcutCycleTask</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = ForceCalibrationShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
</UL>

<P><STRONG><a name="[2a2]"></a>ForceCalibrationTakePointCoreCycle</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationTakePointCoreCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 804<LI>Call Chain = ForceCalibrationTakePointCoreCycle &rArr; ForceCalibrationTakePointProcess &rArr; ReloadForceCalibrationArea &rArr; Traverse_ForceCalibration &rArr; Show_ForceCalibrationTestResultTable &rArr; Show_ForceCalibrationOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCancelPointProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteCoreCycle
</UL>

<P><STRONG><a name="[2b0]"></a>ForceCalibrationTakePointProcess</STRONG> (Thumb, 390 bytes, Stack size 32 bytes, forcecalibration.o(i.ForceCalibrationTakePointProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = ForceCalibrationTakePointProcess &rArr; ReloadForceCalibrationArea &rArr; Traverse_ForceCalibration &rArr; Show_ForceCalibrationTestResultTable &rArr; Show_ForceCalibrationOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_smpl_value
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationTestResultTable
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadForceCalibrationArea
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCurrentPointReachToPageTail
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompletePieceSerialInCurrentPageSerial
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteForce
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDisPlacement
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeviation
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeform
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteCode
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSammpleCode
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationGetDeviation
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointCoreCycle
</UL>

<P><STRONG><a name="[2a8]"></a>ForceCalibrationTurningPageLeft</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationTurningPageLeft))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = ForceCalibrationTurningPageLeft &rArr; ReloadForceCalibrationArea &rArr; Traverse_ForceCalibration &rArr; Show_ForceCalibrationTestResultTable &rArr; Show_ForceCalibrationOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadForceCalibrationArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
</UL>

<P><STRONG><a name="[2a9]"></a>ForceCalibrationTurningPageRight</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, forcecalibration.o(i.ForceCalibrationTurningPageRight))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = ForceCalibrationTurningPageRight &rArr; ReloadForceCalibrationArea &rArr; Traverse_ForceCalibration &rArr; Show_ForceCalibrationTestResultTable &rArr; Show_ForceCalibrationOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadForceCalibrationArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
</UL>

<P><STRONG><a name="[2b5]"></a>ForceCalibrationWriteCode</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, forcecalibration.o(i.ForceCalibrationWriteCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ForceCalibrationWriteCode &rArr; numtochar &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationFieldIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
</UL>

<P><STRONG><a name="[2b3]"></a>ForceCalibrationWriteDeform</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, forcecalibration.o(i.ForceCalibrationWriteDeform))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = ForceCalibrationWriteDeform &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationFieldIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
</UL>

<P><STRONG><a name="[2b7]"></a>ForceCalibrationWriteDeviation</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, forcecalibration.o(i.ForceCalibrationWriteDeviation))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = ForceCalibrationWriteDeviation &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationFieldIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
</UL>

<P><STRONG><a name="[2b2]"></a>ForceCalibrationWriteDisPlacement</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, forcecalibration.o(i.ForceCalibrationWriteDisPlacement))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = ForceCalibrationWriteDisPlacement &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationFieldIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
</UL>

<P><STRONG><a name="[2b1]"></a>ForceCalibrationWriteForce</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, forcecalibration.o(i.ForceCalibrationWriteForce))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = ForceCalibrationWriteForce &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationFieldIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
</UL>

<P><STRONG><a name="[307]"></a>GUI_ForceCalibration</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, forcecalibration.o(i.GUI_ForceCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = GUI_ForceCalibration &rArr; GUI_ForceCalibrationIndicateWindowField &rArr; GUI_ForceCalibrationIndicateWindowOneField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationStatusBarField
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationShowFrame
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationIndicateWindowField
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawStatusBarRectangleFrame
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawIndicateWindowsRectangleFrame
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawCalibrationTable
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationStatusBarRectangleFrameCoordinate
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationIndicateWindowsRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
</UL>

<P><STRONG><a name="[30a]"></a>GUI_ForceCalibrationDrawCalibrationTable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, forcecalibration.o(i.GUI_ForceCalibrationDrawCalibrationTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = GUI_ForceCalibrationDrawCalibrationTable &rArr; GUI_ForceCalibrationField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationRectangleFrame
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationField
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigForceCalibrationRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadForceCalibrationArea
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibration
</UL>

<P><STRONG><a name="[308]"></a>GUI_ForceCalibrationDrawIndicateWindowsRectangleFrame</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, forcecalibration.o(i.GUI_ForceCalibrationDrawIndicateWindowsRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ForceCalibrationDrawIndicateWindowsRectangleFrame &rArr; GUI_ForceCalibrationDrawOneIndicateWindowsRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawOneIndicateWindowsRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibration
</UL>

<P><STRONG><a name="[310]"></a>GUI_ForceCalibrationDrawOneIndicateWindowsRectangleFrame</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, forcecalibration.o(i.GUI_ForceCalibrationDrawOneIndicateWindowsRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_ForceCalibrationDrawOneIndicateWindowsRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawIndicateWindowsRectangleFrame
</UL>

<P><STRONG><a name="[311]"></a>GUI_ForceCalibrationDrawOneRowTitleRectangleFrame</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, forcecalibration.o(i.GUI_ForceCalibrationDrawOneRowTitleRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_ForceCalibrationDrawOneRowTitleRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationRectangleFrame
</UL>

<P><STRONG><a name="[30c]"></a>GUI_ForceCalibrationDrawStatusBarRectangleFrame</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, forcecalibration.o(i.GUI_ForceCalibrationDrawStatusBarRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_ForceCalibrationDrawStatusBarRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibration
</UL>

<P><STRONG><a name="[30f]"></a>GUI_ForceCalibrationField</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, forcecalibration.o(i.GUI_ForceCalibrationField))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_ForceCalibrationField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawCalibrationTable
</UL>

<P><STRONG><a name="[309]"></a>GUI_ForceCalibrationIndicateWindowField</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, forcecalibration.o(i.GUI_ForceCalibrationIndicateWindowField))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = GUI_ForceCalibrationIndicateWindowField &rArr; GUI_ForceCalibrationIndicateWindowOneField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationIndicateWindowOneField
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibration
</UL>

<P><STRONG><a name="[312]"></a>GUI_ForceCalibrationIndicateWindowOneField</STRONG> (Thumb, 580 bytes, Stack size 48 bytes, forcecalibration.o(i.GUI_ForceCalibrationIndicateWindowOneField))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = GUI_ForceCalibrationIndicateWindowOneField &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationIndicateWindowField
</UL>

<P><STRONG><a name="[30e]"></a>GUI_ForceCalibrationRectangleFrame</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, forcecalibration.o(i.GUI_ForceCalibrationRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ForceCalibrationRectangleFrame &rArr; GUI_ForceCalibrationDrawOneRowTitleRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawOneRowTitleRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawCalibrationTable
</UL>

<P><STRONG><a name="[30b]"></a>GUI_ForceCalibrationShowFrame</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, forcecalibration.o(i.GUI_ForceCalibrationShowFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GUI_ForceCalibrationShowFrame &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibration
</UL>

<P><STRONG><a name="[30d]"></a>GUI_ForceCalibrationStatusBarField</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, forcecalibration.o(i.GUI_ForceCalibrationStatusBarField))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = GUI_ForceCalibrationStatusBarField &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibration
</UL>

<P><STRONG><a name="[29e]"></a>GetCalibrationStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, forcecalibration.o(i.GetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentCalibrationStatus
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationShortcutCycleTask
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyProcess
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyF4Process
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyF3Process
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationKeyF2Process
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteCoreCycle
</UL>

<P><STRONG><a name="[28c]"></a>GetCompletePieceSerialInCurrentPageSerial</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, forcecalibration.o(i.GetCompletePieceSerialInCurrentPageSerial))
<BR><BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ForceCalibration
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCurrentPointReachToPageTail
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCancelPointProcess
</UL>

<P><STRONG><a name="[298]"></a>GetForceCalibationFieldIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, forcecalibration.o(i.GetForceCalibationFieldIndex))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationTestResultTable
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteForce
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDisPlacement
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeviation
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteDeform
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationWriteCode
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationReadParameter
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationClearForce
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationClearDeviation
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationClearCode
</UL>

<P><STRONG><a name="[5bc]"></a>GetForceCalibationIndicateWindowsFieldIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, forcecalibration.o(i.GetForceCalibationIndicateWindowsFieldIndex))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshForceCalibrationDynamicContent
</UL>

<P><STRONG><a name="[5be]"></a>GetForceCalibationStatusBarFieldIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, forcecalibration.o(i.GetForceCalibationStatusBarFieldIndex))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshForceCalibrationDynamicContent
</UL>

<P><STRONG><a name="[291]"></a>GetForceCalibrationPageNum</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, forcecalibration.o(i.GetForceCalibrationPageNum))
<BR><BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ForceCalibration
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCancelPointProcess
</UL>

<P><STRONG><a name="[292]"></a>IsCurrentPointReachToPageTail</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, forcecalibration.o(i.IsCurrentPointReachToPageTail))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IsCurrentPointReachToPageTail
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompletePieceSerialInCurrentPageSerial
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCancelPointProcess
</UL>

<P><STRONG><a name="[29c]"></a>RefreshForceCalibrationDynamicContent</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, forcecalibration.o(i.RefreshForceCalibrationDynamicContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = RefreshForceCalibrationDynamicContent &rArr; Show_ForceCalibrationOneStatusBarContent &rArr; RefreshDynamicSystemTime &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneStatusBarContent
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneIndicateWindowsContent
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationStatusBarFieldIndex
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationIndicateWindowsFieldIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCtrlCoreCycle
</UL>

<P><STRONG><a name="[293]"></a>ReloadForceCalibrationArea</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, forcecalibration.o(i.ReloadForceCalibrationArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = ReloadForceCalibrationArea &rArr; Traverse_ForceCalibration &rArr; Show_ForceCalibrationTestResultTable &rArr; Show_ForceCalibrationOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ForceCalibration
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ForceCalibrationDrawCalibrationTable
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationReadParameter
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibationInit
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibationConfig
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTestResultArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTurningPageRight
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTurningPageLeft
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteStartBody
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCancelPointProcess
</UL>

<P><STRONG><a name="[2a1]"></a>SetCalibrationStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, forcecalibration.o(i.SetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationLeavePageCheckCycle
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteStartBody
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteEndBody
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationExecuteCoreCycle
</UL>

<P><STRONG><a name="[5fb]"></a>SetDynamicContentCalibrationStatus</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, forcecalibration.o(i.SetDynamicContentCalibrationStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetDynamicContentCalibrationStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalibrationStatus
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInterfaceCalibrationStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetForceCalibrationDynamicContentTask
</UL>

<P><STRONG><a name="[29b]"></a>SetForceCalibrationDynamicContentTask</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, forcecalibration.o(i.SetForceCalibrationDynamicContentTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = SetForceCalibrationDynamicContentTask &rArr; SetDynamicContentNETStatus &rArr; GetEthLinkStatus &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentUSBStatus
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentNETStatus
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentLinkStatus
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentForce
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentFHSpeed
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentDispalcement
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentDeform
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentCode
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentCalibrationStatus
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentWYSpeed
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDynamicContentBXSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCtrlCoreCycle
</UL>

<P><STRONG><a name="[628]"></a>Show_ForceCalibrationOneFieldContent</STRONG> (Thumb, 458 bytes, Stack size 48 bytes, forcecalibration.o(i.Show_ForceCalibrationOneFieldContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_ForceCalibrationOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationTestResultTable
</UL>

<P><STRONG><a name="[5bd]"></a>Show_ForceCalibrationOneIndicateWindowsContent</STRONG> (Thumb, 398 bytes, Stack size 40 bytes, forcecalibration.o(i.Show_ForceCalibrationOneIndicateWindowsContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Show_ForceCalibrationOneIndicateWindowsContent &rArr; RefreshDynamicSpeed &rArr; disp_value &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSpeed
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicForce
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDisplacement
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicDeform
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementForce
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementFHSpeed
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementDisPlacement
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementDeform
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementWYSpeed
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementBXSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshForceCalibrationDynamicContent
</UL>

<P><STRONG><a name="[5bf]"></a>Show_ForceCalibrationOneStatusBarContent</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, forcecalibration.o(i.Show_ForceCalibrationOneStatusBarContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Show_ForceCalibrationOneStatusBarContent &rArr; RefreshDynamicSystemTime &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicUSBIco
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicSystemTime
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicEthernetIco
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicCommunicationStatus
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicCode
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceLinkStatus
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementUSBStatus
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementEthernetConnectStatus
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceElementCode
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDynamicCalibrationStatus
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterfaceCalibrationStatus
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshForceCalibrationDynamicContent
</UL>

<P><STRONG><a name="[28e]"></a>Show_ForceCalibrationTestResultTable</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, forcecalibration.o(i.Show_ForceCalibrationTestResultTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = Show_ForceCalibrationTestResultTable &rArr; Show_ForceCalibrationOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationOneFieldContent
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibationFieldIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ForceCalibration
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationTakePointProcess
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForceCalibrationCancelPointProcess
</UL>

<P><STRONG><a name="[451]"></a>Traverse_ForceCalibration</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, forcecalibration.o(i.Traverse_ForceCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = Traverse_ForceCalibration &rArr; Show_ForceCalibrationTestResultTable &rArr; Show_ForceCalibrationOneFieldContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ForceCalibrationTestResultTable
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetForceCalibrationPageNum
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompletePieceSerialInCurrentPageSerial
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadForceCalibationPage
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReloadForceCalibrationArea
</UL>

<P><STRONG><a name="[38c]"></a>ConfigTestAfterDisposeParameterRectangleFrameCoordinate</STRONG> (Thumb, 282 bytes, Stack size 20 bytes, testafterdispose.o(i.ConfigTestAfterDisposeParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigTestAfterDisposeParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDispose
</UL>

<P><STRONG><a name="[38b]"></a>GUI_TestAfterDispose</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testafterdispose.o(i.GUI_TestAfterDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_TestAfterDispose &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDisposeRectangleFrame
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDisposeOneLevelMenu
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDisposeCue
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTestAfterDisposeParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[38f]"></a>GUI_TestAfterDisposeCue</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, testafterdispose.o(i.GUI_TestAfterDisposeCue))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_TestAfterDisposeCue &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestAfterDisposeIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDispose
</UL>

<P><STRONG><a name="[391]"></a>GUI_TestAfterDisposeDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, testafterdispose.o(i.GUI_TestAfterDisposeDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_TestAfterDisposeDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDisposeRectangleFrame
</UL>

<P><STRONG><a name="[392]"></a>GUI_TestAfterDisposeDrawOneRowOneLevelMenu</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, testafterdispose.o(i.GUI_TestAfterDisposeDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_TestAfterDisposeDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDisposeOneLevelMenu
</UL>

<P><STRONG><a name="[38e]"></a>GUI_TestAfterDisposeOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testafterdispose.o(i.GUI_TestAfterDisposeOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_TestAfterDisposeOneLevelMenu &rArr; GUI_TestAfterDisposeDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDisposeDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDispose
</UL>

<P><STRONG><a name="[38d]"></a>GUI_TestAfterDisposeRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testafterdispose.o(i.GUI_TestAfterDisposeRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_TestAfterDisposeRectangleFrame &rArr; GUI_TestAfterDisposeDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDisposeDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDispose
</UL>

<P><STRONG><a name="[390]"></a>GetTestAfterDisposeIndex</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, testafterdispose.o(i.GetTestAfterDisposeIndex))
<BR><BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeWriteParameter
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeStatusProcess
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeReadParameter
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestAfterDisposeCue
</UL>

<P><STRONG><a name="[64a]"></a>Show_TestAfterDisposeOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testafterdispose.o(i.Show_TestAfterDisposeOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_TestAfterDisposeOneLevelMenuContent &rArr; Show_TestAfterDisposeOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestAfterDisposeOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_TestAfterDispose
</UL>

<P><STRONG><a name="[64b]"></a>Show_TestAfterDisposeOneRowOneLevelMenuContent</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, testafterdispose.o(i.Show_TestAfterDisposeOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_TestAfterDisposeOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeMoveCursorProcess
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestAfterDisposeOneLevelMenuContent
</UL>

<P><STRONG><a name="[685]"></a>TestAfterDisposeIndexUpdate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, testafterdispose.o(i.TestAfterDisposeIndexUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeUpdateStatus
</UL>

<P><STRONG><a name="[4c9]"></a>TestAfterDisposeInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, testafterdispose.o(i.TestAfterDisposeInit))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[4d2]"></a>TestAfterDisposeKeyProcess</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, testafterdispose.o(i.TestAfterDisposeKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = TestAfterDisposeKeyProcess &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinFloatDataAddr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeUpdateStatus
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[4d3]"></a>TestAfterDisposeLeavePageCheckCycle</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testafterdispose.o(i.TestAfterDisposeLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = TestAfterDisposeLeavePageCheckCycle &rArr; TestAfterDisposeWriteParameter &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeWriteParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[4d0]"></a>TestAfterDisposeMoveCursorProcess</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, testafterdispose.o(i.TestAfterDisposeMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = TestAfterDisposeMoveCursorProcess &rArr; Show_TestAfterDisposeOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestAfterDisposeOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[4ce]"></a>TestAfterDisposeMoveIndexProcess</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, testafterdispose.o(i.TestAfterDisposeMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TestAfterDisposeMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[4ca]"></a>TestAfterDisposeParameterConfig</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, testafterdispose.o(i.TestAfterDisposeParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[4cd]"></a>TestAfterDisposePutinProcess</STRONG> (Thumb, 322 bytes, Stack size 16 bytes, testafterdispose.o(i.TestAfterDisposePutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = TestAfterDisposePutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[4cb]"></a>TestAfterDisposeReadParameter</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, testafterdispose.o(i.TestAfterDisposeReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TestAfterDisposeReadParameter &rArr; numtochar &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestAfterDisposeIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[4d1]"></a>TestAfterDisposeShortcutCycleTask</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, testafterdispose.o(i.TestAfterDisposeShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = TestAfterDisposeShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[4cf]"></a>TestAfterDisposeStatusProcess</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, testafterdispose.o(i.TestAfterDisposeStatusProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TestAfterDisposeStatusProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestAfterDisposeIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[683]"></a>TestAfterDisposeUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, testafterdispose.o(i.TestAfterDisposeUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TestAfterDisposeUpdateStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeIndexUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeKeyProcess
</UL>

<P><STRONG><a name="[684]"></a>TestAfterDisposeWriteParameter</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, testafterdispose.o(i.TestAfterDisposeWriteParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = TestAfterDisposeWriteParameter &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestAfterDisposeIndex
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestAfterDisposeLeavePageCheckCycle
</UL>

<P><STRONG><a name="[4cc]"></a>Traverse_TestAfterDispose</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, testafterdispose.o(i.Traverse_TestAfterDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_TestAfterDispose &rArr; Show_TestAfterDisposeOneLevelMenuContent &rArr; Show_TestAfterDisposeOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_TestAfterDisposeOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestAfterDisposePage
</UL>

<P><STRONG><a name="[43f]"></a>AdvanceParameterConfig</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, advanceparameter.o(i.AdvanceParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAdvanceParameterPage
</UL>

<P><STRONG><a name="[43e]"></a>AdvanceParameterInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, advanceparameter.o(i.AdvanceParameterInit))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAdvanceParameterPage
</UL>

<P><STRONG><a name="[c3]"></a>AdvanceParameterKeyProcess</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, advanceparameter.o(i.AdvanceParameterKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AdvanceParameterKeyProcess &rArr; AdvanceParameterShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterShortcutCheckCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAdvanceParameterPage
</UL>

<P><STRONG><a name="[c7]"></a>AdvanceParameterLeavePageCheckCycle</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, advanceparameter.o(i.AdvanceParameterLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = AdvanceParameterLeavePageCheckCycle &rArr; LoadFirmwareUpdatePage &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPasswordType
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPasswordPutinTargetPage
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPasswordPutinSourcePage
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadFirmwareUpdatePage
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAdvanceParameterPage
</UL>

<P><STRONG><a name="[cd]"></a>AdvanceParameterMoveCursorProcess</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, advanceparameter.o(i.AdvanceParameterMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = AdvanceParameterMoveCursorProcess &rArr; GUI_AdvanceParameterDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdvanceParameterDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAdvanceParameterPage
</UL>

<P><STRONG><a name="[cf]"></a>AdvanceParameterMoveIndexProcess</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, advanceparameter.o(i.AdvanceParameterMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AdvanceParameterMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAdvanceParameterPage
</UL>

<P><STRONG><a name="[c6]"></a>AdvanceParameterShortcutCheckCycle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, advanceparameter.o(i.AdvanceParameterShortcutCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AdvanceParameterShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressNum
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterKeyProcess
</UL>

<P><STRONG><a name="[2cd]"></a>ConfigAdvanceParameterRectangleFrameCoordinate</STRONG> (Thumb, 310 bytes, Stack size 20 bytes, advanceparameter.o(i.ConfigAdvanceParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigAdvanceParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdvanceParameter
</UL>

<P><STRONG><a name="[2cb]"></a>GUI_AdvanceParameter</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, advanceparameter.o(i.GUI_AdvanceParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_AdvanceParameter &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdvanceParameterRectangleFrame
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigAdvanceParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAdvanceParameterPage
</UL>

<P><STRONG><a name="[ce]"></a>GUI_AdvanceParameterDrawOneRectangleFrame</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, advanceparameter.o(i.GUI_AdvanceParameterDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = GUI_AdvanceParameterDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr32At
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdvanceParameterRectangleFrame
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterMoveCursorProcess
</UL>

<P><STRONG><a name="[2ce]"></a>GUI_AdvanceParameterRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, advanceparameter.o(i.GUI_AdvanceParameterRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = GUI_AdvanceParameterRectangleFrame &rArr; GUI_AdvanceParameterDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdvanceParameterDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdvanceParameter
</UL>

<P><STRONG><a name="[cc]"></a>LoadFirmwareUpdatePage</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, advanceparameter.o(i.LoadFirmwareUpdatePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = LoadFirmwareUpdatePage &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSoftwareReset
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoUpdatePassword
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvanceParameterLeavePageCheckCycle
</UL>

<P><STRONG><a name="[450]"></a>SetAutoUpdatePassword</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, advanceparameter.o(i.SetAutoUpdatePassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 1292<LI>Call Chain = SetAutoUpdatePassword &rArr; bsp_InitRTC &rArr; RTC_Config &rArr; RCC_GetFlagStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitRTC
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DeInitRTC
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRTC_BKP_DR
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRTC_BKP_DR
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadFirmwareUpdatePage
</UL>

<P><STRONG><a name="[1b1]"></a>ConfigMachineParameterCheckDataCycle</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, modelselect.o(i.ConfigMachineParameterCheckDataCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ConfigMachineParameterCheckDataCycle &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigMachineParameterIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
</UL>

<P><STRONG><a name="[449]"></a>ConfigMachineParameterConfig</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, modelselect.o(i.ConfigMachineParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>

<P><STRONG><a name="[1c4]"></a>ConfigMachineParameterIncreaseIndex</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, modelselect.o(i.ConfigMachineParameterIncreaseIndex))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterUpdateStatus
</UL>

<P><STRONG><a name="[1b3]"></a>ConfigMachineParameterInit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, modelselect.o(i.ConfigMachineParameterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ConfigMachineParameterInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKeyCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>

<P><STRONG><a name="[1b5]"></a>ConfigMachineParameterKeyProcess</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, modelselect.o(i.ConfigMachineParameterKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ConfigMachineParameterKeyProcess &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinFloatDataAddr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterUpdateStatus
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterCheckDataCycle
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>

<P><STRONG><a name="[1bb]"></a>ConfigMachineParameterLeavePageCheckCycle</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, modelselect.o(i.ConfigMachineParameterLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ConfigMachineParameterLeavePageCheckCycle
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterWriteParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>

<P><STRONG><a name="[1bd]"></a>ConfigMachineParameterMoveCursorProcess</STRONG> (Thumb, 272 bytes, Stack size 8 bytes, modelselect.o(i.ConfigMachineParameterMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = ConfigMachineParameterMoveCursorProcess &rArr; Show_ConfigMachineParameterDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterOneRowOneLevelMenuUnit
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterDataOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>

<P><STRONG><a name="[1c0]"></a>ConfigMachineParameterMoveIndexProcess</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, modelselect.o(i.ConfigMachineParameterMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ConfigMachineParameterMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>

<P><STRONG><a name="[1c1]"></a>ConfigMachineParameterPutinProcess</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, modelselect.o(i.ConfigMachineParameterPutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = ConfigMachineParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>

<P><STRONG><a name="[1c2]"></a>ConfigMachineParameterReadParameter</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, modelselect.o(i.ConfigMachineParameterReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ConfigMachineParameterReadParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigMachineParameterIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>

<P><STRONG><a name="[2e1]"></a>ConfigMachineParameterRectangleFrameCoordinate</STRONG> (Thumb, 286 bytes, Stack size 20 bytes, modelselect.o(i.ConfigMachineParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigMachineParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameter
</UL>

<P><STRONG><a name="[1c3]"></a>ConfigMachineParameterShortcutCycleTask</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, modelselect.o(i.ConfigMachineParameterShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = ConfigMachineParameterShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>

<P><STRONG><a name="[1ba]"></a>ConfigMachineParameterUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, modelselect.o(i.ConfigMachineParameterUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ConfigMachineParameterUpdateStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterIncreaseIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
</UL>

<P><STRONG><a name="[1bc]"></a>ConfigMachineParameterWriteParameter</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, modelselect.o(i.ConfigMachineParameterWriteParameter))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterLeavePageCheckCycle
</UL>

<P><STRONG><a name="[33d]"></a>ConfigModelSelectRectangleFrameCoordinate</STRONG> (Thumb, 268 bytes, Stack size 20 bytes, modelselect.o(i.ConfigModelSelectRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigModelSelectRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ModelSelect
</UL>

<P><STRONG><a name="[204]"></a>DefaultParameterSet</STRONG> (Thumb, 1368 bytes, Stack size 32 bytes, modelselect.o(i.DefaultParameterSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = DefaultParameterSet &rArr; SetIPAddr &rArr; devc_ip_set
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_value_set
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_num_set
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_code_set
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_full_p_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_entry_set
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFH_SmplUnit
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spcl_valve_middle_set
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spcl_valve_init_set
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spcl_valve_back_set
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spcl_unload_delay_set
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spcl_slow_up_set
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spcl_slow_down_set
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spcl_quick_up_set
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spcl_quick_down_set
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_pid_segs_set
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_pid_node_set
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_pid_kp_set
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_pid_ki_set
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_pid_kd_set
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_overspeed_set
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_full_n_set
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_ctrl_crash_set
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_cof_spd_set
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_cof_break_set
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_cof_ahead_set
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl_min_one_set
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl_max_set
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl_max_one_set
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl_max_cnt_set
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIPAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDefaultParameter
</UL>

<P><STRONG><a name="[2e0]"></a>GUI_ConfigMachineParameter</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, modelselect.o(i.GUI_ConfigMachineParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_ConfigMachineParameter &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameterRectangleFrame
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameterOneLevelMenu
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>

<P><STRONG><a name="[2e4]"></a>GUI_ConfigMachineParameterDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, modelselect.o(i.GUI_ConfigMachineParameterDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_ConfigMachineParameterDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameterRectangleFrame
</UL>

<P><STRONG><a name="[2e5]"></a>GUI_ConfigMachineParameterDrawOneRowOneLevelMenu</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, modelselect.o(i.GUI_ConfigMachineParameterDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_ConfigMachineParameterDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameterOneLevelMenu
</UL>

<P><STRONG><a name="[2e3]"></a>GUI_ConfigMachineParameterOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, modelselect.o(i.GUI_ConfigMachineParameterOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_ConfigMachineParameterOneLevelMenu &rArr; GUI_ConfigMachineParameterDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameterDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameter
</UL>

<P><STRONG><a name="[2e2]"></a>GUI_ConfigMachineParameterRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, modelselect.o(i.GUI_ConfigMachineParameterRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ConfigMachineParameterRectangleFrame &rArr; GUI_ConfigMachineParameterDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameterDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameter
</UL>

<P><STRONG><a name="[33c]"></a>GUI_ModelSelect</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, modelselect.o(i.GUI_ModelSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_ModelSelect &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ModelSelectRectangleFrame
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigModelSelectRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
</UL>

<P><STRONG><a name="[33f]"></a>GUI_ModelSelectDrawOneRectangleFrame</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, modelselect.o(i.GUI_ModelSelectDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = GUI_ModelSelectDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr32At
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectMoveCursorProcess
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ModelSelectRectangleFrame
</UL>

<P><STRONG><a name="[33e]"></a>GUI_ModelSelectRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, modelselect.o(i.GUI_ModelSelectRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = GUI_ModelSelectRectangleFrame &rArr; GUI_ModelSelectDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ModelSelectDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ModelSelect
</UL>

<P><STRONG><a name="[1b2]"></a>GetConfigMachineParameterIndex</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, modelselect.o(i.GetConfigMachineParameterIndex))
<BR><BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDefaultParameter
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterReadParameter
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterCheckDataCycle
</UL>

<P><STRONG><a name="[56b]"></a>GetModelSelectIndex</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, modelselect.o(i.GetModelSelectIndex))
<BR><BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectReadParameter
</UL>

<P><STRONG><a name="[448]"></a>LoadConfigMachineParameterPage</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, modelselect.o(i.LoadConfigMachineParameterPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadConfigMachineParameterPage &rArr; ConfigMachineParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ConfigMachineParameter
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConfigMachineParameter
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterShortcutCycleTask
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterReadParameter
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterPutinProcess
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterMoveIndexProcess
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterMoveCursorProcess
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterLeavePageCheckCycle
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterKeyProcess
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterInit
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectPutinTons
</UL>

<P><STRONG><a name="[466]"></a>ModelSelectConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, modelselect.o(i.ModelSelectConfig))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
</UL>

<P><STRONG><a name="[465]"></a>ModelSelectInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, modelselect.o(i.ModelSelectInit))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
</UL>

<P><STRONG><a name="[46a]"></a>ModelSelectKeyProcess</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, modelselect.o(i.ModelSelectKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ModelSelectKeyProcess &rArr; ModelSelectShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectShortcutCheckCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
</UL>

<P><STRONG><a name="[46b]"></a>ModelSelectLeavePageCheckCycle</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, modelselect.o(i.ModelSelectLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1756<LI>Call Chain = ModelSelectLeavePageCheckCycle &rArr; ModelSelectPutinTons &rArr; LoadConfigMachineParameterPage &rArr; ConfigMachineParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSelectPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopWindowsSelectResult
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSoftwareReset
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDefaultParameter
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectWriteParameter
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectPutinTons
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
</UL>

<P><STRONG><a name="[469]"></a>ModelSelectMoveCursorProcess</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, modelselect.o(i.ModelSelectMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = ModelSelectMoveCursorProcess &rArr; GUI_ModelSelectDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ModelSelectDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
</UL>

<P><STRONG><a name="[468]"></a>ModelSelectMoveIndexProcess</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, modelselect.o(i.ModelSelectMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ModelSelectMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
</UL>

<P><STRONG><a name="[568]"></a>ModelSelectPutinTons</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, modelselect.o(i.ModelSelectPutinTons))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748<LI>Call Chain = ModelSelectPutinTons &rArr; LoadConfigMachineParameterPage &rArr; ConfigMachineParameterPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectLeavePageCheckCycle
</UL>

<P><STRONG><a name="[467]"></a>ModelSelectReadParameter</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, modelselect.o(i.ModelSelectReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ModelSelectReadParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devc_token_get
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModelSelectIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadModelSelectPage
</UL>

<P><STRONG><a name="[567]"></a>ModelSelectShortcutCheckCycle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, modelselect.o(i.ModelSelectShortcutCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ModelSelectShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressNum
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectKeyProcess
</UL>

<P><STRONG><a name="[569]"></a>ModelSelectWriteParameter</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, modelselect.o(i.ModelSelectWriteParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = ModelSelectWriteParameter &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devc_token_set
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectLeavePageCheckCycle
</UL>

<P><STRONG><a name="[56a]"></a>SaveDefaultParameter</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, modelselect.o(i.SaveDefaultParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = SaveDefaultParameter &rArr; prv_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_save
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devc_token_get
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigMachineParameterIndex
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelSelectLeavePageCheckCycle
</UL>

<P><STRONG><a name="[209]"></a>SetIPAddr</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, modelselect.o(i.SetIPAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SetIPAddr &rArr; devc_ip_set
</UL>
<BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devc_ip_set
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultParameterSet
</UL>

<P><STRONG><a name="[61c]"></a>Show_ConfigMachineParameterDataOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, modelselect.o(i.Show_ConfigMachineParameterDataOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_ConfigMachineParameterDataOneLevelMenuContent &rArr; Show_ConfigMachineParameterDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterDataOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ConfigMachineParameter
</UL>

<P><STRONG><a name="[1be]"></a>Show_ConfigMachineParameterDataOneRowOneLevelMenuContent</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, modelselect.o(i.Show_ConfigMachineParameterDataOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_ConfigMachineParameterDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterDataOneLevelMenuContent
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterMoveCursorProcess
</UL>

<P><STRONG><a name="[61d]"></a>Show_ConfigMachineParameterOneLevelMenuUnit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, modelselect.o(i.Show_ConfigMachineParameterOneLevelMenuUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_ConfigMachineParameterOneLevelMenuUnit &rArr; Show_ConfigMachineParameterOneRowOneLevelMenuUnit &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterOneRowOneLevelMenuUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_ConfigMachineParameter
</UL>

<P><STRONG><a name="[1bf]"></a>Show_ConfigMachineParameterOneRowOneLevelMenuUnit</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, modelselect.o(i.Show_ConfigMachineParameterOneRowOneLevelMenuUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = Show_ConfigMachineParameterOneRowOneLevelMenuUnit &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterOneLevelMenuUnit
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMachineParameterMoveCursorProcess
</UL>

<P><STRONG><a name="[44a]"></a>Traverse_ConfigMachineParameter</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, modelselect.o(i.Traverse_ConfigMachineParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_ConfigMachineParameter &rArr; Show_ConfigMachineParameterDataOneLevelMenuContent &rArr; Show_ConfigMachineParameterDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterOneLevelMenuUnit
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ConfigMachineParameterDataOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadConfigMachineParameterPage
</UL>

<P><STRONG><a name="[162]"></a>Clear_UnitSelectOneRowOneLevelMenuArrow</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, unitselect.o(i.Clear_UnitSelectOneRowOneLevelMenuArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Clear_UnitSelectOneRowOneLevelMenuArrow &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectRestoreShowOneMenu
</UL>

<P><STRONG><a name="[3b3]"></a>ConfigUnitSelectParameterRectangleFrameCoordinate</STRONG> (Thumb, 588 bytes, Stack size 20 bytes, unitselect.o(i.ConfigUnitSelectParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigUnitSelectParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelect
</UL>

<P><STRONG><a name="[3b2]"></a>GUI_UnitSelect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, unitselect.o(i.GUI_UnitSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_UnitSelect &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelectRectangleFrame
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelectOneLevelMenu
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigUnitSelectParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[3b6]"></a>GUI_UnitSelectDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, unitselect.o(i.GUI_UnitSelectDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_UnitSelectDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelectRectangleFrame
</UL>

<P><STRONG><a name="[3b7]"></a>GUI_UnitSelectDrawOneRowOneLevelMenu</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, unitselect.o(i.GUI_UnitSelectDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_UnitSelectDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelectOneLevelMenu
</UL>

<P><STRONG><a name="[3b5]"></a>GUI_UnitSelectOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, unitselect.o(i.GUI_UnitSelectOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_UnitSelectOneLevelMenu &rArr; GUI_UnitSelectDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelectDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelect
</UL>

<P><STRONG><a name="[3b4]"></a>GUI_UnitSelectRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, unitselect.o(i.GUI_UnitSelectRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_UnitSelectRectangleFrame &rArr; GUI_UnitSelectDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelectDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UnitSelect
</UL>

<P><STRONG><a name="[720]"></a>GetUnitSelectIndex</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, unitselect.o(i.GetUnitSelectIndex))
<BR><BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectWriteParameter
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectReadParameter
</UL>

<P><STRONG><a name="[656]"></a>Show_UnitSelectOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, unitselect.o(i.Show_UnitSelectOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_UnitSelectOneLevelMenuContent &rArr; Show_UnitSelectOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UnitSelectOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_UnitSelect
</UL>

<P><STRONG><a name="[658]"></a>Show_UnitSelectOneRowOneLevelMenuArrow</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, unitselect.o(i.Show_UnitSelectOneRowOneLevelMenuArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Show_UnitSelectOneRowOneLevelMenuArrow &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectShowOneMenuWithCursor
</UL>

<P><STRONG><a name="[657]"></a>Show_UnitSelectOneRowOneLevelMenuContent</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, unitselect.o(i.Show_UnitSelectOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_UnitSelectOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectShowOneMenuWithCursor
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectRestoreShowOneMenu
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectKeyProcess
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UnitSelectOneLevelMenuContent
</UL>

<P><STRONG><a name="[508]"></a>Traverse_UnitSelect</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, unitselect.o(i.Traverse_UnitSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_UnitSelect &rArr; Show_UnitSelectOneLevelMenuContent &rArr; Show_UnitSelectOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UnitSelectOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[507]"></a>UnitSelectIndexCrossTheBorderProcess</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, unitselect.o(i.UnitSelectIndexCrossTheBorderProcess))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[721]"></a>UnitSelectIndexUpdate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, unitselect.o(i.UnitSelectIndexUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectUpdateStatus
</UL>

<P><STRONG><a name="[504]"></a>UnitSelectInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, unitselect.o(i.UnitSelectInit))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[50d]"></a>UnitSelectKeyProcess</STRONG> (Thumb, 522 bytes, Stack size 16 bytes, unitselect.o(i.UnitSelectKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1716<LI>Call Chain = UnitSelectKeyProcess &rArr; LoadTwoLevelMenuPage &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTwoLevelMenuAddr
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectUpdateStatus
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UnitSelectOneRowOneLevelMenuContent
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[50e]"></a>UnitSelectLeavePageCheckCycle</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, unitselect.o(i.UnitSelectLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = UnitSelectLeavePageCheckCycle &rArr; UnitSelectWriteParameter &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectWriteParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[50b]"></a>UnitSelectMoveCursorProcess</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, unitselect.o(i.UnitSelectMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = UnitSelectMoveCursorProcess &rArr; UnitSelectShowOneMenuWithCursor &rArr; Show_UnitSelectOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectShowOneMenuWithCursor
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectRestoreShowOneMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[509]"></a>UnitSelectMoveIndexProcess</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, unitselect.o(i.UnitSelectMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UnitSelectMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[505]"></a>UnitSelectParameterConfig</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, unitselect.o(i.UnitSelectParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[506]"></a>UnitSelectReadParameter</STRONG> (Thumb, 336 bytes, Stack size 8 bytes, unitselect.o(i.UnitSelectReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UnitSelectReadParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitSelectIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[71e]"></a>UnitSelectRestoreShowOneMenu</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, unitselect.o(i.UnitSelectRestoreShowOneMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = UnitSelectRestoreShowOneMenu &rArr; Show_UnitSelectOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UnitSelectOneRowOneLevelMenuContent
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_UnitSelectOneRowOneLevelMenuArrow
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectMoveCursorProcess
</UL>

<P><STRONG><a name="[50c]"></a>UnitSelectShortcutCycleTask</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, unitselect.o(i.UnitSelectShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = UnitSelectShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[71f]"></a>UnitSelectShowOneMenuWithCursor</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, unitselect.o(i.UnitSelectShowOneMenuWithCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = UnitSelectShowOneMenuWithCursor &rArr; Show_UnitSelectOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UnitSelectOneRowOneLevelMenuContent
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UnitSelectOneRowOneLevelMenuArrow
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectMoveCursorProcess
</UL>

<P><STRONG><a name="[50a]"></a>UnitSelectStatusProcess</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, unitselect.o(i.UnitSelectStatusProcess))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUnitSelectPage
</UL>

<P><STRONG><a name="[71c]"></a>UnitSelectUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, unitselect.o(i.UnitSelectUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UnitSelectUpdateStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectIndexUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectKeyProcess
</UL>

<P><STRONG><a name="[71d]"></a>UnitSelectWriteParameter</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, unitselect.o(i.UnitSelectWriteParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = UnitSelectWriteParameter &rArr; pcm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitSelectIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitSelectLeavePageCheckCycle
</UL>

<P><STRONG><a name="[36c]"></a>ConfigSystemBackupParameterRectangleFrameCoordinate</STRONG> (Thumb, 278 bytes, Stack size 20 bytes, systembackup.o(i.ConfigSystemBackupParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigSystemBackupParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackup
</UL>

<P><STRONG><a name="[36b]"></a>GUI_SystemBackup</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systembackup.o(i.GUI_SystemBackup))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_SystemBackup &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackupTimeCue
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackupRectangleFrame
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackupOneLevelMenu
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigSystemBackupParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
</UL>

<P><STRONG><a name="[370]"></a>GUI_SystemBackupDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, systembackup.o(i.GUI_SystemBackupDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_SystemBackupDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackupRectangleFrame
</UL>

<P><STRONG><a name="[371]"></a>GUI_SystemBackupDrawOneRowOneLevelMenu</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, systembackup.o(i.GUI_SystemBackupDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_SystemBackupDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackupOneLevelMenu
</UL>

<P><STRONG><a name="[36e]"></a>GUI_SystemBackupOneLevelMenu</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, systembackup.o(i.GUI_SystemBackupOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_SystemBackupOneLevelMenu &rArr; GUI_SystemBackupDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackupDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackup
</UL>

<P><STRONG><a name="[36d]"></a>GUI_SystemBackupRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systembackup.o(i.GUI_SystemBackupRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_SystemBackupRectangleFrame &rArr; GUI_SystemBackupDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackupDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackup
</UL>

<P><STRONG><a name="[36f]"></a>GUI_SystemBackupTimeCue</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, systembackup.o(i.GUI_SystemBackupTimeCue))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = GUI_SystemBackupTimeCue &rArr; GUI_ShowSystemDate &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowSystemDate
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemBackupIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackup
</UL>

<P><STRONG><a name="[372]"></a>GetSystemBackupIndex</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, systembackup.o(i.GetSystemBackupIndex))
<BR><BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SystemBackup
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupReadParameter
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupCheckSystemPasswordProcess
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemBackupTimeCue
</UL>

<P><STRONG><a name="[642]"></a>Show_SystemBackupOneRowOneLevelMenuContent</STRONG> (Thumb, 254 bytes, Stack size 48 bytes, systembackup.o(i.Show_SystemBackupOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_SystemBackupOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFillSpecifyChar
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SystemBackup
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupMoveCursorProcess
</UL>

<P><STRONG><a name="[664]"></a>SystemBackupCheckSystemPasswordProcess</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, systembackup.o(i.SystemBackupCheckSystemPasswordProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemBackupCheckSystemPasswordProcess &rArr; TestUserPassword &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestUserPassword
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestManagerPassword
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemBackupIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
</UL>

<P><STRONG><a name="[49c]"></a>SystemBackupInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, systembackup.o(i.SystemBackupInit))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
</UL>

<P><STRONG><a name="[4a4]"></a>SystemBackupKeyProcess</STRONG> (Thumb, 518 bytes, Stack size 24 bytes, systembackup.o(i.SystemBackupKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412<LI>Call Chain = SystemBackupKeyProcess &rArr; SystemBackupUSBProcess &rArr; prv_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinFloatDataAddr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupUpdateStatus
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupUSBProcess
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupSDProcess
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupCheckSystemPasswordProcess
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
</UL>

<P><STRONG><a name="[4a5]"></a>SystemBackupLeavePageCheckCycle</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, systembackup.o(i.SystemBackupLeavePageCheckCycle))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
</UL>

<P><STRONG><a name="[4a2]"></a>SystemBackupMoveCursorProcess</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, systembackup.o(i.SystemBackupMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = SystemBackupMoveCursorProcess &rArr; Show_SystemBackupOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemBackupOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
</UL>

<P><STRONG><a name="[4a1]"></a>SystemBackupMoveIndexProcess</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, systembackup.o(i.SystemBackupMoveIndexProcess))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
</UL>

<P><STRONG><a name="[49d]"></a>SystemBackupParameterConfig</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, systembackup.o(i.SystemBackupParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
</UL>

<P><STRONG><a name="[4a0]"></a>SystemBackupPutinProcess</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, systembackup.o(i.SystemBackupPutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = SystemBackupPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
</UL>

<P><STRONG><a name="[49e]"></a>SystemBackupReadParameter</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systembackup.o(i.SystemBackupReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemBackupReadParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemBackupIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
</UL>

<P><STRONG><a name="[667]"></a>SystemBackupSDProcess</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, systembackup.o(i.SystemBackupSDProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = SystemBackupSDProcess &rArr; prv_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_save
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_backup
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_backup
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_backup
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
</UL>

<P><STRONG><a name="[4a3]"></a>SystemBackupShortcutCycleTask</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, systembackup.o(i.SystemBackupShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = SystemBackupShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
</UL>

<P><STRONG><a name="[666]"></a>SystemBackupUSBProcess</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, systembackup.o(i.SystemBackupUSBProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = SystemBackupUSBProcess &rArr; prv_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_save
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_USB_Status
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_backup
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_backup
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_backup
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
</UL>

<P><STRONG><a name="[665]"></a>SystemBackupUpdateStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systembackup.o(i.SystemBackupUpdateStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemBackupKeyProcess
</UL>

<P><STRONG><a name="[49f]"></a>Traverse_SystemBackup</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, systembackup.o(i.Traverse_SystemBackup))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_SystemBackup &rArr; Show_SystemBackupOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemBackupOneRowOneLevelMenuContent
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemBackupIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemBackupPage
</UL>

<P><STRONG><a name="[160]"></a>Clear_SystemRestoreOneRowOneLevelMenuArrow</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, systemrestore.o(i.Clear_SystemRestoreOneRowOneLevelMenuArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Clear_SystemRestoreOneRowOneLevelMenuArrow &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreMoveCursorProcess
</UL>

<P><STRONG><a name="[380]"></a>ConfigSystemRestoreRectangleFrameCoordinate</STRONG> (Thumb, 566 bytes, Stack size 12 bytes, systemrestore.o(i.ConfigSystemRestoreRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ConfigSystemRestoreRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestore
</UL>

<P><STRONG><a name="[37f]"></a>GUI_SystemRestore</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, systemrestore.o(i.GUI_SystemRestore))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_SystemRestore &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestoreTimeCue
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestoreRectangleFrame
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestoreOneLevelMenu
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigSystemRestoreRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[384]"></a>GUI_SystemRestoreDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, systemrestore.o(i.GUI_SystemRestoreDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_SystemRestoreDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestoreRectangleFrame
</UL>

<P><STRONG><a name="[385]"></a>GUI_SystemRestoreDrawOneRowOneLevelMenu</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, systemrestore.o(i.GUI_SystemRestoreDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_SystemRestoreDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestoreOneLevelMenu
</UL>

<P><STRONG><a name="[382]"></a>GUI_SystemRestoreOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systemrestore.o(i.GUI_SystemRestoreOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_SystemRestoreOneLevelMenu &rArr; GUI_SystemRestoreDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestoreDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestore
</UL>

<P><STRONG><a name="[381]"></a>GUI_SystemRestoreRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systemrestore.o(i.GUI_SystemRestoreRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_SystemRestoreRectangleFrame &rArr; GUI_SystemRestoreDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestoreDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestore
</UL>

<P><STRONG><a name="[383]"></a>GUI_SystemRestoreTimeCue</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, systemrestore.o(i.GUI_SystemRestoreTimeCue))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = GUI_SystemRestoreTimeCue &rArr; GUI_ShowSystemDate &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowSystemDate
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestore
</UL>

<P><STRONG><a name="[386]"></a>GetSystemRestoreIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, systemrestore.o(i.GetSystemRestoreIndex))
<BR><BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreStatusProcess
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreReadParameter
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreConfig
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreCheckSystemPasswordProcess
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreCheckManagerPasswordProcess
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneRowOneLevelMenuContent
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreUserName
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemRestoreTimeCue
</UL>

<P><STRONG><a name="[3ca]"></a>GetSystemRestoreUserName</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, systemrestore.o(i.GetSystemRestoreUserName))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetSystemRestoreUserName
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreStatusProcess
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreShortcutCycleTask
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneRowOneLevelMenuContent
</UL>

<P><STRONG><a name="[647]"></a>Show_SystemRestoreOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systemrestore.o(i.Show_SystemRestoreOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Show_SystemRestoreOneLevelMenuContent &rArr; Show_SystemRestoreOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SystemRestore
</UL>

<P><STRONG><a name="[649]"></a>Show_SystemRestoreOneRowOneLevelMenuArrow</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, systemrestore.o(i.Show_SystemRestoreOneRowOneLevelMenuArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = Show_SystemRestoreOneRowOneLevelMenuArrow &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreMoveCursorProcess
</UL>

<P><STRONG><a name="[648]"></a>Show_SystemRestoreOneRowOneLevelMenuContent</STRONG> (Thumb, 344 bytes, Stack size 48 bytes, systemrestore.o(i.Show_SystemRestoreOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_SystemRestoreOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreUserName
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreIndex
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFillSpecifyChar
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreMoveCursorProcess
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneLevelMenuContent
</UL>

<P><STRONG><a name="[675]"></a>SystemRestoreCheckManagerPasswordProcess</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, systemrestore.o(i.SystemRestoreCheckManagerPasswordProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemRestoreCheckManagerPasswordProcess &rArr; TestManagerPassword &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestManagerPassword
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
</UL>

<P><STRONG><a name="[676]"></a>SystemRestoreCheckSystemPasswordProcess</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, systemrestore.o(i.SystemRestoreCheckSystemPasswordProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemRestoreCheckSystemPasswordProcess &rArr; TestUserPassword &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestUserPassword
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestManagerPassword
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
</UL>

<P><STRONG><a name="[4b7]"></a>SystemRestoreConfig</STRONG> (Thumb, 308 bytes, Stack size 8 bytes, systemrestore.o(i.SystemRestoreConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemRestoreConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[677]"></a>SystemRestoreFromSDProcess</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, systemrestore.o(i.SystemRestoreFromSDProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = SystemRestoreFromSDProcess &rArr; prv_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_save
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_read
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_read
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_read
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_recover
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_recover
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_recover
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrvRecoverWithDate
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrmRecoverWithDate
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcmRecoverWithDate
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreUserName
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
</UL>

<P><STRONG><a name="[67b]"></a>SystemRestoreFromUSBProcess</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, systemrestore.o(i.SystemRestoreFromUSBProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = SystemRestoreFromUSBProcess &rArr; prv_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_save
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_read
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_read
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_save
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_read
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_USB_Status
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prv_recover
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_recover
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcm_recover
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreUserName
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
</UL>

<P><STRONG><a name="[67d]"></a>SystemRestoreIndexUpdate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, systemrestore.o(i.SystemRestoreIndexUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreUpdateStatus
</UL>

<P><STRONG><a name="[4b6]"></a>SystemRestoreInit</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, systemrestore.o(i.SystemRestoreInit))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[4bf]"></a>SystemRestoreKeyProcess</STRONG> (Thumb, 1074 bytes, Stack size 24 bytes, systemrestore.o(i.SystemRestoreKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1724<LI>Call Chain = SystemRestoreKeyProcess &rArr; LoadTwoLevelMenuPage &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTwoLevelMenuAddr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreUpdateStatus
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromUSBProcess
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreFromSDProcess
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreCheckSystemPasswordProcess
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreCheckManagerPasswordProcess
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneRowOneLevelMenuContent
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreUserName
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[4c0]"></a>SystemRestoreLeavePageCheckCycle</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, systemrestore.o(i.SystemRestoreLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = SystemRestoreLeavePageCheckCycle &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSoftwareReset
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[4bd]"></a>SystemRestoreMoveCursorProcess</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, systemrestore.o(i.SystemRestoreMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = SystemRestoreMoveCursorProcess &rArr; Show_SystemRestoreOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneRowOneLevelMenuContent
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneRowOneLevelMenuArrow
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_SystemRestoreOneRowOneLevelMenuArrow
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[4bb]"></a>SystemRestoreMoveIndexProcess</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, systemrestore.o(i.SystemRestoreMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SystemRestoreMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[4ba]"></a>SystemRestorePutinProcess</STRONG> (Thumb, 324 bytes, Stack size 16 bytes, systemrestore.o(i.SystemRestorePutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = SystemRestorePutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[4b8]"></a>SystemRestoreReadParameter</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, systemrestore.o(i.SystemRestoreReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemRestoreReadParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[4be]"></a>SystemRestoreShortcutCycleTask</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, systemrestore.o(i.SystemRestoreShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = SystemRestoreShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreUserName
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[4bc]"></a>SystemRestoreStatusProcess</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, systemrestore.o(i.SystemRestoreStatusProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemRestoreStatusProcess &rArr; GetSystemRestoreUserName
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreUserName
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRestoreIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[67c]"></a>SystemRestoreUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, systemrestore.o(i.SystemRestoreUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemRestoreUpdateStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreIndexUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRestoreKeyProcess
</UL>

<P><STRONG><a name="[4b9]"></a>Traverse_SystemRestore</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, systemrestore.o(i.Traverse_SystemRestore))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = Traverse_SystemRestore &rArr; Show_SystemRestoreOneLevelMenuContent &rArr; Show_SystemRestoreOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemRestoreOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemRestorePage
</UL>

<P><STRONG><a name="[374]"></a>ConfigSystemInfomationParameterRectangleFrameCoordinate</STRONG> (Thumb, 284 bytes, Stack size 12 bytes, systeminfomation.o(i.ConfigSystemInfomationParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ConfigSystemInfomationParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomation
</UL>

<P><STRONG><a name="[373]"></a>GUI_SystemInfomation</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, systeminfomation.o(i.GUI_SystemInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_SystemInfomation &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomationRectangleFrame
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomationOneLevelMenu
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigSystemInfomationParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfomationPage
</UL>

<P><STRONG><a name="[377]"></a>GUI_SystemInfomationDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, systeminfomation.o(i.GUI_SystemInfomationDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_SystemInfomationDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomationRectangleFrame
</UL>

<P><STRONG><a name="[378]"></a>GUI_SystemInfomationDrawOneRowOneLevelMenu</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, systeminfomation.o(i.GUI_SystemInfomationDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_SystemInfomationDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomationOneLevelMenu
</UL>

<P><STRONG><a name="[376]"></a>GUI_SystemInfomationOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systeminfomation.o(i.GUI_SystemInfomationOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_SystemInfomationOneLevelMenu &rArr; GUI_SystemInfomationDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomationDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomation
</UL>

<P><STRONG><a name="[375]"></a>GUI_SystemInfomationRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systeminfomation.o(i.GUI_SystemInfomationRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_SystemInfomationRectangleFrame &rArr; GUI_SystemInfomationDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomationDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SystemInfomation
</UL>

<P><STRONG><a name="[66c]"></a>GetSystemInfomationIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, systeminfomation.o(i.GetSystemInfomationIndex))
<BR><BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInfomationReadParameter
</UL>

<P><STRONG><a name="[644]"></a>Show_SystemInfomationOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systeminfomation.o(i.Show_SystemInfomationOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_SystemInfomationOneLevelMenuContent &rArr; Show_SystemInfomationOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemInfomationOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_SystemInfomation
</UL>

<P><STRONG><a name="[645]"></a>Show_SystemInfomationOneRowOneLevelMenuContent</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, systeminfomation.o(i.Show_SystemInfomationOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_SystemInfomationOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemInfomationOneLevelMenuContent
</UL>

<P><STRONG><a name="[4a7]"></a>SystemInfomationConfig</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, systeminfomation.o(i.SystemInfomationConfig))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfomationPage
</UL>

<P><STRONG><a name="[4a6]"></a>SystemInfomationInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, systeminfomation.o(i.SystemInfomationInit))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfomationPage
</UL>

<P><STRONG><a name="[4aa]"></a>SystemInfomationKeyProcess</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, systeminfomation.o(i.SystemInfomationKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInfomationKeyProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfomationPage
</UL>

<P><STRONG><a name="[4ab]"></a>SystemInfomationLeavePageCheckCycle</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systeminfomation.o(i.SystemInfomationLeavePageCheckCycle))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfomationPage
</UL>

<P><STRONG><a name="[4a8]"></a>SystemInfomationReadParameter</STRONG> (Thumb, 478 bytes, Stack size 56 bytes, systeminfomation.o(i.SystemInfomationReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1716<LI>Call Chain = SystemInfomationReadParameter &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCM_CmdSendCycle
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2str_32
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDeviceID
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devc_token_get
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2str_16
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_free_space
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_device_version_pkg
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrmReplyStatus
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrmReplyAddr
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemInfomationIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfomationPage
</UL>

<P><STRONG><a name="[4a9]"></a>Traverse_SystemInfomation</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, systeminfomation.o(i.Traverse_SystemInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_SystemInfomation &rArr; Show_SystemInfomationOneLevelMenuContent &rArr; Show_SystemInfomationOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SystemInfomationOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfomationPage
</UL>

<P><STRONG><a name="[314]"></a>ConfigHardTestChannelRectangleFrameCoordinate</STRONG> (Thumb, 538 bytes, Stack size 20 bytes, hardtest.o(i.ConfigHardTestChannelRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigHardTestChannelRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTest
</UL>

<P><STRONG><a name="[317]"></a>ConfigHardTestLimitParameterRectangleFrameCoordinate</STRONG> (Thumb, 284 bytes, Stack size 20 bytes, hardtest.o(i.ConfigHardTestLimitParameterRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigHardTestLimitParameterRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTest
</UL>

<P><STRONG><a name="[1ff]"></a>DataInteractionWithPRM</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, hardtest.o(i.DataInteractionWithPRM))
<BR><BR>[Stack]<UL><LI>Max Depth = 1668<LI>Call Chain = DataInteractionWithPRM &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_StartTimer
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCM_CmdSendCycle
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_send_start_pkg
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCodeFromPrm
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshHardTest
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputDataFromPrm
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
</UL>

<P><STRONG><a name="[313]"></a>GUI_HardTest</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, hardtest.o(i.GUI_HardTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_HardTest &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestLimitFrame
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestLimitRectangleFrame
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestLimitOneLevelMenu
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestChannelRectangleFrame
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestChannelOneLevelMenu
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigHardTestLimitParameterRectangleFrameCoordinate
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigHardTestChannelRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
</UL>

<P><STRONG><a name="[316]"></a>GUI_HardTestChannelOneLevelMenu</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, hardtest.o(i.GUI_HardTestChannelOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_HardTestChannelOneLevelMenu &rArr; GUI_HardTestDrawChannelUpOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestDrawChannelUpOneRowOneLevelMenu
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestDrawChannelLeftOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTest
</UL>

<P><STRONG><a name="[315]"></a>GUI_HardTestChannelRectangleFrame</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, hardtest.o(i.GUI_HardTestChannelRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_HardTestChannelRectangleFrame &rArr; GUI_HardTestDrawOneChannelRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestDrawOneChannelRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTest
</UL>

<P><STRONG><a name="[31c]"></a>GUI_HardTestDrawChannelLeftOneRowOneLevelMenu</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, hardtest.o(i.GUI_HardTestDrawChannelLeftOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_HardTestDrawChannelLeftOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestChannelOneLevelMenu
</UL>

<P><STRONG><a name="[31b]"></a>GUI_HardTestDrawChannelUpOneRowOneLevelMenu</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, hardtest.o(i.GUI_HardTestDrawChannelUpOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_HardTestDrawChannelUpOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestChannelOneLevelMenu
</UL>

<P><STRONG><a name="[31e]"></a>GUI_HardTestDrawLimitOneRowOneLevelMenu</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, hardtest.o(i.GUI_HardTestDrawLimitOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_HardTestDrawLimitOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestLimitOneLevelMenu
</UL>

<P><STRONG><a name="[31d]"></a>GUI_HardTestDrawOneChannelRectangleFrame</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, hardtest.o(i.GUI_HardTestDrawOneChannelRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_HardTestDrawOneChannelRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestChannelRectangleFrame
</UL>

<P><STRONG><a name="[31f]"></a>GUI_HardTestDrawOneLimitRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, hardtest.o(i.GUI_HardTestDrawOneLimitRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_HardTestDrawOneLimitRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestLimitRectangleFrame
</UL>

<P><STRONG><a name="[31a]"></a>GUI_HardTestLimitOneLevelMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hardtest.o(i.GUI_HardTestLimitOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_HardTestLimitOneLevelMenu &rArr; GUI_HardTestDrawLimitOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestDrawLimitOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTest
</UL>

<P><STRONG><a name="[319]"></a>GUI_HardTestLimitRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hardtest.o(i.GUI_HardTestLimitRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_HardTestLimitRectangleFrame &rArr; GUI_HardTestDrawOneLimitRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTestDrawOneLimitRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HardTest
</UL>

<P><STRONG><a name="[3bb]"></a>GetHardTestChannelIndex</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hardtest.o(i.GetHardTestChannelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCodeFromPrm
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshHardTest
</UL>

<P><STRONG><a name="[5c1]"></a>GetHardTestLimitIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hardtest.o(i.GetHardTestLimitIndex))
<BR><BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHardTestChnLimit
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshHardTest
</UL>

<P><STRONG><a name="[201]"></a>GetInputDataFromPrm</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, hardtest.o(i.GetInputDataFromPrm))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetInputDataFromPrm &rArr; SetHardTestChnLimit
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSampleAddr
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHardTestChnLimit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInteractionWithPRM
</UL>

<P><STRONG><a name="[453]"></a>HardTestConfig</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, hardtest.o(i.HardTestConfig))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
</UL>

<P><STRONG><a name="[452]"></a>HardTestInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hardtest.o(i.HardTestInit))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
</UL>

<P><STRONG><a name="[3dd]"></a>HardTestKeyProcess</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, hardtest.o(i.HardTestKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = HardTestKeyProcess &rArr; SendTareCmdInteractionTask &rArr; SendChannelTareCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendTareCmdInteractionTask
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
</UL>

<P><STRONG><a name="[3df]"></a>HardTestLeavePageCheckCycle</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, hardtest.o(i.HardTestLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = HardTestLeavePageCheckCycle &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCM_CmdSendCycle
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_send_start_pkg
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
</UL>

<P><STRONG><a name="[3e0]"></a>HardTestReadParameter</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, hardtest.o(i.HardTestReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HardTestReadParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
</UL>

<P><STRONG><a name="[203]"></a>RefreshHardTest</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, hardtest.o(i.RefreshHardTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = RefreshHardTest &rArr; Show_HardTestLimitOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_HardTestLimitOneRowOneLevelMenuContent
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_HardTestChannelOneRowOneLevelMenuContent
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHardTestLimitIndex
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHardTestChannelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInteractionWithPRM
</UL>

<P><STRONG><a name="[3de]"></a>SendTareCmdInteractionTask</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hardtest.o(i.SendTareCmdInteractionTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1692<LI>Call Chain = SendTareCmdInteractionTask &rArr; SendChannelTareCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChannelTareCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardTestKeyProcess
</UL>

<P><STRONG><a name="[3c0]"></a>SetHardTestChnLimit</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, hardtest.o(i.SetHardTestChnLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetHardTestChnLimit
</UL>
<BR>[Calls]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHardTestLimitIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputDataFromPrm
</UL>

<P><STRONG><a name="[634]"></a>Show_HardTestChannelOneLevelMenuContent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, hardtest.o(i.Show_HardTestChannelOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_HardTestChannelOneLevelMenuContent &rArr; Show_HardTestChannelOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_HardTestChannelOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_HardTest
</UL>

<P><STRONG><a name="[5c0]"></a>Show_HardTestChannelOneRowOneLevelMenuContent</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, hardtest.o(i.Show_HardTestChannelOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = Show_HardTestChannelOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_HardTestChannelOneLevelMenuContent
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshHardTest
</UL>

<P><STRONG><a name="[635]"></a>Show_HardTestLimitOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hardtest.o(i.Show_HardTestLimitOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_HardTestLimitOneLevelMenuContent &rArr; Show_HardTestLimitOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_HardTestLimitOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_HardTest
</UL>

<P><STRONG><a name="[5c2]"></a>Show_HardTestLimitOneRowOneLevelMenuContent</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, hardtest.o(i.Show_HardTestLimitOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = Show_HardTestLimitOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_HardTestLimitOneLevelMenuContent
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshHardTest
</UL>

<P><STRONG><a name="[454]"></a>Traverse_HardTest</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hardtest.o(i.Traverse_HardTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_HardTest &rArr; Show_HardTestChannelOneLevelMenuContent &rArr; Show_HardTestChannelOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_HardTestLimitOneLevelMenuContent
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_HardTestChannelOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHardTestPage
</UL>

<P><STRONG><a name="[320]"></a>GUI_LinkMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, linkmode.o(i.GUI_LinkMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = GUI_LinkMode &rArr; GUI_LinkModeCue &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LinkModeCue
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLinkModePage
</UL>

<P><STRONG><a name="[321]"></a>GUI_LinkModeCue</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, linkmode.o(i.GUI_LinkModeCue))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = GUI_LinkModeCue &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsWithoutOperate
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LinkMode
</UL>

<P><STRONG><a name="[6bf]"></a>GetUSARTPackageSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, linkmode.o(i.GetUSARTPackageSize))
<BR><BR>[Called By]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendPackage
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
</UL>

<P><STRONG><a name="[6ae]"></a>GetUdpPackageSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, linkmode.o(i.GetUdpPackageSize))
<BR><BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetPackageCycle
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
</UL>

<P><STRONG><a name="[432]"></a>LinkHandlerConvCore</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, linkmode.o(i.LinkHandlerConvCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 1356<LI>Call Chain = LinkHandlerConvCore &rArr; UDP_GetPackageCycle &rArr; USART_SendPackage &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetPackageCycle
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkDisConnectProcess
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLinkModePage
</UL>

<P><STRONG><a name="[456]"></a>LinkModeConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, linkmode.o(i.LinkModeConfig))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLinkModePage
</UL>

<P><STRONG><a name="[455]"></a>LinkModeInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, linkmode.o(i.LinkModeInit))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLinkModePage
</UL>

<P><STRONG><a name="[436]"></a>LinkModeKeyProcess</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, linkmode.o(i.LinkModeKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LinkModeKeyProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLinkModePage
</UL>

<P><STRONG><a name="[437]"></a>LinkModeLeavePageCheckCycle</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, linkmode.o(i.LinkModeLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LinkModeLeavePageCheckCycle
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSoftwareReset
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLinkModePage
</UL>

<P><STRONG><a name="[439]"></a>LinkModeShortcutCycleTask</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, linkmode.o(i.LinkModeShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = LinkModeShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLinkModePage
</UL>

<P><STRONG><a name="[435]"></a>NetworkDisConnectProcess</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, linkmode.o(i.NetworkDisConnectProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = NetworkDisConnectProcess &rArr; GetEthLinkStatus &rArr; ETH_ReadPHYRegister &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEthLinkStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkHandlerConvCore
</UL>

<P><STRONG><a name="[6ab]"></a>UDPConvUSARTFormate</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, linkmode.o(i.UDPConvUSARTFormate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UDPConvUSARTFormate &rArr; get_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc16
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetPackageCycle
</UL>

<P><STRONG><a name="[144]"></a>UDP_Check</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, linkmode.o(i.UDP_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UDP_Check &rArr; get_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLinkStatus
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetPackageCycle
</UL>

<P><STRONG><a name="[145]"></a>UDP_GetCmd</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, linkmode.o(i.UDP_GetCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UDP_GetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLinkStatus
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetPackageCycle
</UL>

<P><STRONG><a name="[433]"></a>UDP_GetPackageCycle</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, linkmode.o(i.UDP_GetPackageCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1348<LI>Call Chain = UDP_GetPackageCycle &rArr; USART_SendPackage &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendPackage
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetCmd
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_Check
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDPConvUSARTFormate
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUdpPackageSize
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_SetUntreatedDataStatus
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_IsFindUntreatedData
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetDataLen
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEthernetRxDataAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkHandlerConvCore
</UL>

<P><STRONG><a name="[6b5]"></a>USARTConvUDPFormate</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, linkmode.o(i.USARTConvUDPFormate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USARTConvUDPFormate &rArr; get_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc16
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetPackageCycle
</UL>

<P><STRONG><a name="[6ad]"></a>USART_SendPackage</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, linkmode.o(i.USART_SendPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332<LI>Call Chain = USART_SendPackage &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUSARTPackageSize
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComSend
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_GetPackageCycle
</UL>

<P><STRONG><a name="[34a]"></a>ConfigPasswordRectangleFrameCoordinate</STRONG> (Thumb, 286 bytes, Stack size 20 bytes, userlogin.o(i.ConfigPasswordRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigPasswordRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Password
</UL>

<P><STRONG><a name="[349]"></a>GUI_Password</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, userlogin.o(i.GUI_Password))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_Password &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PasswordRectangleFrame
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PasswordOneLevelMenu
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigPasswordRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[34d]"></a>GUI_PasswordDrawOneRectangleFrame</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, userlogin.o(i.GUI_PasswordDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_PasswordDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PasswordRectangleFrame
</UL>

<P><STRONG><a name="[34e]"></a>GUI_PasswordDrawOneRowOneLevelMenu</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, userlogin.o(i.GUI_PasswordDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = GUI_PasswordDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PasswordOneLevelMenu
</UL>

<P><STRONG><a name="[34c]"></a>GUI_PasswordOneLevelMenu</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, userlogin.o(i.GUI_PasswordOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_PasswordOneLevelMenu &rArr; GUI_PasswordDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPasswordIndex
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PasswordDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Password
</UL>

<P><STRONG><a name="[34b]"></a>GUI_PasswordRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, userlogin.o(i.GUI_PasswordRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_PasswordRectangleFrame &rArr; GUI_PasswordDrawOneRectangleFrame &rArr; GUI_DrawRectangleFrame &rArr; lcd_draw_rect &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PasswordDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Password
</UL>

<P><STRONG><a name="[34f]"></a>GetPasswordIndex</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, userlogin.o(i.GetPasswordIndex))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordReadParameter
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PasswordOneLevelMenu
</UL>

<P><STRONG><a name="[476]"></a>LoadPasswordPage</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, userlogin.o(i.LoadPasswordPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = LoadPasswordPage &rArr; PasswordPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_Password
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordReadParameter
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordPutinProcess
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordParameterConfig
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordMoveIndexProcess
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordMoveCursorProcess
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordLeavePageCheckCycle
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordInit
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Password
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestrainLoadPasswordPage
</UL>

<P><STRONG><a name="[477]"></a>PasswordInit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, userlogin.o(i.PasswordInit))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[47e]"></a>PasswordKeyProcess</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, userlogin.o(i.PasswordKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = PasswordKeyProcess &rArr; floattochar &rArr; float2str &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinStatus
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinIntDataAddr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinFloatDataAddr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinCharDataAddr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numtochar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floattochar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordUpdateStatus
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordProcess
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPasswordIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[47f]"></a>PasswordLeavePageCheckCycle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, userlogin.o(i.PasswordLeavePageCheckCycle))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[47d]"></a>PasswordMoveCursorProcess</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, userlogin.o(i.PasswordMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = PasswordMoveCursorProcess &rArr; Show_PasswordDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_PasswordDataOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[47c]"></a>PasswordMoveIndexProcess</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, userlogin.o(i.PasswordMoveIndexProcess))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[478]"></a>PasswordParameterConfig</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, userlogin.o(i.PasswordParameterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[57a]"></a>PasswordProcess</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, userlogin.o(i.PasswordProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PasswordProcess &rArr; SetPopWindowsInfomation
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestUserPassword
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestManagerPassword
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
</UL>

<P><STRONG><a name="[47b]"></a>PasswordPutinProcess</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, userlogin.o(i.PasswordPutinProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = PasswordPutinProcess &rArr; KeyPutinChars &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPutinAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[479]"></a>PasswordReadParameter</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, userlogin.o(i.PasswordReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PasswordReadParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPasswordIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[57b]"></a>PasswordUpdateStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, userlogin.o(i.PasswordUpdateStatus))
<BR><BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordKeyProcess
</UL>

<P><STRONG><a name="[63e]"></a>Show_PasswordDataOneLevelMenuContent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, userlogin.o(i.Show_PasswordDataOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = Show_PasswordDataOneLevelMenuContent &rArr; Show_PasswordDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_PasswordDataOneRowOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Traverse_Password
</UL>

<P><STRONG><a name="[57c]"></a>Show_PasswordDataOneRowOneLevelMenuContent</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, userlogin.o(i.Show_PasswordDataOneRowOneLevelMenuContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = Show_PasswordDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_PasswordDataOneLevelMenuContent
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordMoveCursorProcess
</UL>

<P><STRONG><a name="[47a]"></a>Traverse_Password</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, userlogin.o(i.Traverse_Password))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = Traverse_Password &rArr; Show_PasswordDataOneLevelMenuContent &rArr; Show_PasswordDataOneRowOneLevelMenuContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_PasswordDataOneLevelMenuContent
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPasswordPage
</UL>

<P><STRONG><a name="[447]"></a>ChannelSelectConfig</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, channelselect.o(i.ChannelSelectConfig))
<BR><BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
</UL>

<P><STRONG><a name="[446]"></a>ChannelSelectInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, channelselect.o(i.ChannelSelectInit))
<BR><BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
</UL>

<P><STRONG><a name="[131]"></a>ChannelSelectKeyProcess</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, channelselect.o(i.ChannelSelectKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ChannelSelectKeyProcess &rArr; ChannelSelectShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectShortcutCheckCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
</UL>

<P><STRONG><a name="[133]"></a>ChannelSelectLeavePageCheckCycle</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, channelselect.o(i.ChannelSelectLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ChannelSelectLeavePageCheckCycle
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
</UL>

<P><STRONG><a name="[134]"></a>ChannelSelectMoveCursorProcess</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, channelselect.o(i.ChannelSelectMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 788<LI>Call Chain = ChannelSelectMoveCursorProcess &rArr; GUI_ChannelSelectDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChannelSelectDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
</UL>

<P><STRONG><a name="[136]"></a>ChannelSelectMoveIndexProcess</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, channelselect.o(i.ChannelSelectMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ChannelSelectMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
</UL>

<P><STRONG><a name="[137]"></a>ChannelSelectReadParameter</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, channelselect.o(i.ChannelSelectReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ChannelSelectReadParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelSelectIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
</UL>

<P><STRONG><a name="[132]"></a>ChannelSelectShortcutCheckCycle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, channelselect.o(i.ChannelSelectShortcutCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChannelSelectShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressNum
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectKeyProcess
</UL>

<P><STRONG><a name="[2de]"></a>ConfigChannelSelectRectangleFrameCoordinate</STRONG> (Thumb, 268 bytes, Stack size 20 bytes, channelselect.o(i.ConfigChannelSelectRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigChannelSelectRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChannelSelect
</UL>

<P><STRONG><a name="[2dd]"></a>GUI_ChannelSelect</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, channelselect.o(i.GUI_ChannelSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_ChannelSelect &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChannelSelectRectangleFrame
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigChannelSelectRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadChannelSelectPage
</UL>

<P><STRONG><a name="[135]"></a>GUI_ChannelSelectDrawOneRectangleFrame</STRONG> (Thumb, 214 bytes, Stack size 56 bytes, channelselect.o(i.GUI_ChannelSelectDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 780<LI>Call Chain = GUI_ChannelSelectDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr32At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChannelSelectRectangleFrame
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectMoveCursorProcess
</UL>

<P><STRONG><a name="[2df]"></a>GUI_ChannelSelectRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, channelselect.o(i.GUI_ChannelSelectRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 788<LI>Call Chain = GUI_ChannelSelectRectangleFrame &rArr; GUI_ChannelSelectDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChannelSelectDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChannelSelect
</UL>

<P><STRONG><a name="[138]"></a>GetChannelSelectIndex</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, channelselect.o(i.GetChannelSelectIndex))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectReadParameter
</UL>

<P><STRONG><a name="[445]"></a>LoadChannelSelectPage</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, channelselect.o(i.LoadChannelSelectPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = LoadChannelSelectPage &rArr; PopWindowsProcessCycle &rArr; PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectOpen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLightEffectClose
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChannelSelect
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectReadParameter
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectMoveIndexProcess
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectMoveCursorProcess
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectLeavePageCheckCycle
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectKeyProcess
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectInit
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSelectConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestrainLoadChannelSelectPage
</UL>

<P><STRONG><a name="[3a3]"></a>ConfigTestTypeSelectRectangleFrameCoordinate</STRONG> (Thumb, 268 bytes, Stack size 20 bytes, testtypeselect.o(i.ConfigTestTypeSelectRectangleFrameCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ConfigTestTypeSelectRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestTypeSelect
</UL>

<P><STRONG><a name="[3a2]"></a>GUI_TestTypeSelect</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, testtypeselect.o(i.GUI_TestTypeSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_TestTypeSelect &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestTypeSelectRectangleFrame
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTestTypeSelectRectangleFrameCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
</UL>

<P><STRONG><a name="[3a5]"></a>GUI_TestTypeSelectDrawOneRectangleFrame</STRONG> (Thumb, 214 bytes, Stack size 56 bytes, testtypeselect.o(i.GUI_TestTypeSelectDrawOneRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 780<LI>Call Chain = GUI_TestTypeSelectDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr32At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectMoveCursorProcess
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestTypeSelectRectangleFrame
</UL>

<P><STRONG><a name="[3a4]"></a>GUI_TestTypeSelectRectangleFrame</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, testtypeselect.o(i.GUI_TestTypeSelectRectangleFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 788<LI>Call Chain = GUI_TestTypeSelectRectangleFrame &rArr; GUI_TestTypeSelectDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestTypeSelectDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestTypeSelect
</UL>

<P><STRONG><a name="[4ef]"></a>TestTypeSelectConfig</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, testtypeselect.o(i.TestTypeSelectConfig))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
</UL>

<P><STRONG><a name="[4ee]"></a>TestTypeSelectInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, testtypeselect.o(i.TestTypeSelectInit))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
</UL>

<P><STRONG><a name="[4f4]"></a>TestTypeSelectKeyProcess</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, testtypeselect.o(i.TestTypeSelectKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TestTypeSelectKeyProcess &rArr; TestTypeSelectShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectShortcutCheckCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
</UL>

<P><STRONG><a name="[4f5]"></a>TestTypeSelectLeavePageCheckCycle</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, testtypeselect.o(i.TestTypeSelectLeavePageCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TestTypeSelectLeavePageCheckCycle
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
</UL>

<P><STRONG><a name="[4f2]"></a>TestTypeSelectMoveCursorProcess</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, testtypeselect.o(i.TestTypeSelectMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 788<LI>Call Chain = TestTypeSelectMoveCursorProcess &rArr; GUI_TestTypeSelectDrawOneRectangleFrame &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TestTypeSelectDrawOneRectangleFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
</UL>

<P><STRONG><a name="[4f1]"></a>TestTypeSelectMoveIndexProcess</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, testtypeselect.o(i.TestTypeSelectMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TestTypeSelectMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
</UL>

<P><STRONG><a name="[4f0]"></a>TestTypeSelectReadParameter</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, testtypeselect.o(i.TestTypeSelectReadParameter))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
</UL>

<P><STRONG><a name="[4f3]"></a>TestTypeSelectShortcutCheckCycle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, testtypeselect.o(i.TestTypeSelectShortcutCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TestTypeSelectShortcutCheckCycle &rArr; GetPressNum
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressNum
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTestTypeSelectPage
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTypeSelectKeyProcess
</UL>

<P><STRONG><a name="[44e]"></a>CurveShowConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, curveshow.o(i.CurveShowConfig))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCurveShowPage
</UL>

<P><STRONG><a name="[1f0]"></a>CurveShowInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, curveshow.o(i.CurveShowInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CurveShowInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectReportTestType
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCurveShowPage
</UL>

<P><STRONG><a name="[1f2]"></a>CurveShowKeyProcess</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, curveshow.o(i.CurveShowKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CurveShowKeyProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCurveShowPage
</UL>

<P><STRONG><a name="[1f3]"></a>CurveShowReadParameter</STRONG> (Thumb, 142 bytes, Stack size 992 bytes, curveshow.o(i.CurveShowReadParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 2156<LI>Call Chain = CurveShowReadParameter &rArr; ReadCoordinatePoint &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCoordinatePoint
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectReportFileNameAddr
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_read
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCurveShowPage
</UL>

<P><STRONG><a name="[2ec]"></a>GUI_CurveShow</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, curveshow.o(i.GUI_CurveShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = GUI_CurveShow &rArr; GUI_DrawGeneralTitleRectangleFrame &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGeneralTitleRectangleFrame
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawLineAddr
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoordinateRedrawLine
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCurveShowCoordinateDrawLine
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CurveShowDrawCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCurveShowPage
</UL>

<P><STRONG><a name="[2ed]"></a>GUI_CurveShowDrawCoordinate</STRONG> (Thumb, 214 bytes, Stack size 8 bytes, curveshow.o(i.GUI_CurveShowDrawCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = GUI_CurveShowDrawCoordinate &rArr; GUI_DrawCoordinate &rArr; GUI_DispStr16At &rArr; lcd_font16 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoordinateDataAddr
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CurveShow
</UL>

<P><STRONG><a name="[2ee]"></a>InitCurveShowCoordinateDrawLine</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, curveshow.o(i.InitCurveShowCoordinateDrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InitCurveShowCoordinateDrawLine &rArr; InitCoordinateDrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCoordinateDrawLine
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawLineAddr
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoordinateDataAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CurveShow
</UL>

<P><STRONG><a name="[3e2]"></a>InitBeepTime</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, bsp_timer.o(i.InitBeepTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = InitBeepTime &rArr; TIM_TimeBaseInit &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitTimer
</UL>

<P><STRONG><a name="[743]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp_timer.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitTimer
</UL>

<P><STRONG><a name="[663]"></a>bsp_SoftTimerDec</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_SoftTimerDec))
<BR><BR>[Called By]<UL><LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>

<P><STRONG><a name="[197]"></a>UartGetChar</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, bsp_uart.o(i.UartGetChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = UartGetChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComGet
</UL>

<P><STRONG><a name="[719]"></a>UartHardInit</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, bsp_uart.o(i.UartHardInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1316<LI>Call Chain = UartHardInit &rArr; USART_Init &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitCOM
</UL>

<P><STRONG><a name="[6b4]"></a>UartIRQ</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, bsp_uart.o(i.UartIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = UartIRQ &rArr; USART_GetITStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[71a]"></a>UartNVICConfig</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, bsp_uart.o(i.UartNVICConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UartNVICConfig &rArr; NVIC_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitCOM
</UL>

<P><STRONG><a name="[199]"></a>UartPutChar</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, bsp_uart.o(i.UartPutChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComSend
</UL>

<P><STRONG><a name="[730]"></a>UartVarInit</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, bsp_uart.o(i.UartVarInit))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitCOM
</UL>

<P><STRONG><a name="[e7]"></a>BeepOff</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_io.o(i.BeepOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BeepOff &rArr; OutportTask &rArr; GPIO_SetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutportTask
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrOutportBit
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepISR
</UL>

<P><STRONG><a name="[e8]"></a>BeepOn</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_io.o(i.BeepOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BeepOn &rArr; OutportTask &rArr; GPIO_SetBits &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOutportBit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutportTask
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepISR
</UL>

<P><STRONG><a name="[3e1]"></a>InitBeep</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bsp_io.o(i.InitBeep))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitBeep &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOutport
</UL>

<P><STRONG><a name="[3ec]"></a>InitExt_74HC595</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, bsp_io.o(i.InitExt_74HC595))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitExt_74HC595 &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOutport
</UL>

<P><STRONG><a name="[3f6]"></a>InitInport</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_io.o(i.InitInport))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitInport &rArr; Init_74HC165 &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_74HC165
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitIO
</UL>

<P><STRONG><a name="[3f9]"></a>InitLamp</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bsp_io.o(i.InitLamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitLamp &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitIO
</UL>

<P><STRONG><a name="[3fb]"></a>InitOutport</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_io.o(i.InitOutport))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitOutport &rArr; InitExt_74HC595 &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitExt_74HC595
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBeep
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitIO
</UL>

<P><STRONG><a name="[3f7]"></a>Init_74HC165</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, bsp_io.o(i.Init_74HC165))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Init_74HC165 &rArr; GPIO_Init &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitInport
</UL>

<P><STRONG><a name="[71b]"></a>UartPrintChar</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp_print.o(i.UartPrintChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 1324<LI>Call Chain = UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComSend
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitPrint
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_enter
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_direct
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_chinese
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>

<P><STRONG><a name="[163]"></a>CmdError</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.CmdError))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CmdError &rArr; SDIO_GetFlagStatus &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[175]"></a>CmdResp1Error</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.CmdResp1Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetCommandResponse
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[178]"></a>CmdResp2Error</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.CmdResp2Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CmdResp2Error &rArr; SDIO_ClearFlag &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[179]"></a>CmdResp3Error</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.CmdResp3Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CmdResp3Error &rArr; SDIO_ClearFlag &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[17a]"></a>CmdResp6Error</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.CmdResp6Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CmdResp6Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetCommandResponse
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[17b]"></a>CmdResp7Error</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.CmdResp7Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CmdResp7Error &rArr; SDIO_ClearFlag &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[27e]"></a>FindSCR</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, bsp_sdio_sd.o(i.FindSCR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ReadData
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>

<P><STRONG><a name="[5ca]"></a>SDEnWideBus</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SDEnWideBus))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[72f]"></a>bsp_CfgSPIForSFlash</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, bsp_spi_flash.o(i.bsp_CfgSPIForSFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = bsp_CfgSPIForSFlash &rArr; RCC_APB1PeriphClockCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSFlash
</UL>

<P><STRONG><a name="[7e4]"></a>sf_AutoWritePage</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, bsp_spi_flash.o(i.sf_AutoWritePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332<LI>Call Chain = sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_ReadBuffer
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_PageWrite
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_EraseSector
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_NeedErase
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_CmpData
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WriteBuffer
</UL>

<P><STRONG><a name="[7e9]"></a>sf_CmpData</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bsp_spi_flash.o(i.sf_CmpData))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = sf_CmpData &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_AutoWritePage
</UL>

<P><STRONG><a name="[7e6]"></a>sf_NeedErase</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bsp_spi_flash.o(i.sf_NeedErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sf_NeedErase
</UL>
<BR>[Called By]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_AutoWritePage
</UL>

<P><STRONG><a name="[740]"></a>sf_SendByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.sf_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSFlash
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_ReadID
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_ReadBuffer
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_PageWrite
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_EraseSector
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WriteStatus
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WriteEnable
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_WaitForWriteEnd
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_CmpData
</UL>

<P><STRONG><a name="[741]"></a>sf_WaitForWriteEnd</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.sf_WaitForWriteEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = sf_WaitForWriteEnd &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSFlash
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_PageWrite
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_EraseSector
</UL>

<P><STRONG><a name="[7ea]"></a>sf_WriteEnable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.sf_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_PageWrite
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_EraseSector
</UL>

<P><STRONG><a name="[742]"></a>sf_WriteStatus</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.sf_WriteStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = sf_WriteStatus &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sf_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSFlash
</UL>

<P><STRONG><a name="[3bc]"></a>GetDataFromEthernet</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, client.o(i.GetDataFromEthernet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GetDataFromEthernet &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_client_callback
</UL>

<P><STRONG><a name="[5a4]"></a>RTC_Config</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_rtc.o(i.RTC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = RTC_Config &rArr; RCC_GetFlagStatus &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSICmd
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_BackupResetCmd
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitRTC
</UL>

<P><STRONG><a name="[1eb]"></a>CoordinateDrawLine</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, global.o(i.CoordinateDrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = CoordinateDrawLine &rArr; lcd_draw_line &rArr; lcd_draw_point &rArr; XY_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_line
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoordinateDrawLineBodyCycle
</UL>

<P><STRONG><a name="[425]"></a>AnalogKeyValue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, typewrite.o(i.AnalogKeyValue))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
</UL>

<P><STRONG><a name="[426]"></a>DeletePutinChars</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, typewrite.o(i.DeletePutinChars))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
</UL>

<P><STRONG><a name="[351]"></a>GUI_PutinReady</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, typewrite.o(i.GUI_PutinReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_PutinReady &rArr; GUI_ClearShortcutMenu &rArr; ClearShortCutMenuArea &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
</UL>

<P><STRONG><a name="[361]"></a>GUI_ShowTypewrite</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, typewrite.o(i.GUI_ShowTypewrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = GUI_ShowTypewrite &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr32At
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTypewrite
</UL>

<P><STRONG><a name="[40e]"></a>JudgePutinValidStatus</STRONG> (Thumb, 130 bytes, Stack size 4 bytes, typewrite.o(i.JudgePutinValidStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = JudgePutinValidStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
</UL>

<P><STRONG><a name="[427]"></a>PutinChar</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, typewrite.o(i.PutinChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PutinChar &rArr; bsp_StartTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_StartTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
</UL>

<P><STRONG><a name="[429]"></a>SavePutinChars</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, typewrite.o(i.SavePutinChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SavePutinChars &rArr; str2float &rArr; ustrtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str2float
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindPutcharIntIllegar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
</UL>

<P><STRONG><a name="[59a]"></a>ShiftCheckCycle</STRONG> (Thumb, 114 bytes, Stack size 4 bytes, typewrite.o(i.ShiftCheckCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ShiftCheckCycle
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
</UL>

<P><STRONG><a name="[428]"></a>ShowPutinChars</STRONG> (Thumb, 138 bytes, Stack size 72 bytes, typewrite.o(i.ShowPutinChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = ShowPutinChars &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharToChar
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
</UL>

<P><STRONG><a name="[424]"></a>ShowTypewrite</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, typewrite.o(i.ShowTypewrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = ShowTypewrite &rArr; GUI_ShowTypewrite &rArr; GUI_DispStr32At &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowTypewrite
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPutinChars
</UL>

<P><STRONG><a name="[15a]"></a>ClearTwoLevelMenuPage</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui.o(i.ClearTwoLevelMenuPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ClearTwoLevelMenuPage &rArr; lcd_fill &rArr; Geometric_Coordinate &rArr; WriteCommand &rArr; RA8875_WAITSTATUS &rArr; GPIO_ReadInputDataBit &rArr;  assert_failed (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
</UL>

<P><STRONG><a name="[1cf]"></a>ConfigSelectWindowsCoordinate</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gui.o(i.ConfigSelectWindowsCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ConfigSelectWindowsCoordinate
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
</UL>

<P><STRONG><a name="[305]"></a>GUI_DrawTwoLevelMenu</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, gui.o(i.GUI_DrawTwoLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = GUI_DrawTwoLevelMenu &rArr; GUI_ShowOneRowTwoLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrame
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowOneRowTwoLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TwoLevelMenu
</UL>

<P><STRONG><a name="[350]"></a>GUI_PopWindows</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, gui.o(i.GUI_PopWindows))
<BR><BR>[Stack]<UL><LI>Max Depth = 820<LI>Call Chain = GUI_PopWindows &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrameWithTitle
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsWithoutOperate
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCueInfomation
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessAskInfomation
</UL>

<P><STRONG><a name="[35b]"></a>GUI_SelectWindows</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, gui.o(i.GUI_SelectWindows))
<BR><BR>[Stack]<UL><LI>Max Depth = 820<LI>Call Chain = GUI_SelectWindows &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangleFrameWithTitle
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
</UL>

<P><STRONG><a name="[35c]"></a>GUI_SelectWindowsDrawOneRowOneLevelMenu</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, gui.o(i.GUI_SelectWindowsDrawOneRowOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = GUI_SelectWindowsDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectWindowsMoveCursorProcess
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectWindowsOneLevelMenu
</UL>

<P><STRONG><a name="[35d]"></a>GUI_SelectWindowsOneLevelMenu</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gui.o(i.GUI_SelectWindowsOneLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = GUI_SelectWindowsOneLevelMenu &rArr; GUI_SelectWindowsDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectWindowsDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
</UL>

<P><STRONG><a name="[306]"></a>GUI_ShowOneRowTwoLevelMenu</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, gui.o(i.GUI_ShowOneRowTwoLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = GUI_ShowOneRowTwoLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr16At
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveCursorProcess
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTwoLevelMenu
</UL>

<P><STRONG><a name="[3af]"></a>GUI_TwoLevelMenu</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui.o(i.GUI_TwoLevelMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = GUI_TwoLevelMenu &rArr; GUI_DrawTwoLevelMenu &rArr; GUI_ShowOneRowTwoLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordTwoLevelMenuPosition
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeWindowsDirection
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawTwoLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
</UL>

<P><STRONG><a name="[58c]"></a>GetErrCueInfomation</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, gui.o(i.GetErrCueInfomation))
<BR><BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
</UL>

<P><STRONG><a name="[48e]"></a>Init_SelectWindows</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui.o(i.Init_SelectWindows))
<BR><BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
</UL>

<P><STRONG><a name="[3b0]"></a>JudgeWindowsDirection</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, gui.o(i.JudgeWindowsDirection))
<BR><BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TwoLevelMenu
</UL>

<P><STRONG><a name="[480]"></a>LoadPopWindowsContent</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, gui.o(i.LoadPopWindowsContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = LoadPopWindowsContent &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStr24At
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsWithoutOperate
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCueInfomation
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessAskInfomation
</UL>

<P><STRONG><a name="[481]"></a>LoadPopWindowsShortCut</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gui.o(i.LoadPopWindowsShortCut))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = LoadPopWindowsShortCut &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCueInfomation
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessAskInfomation
</UL>

<P><STRONG><a name="[502]"></a>MoveCursorProcess</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, gui.o(i.MoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = MoveCursorProcess &rArr; GUI_ShowOneRowTwoLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowOneRowTwoLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
</UL>

<P><STRONG><a name="[501]"></a>MoveIndexProcess</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui.o(i.MoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
</UL>

<P><STRONG><a name="[585]"></a>PopWindowsProcessAskInfomation</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, gui.o(i.PopWindowsProcessAskInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = PopWindowsProcessAskInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPopWindowsShortCut
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPopWindowsContent
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PopWindows
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
</UL>

<P><STRONG><a name="[586]"></a>PopWindowsProcessCueInfomation</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui.o(i.PopWindowsProcessCueInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = PopWindowsProcessCueInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPopWindowsShortCut
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPopWindowsContent
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PopWindows
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
</UL>

<P><STRONG><a name="[588]"></a>PopWindowsProcessPrmWarningInfomation</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, gui.o(i.PopWindowsProcessPrmWarningInfomation))
<BR><BR>[Stack]<UL><LI>Max Depth = 1716<LI>Call Chain = PopWindowsProcessPrmWarningInfomation &rArr; PutinProcessCycle &rArr; ExecuteTask &rArr; SendClosePumpCmd &rArr; PCM_CmdSendCycle &rArr; comm_cycle &rArr; CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutinProcessCycle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrmReplyAddr
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_error_pkg
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_clear_error_pkg
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdRxContentProcess
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsContent
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPopWindowsShortCut
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPopWindowsContent
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetErrCueInfomation
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PopWindows
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
</UL>

<P><STRONG><a name="[589]"></a>PopWindowsWithoutOperate</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui.o(i.PopWindowsWithoutOperate))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = PopWindowsWithoutOperate &rArr; GUI_PopWindows &rArr; GUI_DrawRectangleFrameWithTitle &rArr; GUI_DispStr32Ht &rArr; lcd_font32 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearShortcutMenu
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPopWindowsContent
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PopWindows
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessCycle
</UL>

<P><STRONG><a name="[3b1]"></a>RecordTwoLevelMenuPosition</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, gui.o(i.RecordTwoLevelMenuPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RecordTwoLevelMenuPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TwoLevelMenu
</UL>

<P><STRONG><a name="[490]"></a>SelectWindowsMoveCursorProcess</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, gui.o(i.SelectWindowsMoveCursorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = SelectWindowsMoveCursorProcess &rArr; GUI_SelectWindowsDrawOneRowOneLevelMenu &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectWindowsDrawOneRowOneLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
</UL>

<P><STRONG><a name="[48f]"></a>SelectWindowsMoveIndexProcess</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui.o(i.SelectWindowsMoveIndexProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SelectWindowsMoveIndexProcess &rArr; KeyIndexManage
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIndexManage
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
</UL>

<P><STRONG><a name="[491]"></a>SelectWindowsShortcutCycleTask</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui.o(i.SelectWindowsShortcutCycleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = SelectWindowsShortcutCycleTask &rArr; ShortcutMenuTask &rArr; GUI_DispStr24At &rArr; lcd_font24 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortcutMenuTask
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShortcutMenuAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSelectWindows
</UL>

<P><STRONG><a name="[17e]"></a>SetPopWindowsContent</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui.o(i.SetPopWindowsContent))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSelectPopWindowsInfomation
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsInfomation
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPopWindowsWithoutOperate
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdRxContentProcess
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopWindowsProcessPrmWarningInfomation
</UL>

<P><STRONG><a name="[500]"></a>TwoLevelMenuInit</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, gui.o(i.TwoLevelMenuInit))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
</UL>

<P><STRONG><a name="[503]"></a>TwoLevelMenuKeyProcess</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui.o(i.TwoLevelMenuKeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TwoLevelMenuKeyProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPressKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTwoLevelMenuPage
</UL>

<P><STRONG><a name="[3ba]"></a>GetTwoMonthDays</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, tools.o(i.GetTwoMonthDays))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetTwoMonthDays
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAMonthDays
</UL>

<P><STRONG><a name="[78]"></a>compFloatData</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, tools.o(i.compFloatData))
<BR>[Address Reference Count : 1]<UL><LI> tools.o(i.FindNotMatch_Per15_Condition)
</UL>
<P><STRONG><a name="[166]"></a>CmdMutualBody</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, cmd.o(i.CmdMutualBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 1644<LI>Call Chain = CmdMutualBody &rArr; CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_StartTimer
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;index_get
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_index
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdSendBody
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdReceiveBody
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_cycle
</UL>

<P><STRONG><a name="[16c]"></a>CmdReceiveBody</STRONG> (Thumb, 336 bytes, Stack size 16 bytes, cmd.o(i.CmdReceiveBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = CmdReceiveBody &rArr; prm_save &rArr; sf_WriteBuffer &rArr; sf_AutoWritePage &rArr; sf_PageWrite &rArr; sf_WriteEnable &rArr; sf_SendByte &rArr; SPI_I2S_SendData &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prm_save
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_cmd
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpl_tab_zero_set
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_body
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reply_empty
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_tare_reply
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_error_reply
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_device_id_reply
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_device_version_reply
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdMutualBody
</UL>

<P><STRONG><a name="[167]"></a>CmdSendBody</STRONG> (Thumb, 354 bytes, Stack size 48 bytes, cmd.o(i.CmdSendBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 1636<LI>Call Chain = CmdSendBody &rArr; cmd_write_prv &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_write_prv
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_write_prm
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_switch
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_stop
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_step_norm_v
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_sign_off
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_tare
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_device_id
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_send_stop
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_send_start
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_reset
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_read_prv
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_read_prm
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_protect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_private_access
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_open_loop
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_error
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_general
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_device_version
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_ctrl_mode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_clear_error
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdMutualBody
</UL>

<P><STRONG><a name="[74d]"></a>InitSendCmd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cmd.o(i.InitSendCmd))
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_send_start_pkg
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_device_version_pkg
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_error_pkg
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_clear_error_pkg
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_switch_pkg
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_tare_pkg
</UL>

<P><STRONG><a name="[42d]"></a>LinkCmdReceiveBody</STRONG> (Thumb, 430 bytes, Stack size 24 bytes, cmd.o(i.LinkCmdReceiveBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LinkCmdReceiveBody &rArr; buffcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CheckTimer
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffcmp
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_index
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_body
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reply_empty
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePrmParameterInit
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_cycle
</UL>

<P><STRONG><a name="[430]"></a>LinkCmdSendBody</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, cmd.o(i.LinkCmdSendBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 1596<LI>Call Chain = LinkCmdSendBody &rArr; cmd_write_prm &rArr; uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_StartTimer
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLampBit
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;index_get
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_write_prm
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_send_stop
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_send_start
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_read_prm
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_cmd_sign_on
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_cycle
</UL>

<P><STRONG><a name="[42e]"></a>WritePrmParameterInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cmd.o(i.WritePrmParameterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WritePrmParameterInit
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prm
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkCmdReceiveBody
</UL>

<P><STRONG><a name="[74c]"></a>isAllowLssued</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, cmd.o(i.isAllowLssued))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = isAllowLssued
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_send_start_pkg
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_device_version_pkg
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get_error_pkg
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_clear_error_pkg
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_switch_pkg
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_tare_pkg
</UL>

<P><STRONG><a name="[74f]"></a>uart_send_package</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, cmd.o(i.uart_send_package))
<BR><BR>[Stack]<UL><LI>Max Depth = 1356<LI>Call Chain = uart_send_package &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc16
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComSend
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_write_prv
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_write_prm
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_switch
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_step_norm_v
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_sign_off
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_tare
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_set_device_id
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_send_start
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_read_prv
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_read_prm
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_protect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_private_access
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_open_loop
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_general
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_ctrl_mode
</UL>

<P><STRONG><a name="[1cc]"></a>ConfigPrinterDefaultSet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, printer.o(i.ConfigPrinterDefaultSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1340<LI>Call Chain = ConfigPrinterDefaultSet &rArr; print_direct &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_direct
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_chinese
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
</UL>

<P><STRONG><a name="[593]"></a>PrintDottedLine</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, printer.o(i.PrintDottedLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 1348<LI>Call Chain = PrintDottedLine &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_enter
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
</UL>

<P><STRONG><a name="[592]"></a>PrintRowSpace</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, printer.o(i.PrintRowSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 1348<LI>Call Chain = PrintRowSpace &rArr; print_enter &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
</UL>

<P><STRONG><a name="[594]"></a>PrintTime</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, printer.o(i.PrintTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 1372<LI>Call Chain = PrintTime &rArr; PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintWordsAndLineFeed
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
</UL>

<P><STRONG><a name="[591]"></a>PrintWordsAndLineFeed</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, printer.o(i.PrintWordsAndLineFeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 1348<LI>Call Chain = PrintWordsAndLineFeed &rArr; print &rArr; UartPrintChar &rArr; ComSend &rArr; UartPutChar &rArr; USART_ITConfig &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_enter
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintCalibrationTable
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTestReport
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintForceCalibrationResultTable
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
</UL>

<P><STRONG><a name="[257]"></a>ETH_Delay</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, stm32f4x7_eth.o(i.ETH_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ETH_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
</UL>

<P><STRONG><a name="[66f]"></a>SetSysClock</STRONG> (Thumb, 220 bytes, Stack size 12 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[744]"></a>check_fs</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[758]"></a>chk_chr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ff.o(i.chk_chr))
<BR><BR>[Called By]<UL><LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[793]"></a>clmt_clust</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ff.o(i.clmt_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = clmt_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>

<P><STRONG><a name="[750]"></a>cmp_lfn</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, ff.o(i.cmp_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cmp_lfn
</UL>
<BR>[Calls]<UL><LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[753]"></a>create_chain</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[756]"></a>create_name</STRONG> (Thumb, 534 bytes, Stack size 56 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = create_name &rArr; mem_set
</UL>
<BR>[Calls]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
</UL>
<BR>[Called By]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[75e]"></a>dir_alloc</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ff.o(i.dir_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = dir_alloc &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[761]"></a>dir_find</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, ff.o(i.dir_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[760]"></a>dir_next</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[766]"></a>dir_read</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, ff.o(i.dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[768]"></a>dir_register</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_lfn
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[76c]"></a>dir_remove</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, ff.o(i.dir_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = dir_remove &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
</UL>

<P><STRONG><a name="[75f]"></a>dir_sdi</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[791]"></a>find_volume</STRONG> (Thumb, 900 bytes, Stack size 88 bytes, ff.o(i.find_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[76b]"></a>fit_lfn</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, ff.o(i.fit_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fit_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[795]"></a>follow_path</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
</UL>

<P><STRONG><a name="[76a]"></a>gen_numname</STRONG> (Thumb, 176 bytes, Stack size 64 bytes, ff.o(i.gen_numname))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gen_numname &rArr; mem_cpy
</UL>
<BR>[Calls]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[79b]"></a>get_fileinfo</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, ff.o(i.get_fileinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_fileinfo &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[799]"></a>get_ldnumber</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ff.o(i.get_ldnumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[79a]"></a>ld_clust</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ff.o(i.ld_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[763]"></a>mem_cmp</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, ff.o(i.mem_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[769]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ff.o(i.mem_cpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[759]"></a>mem_set</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, ff.o(i.mem_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[745]"></a>move_window</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[767]"></a>pick_lfn</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, ff.o(i.pick_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pick_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[797]"></a>remove_chain</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
</UL>

<P><STRONG><a name="[796]"></a>st_clust</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.st_clust))
<BR><BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[762]"></a>sum_sfn</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, ff.o(i.sum_sfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sum_sfn
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[798]"></a>sync_fs</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, ff.o(i.sync_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = sync_fs &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[764]"></a>sync_window</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, ff.o(i.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[78f]"></a>validate</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[7f4]"></a>tcp_kill_prio</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, tcp.o(i.tcp_kill_prio))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = tcp_kill_prio &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Called By]<UL><LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>

<P><STRONG><a name="[7f3]"></a>tcp_kill_timewait</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tcp.o(i.tcp_kill_timewait))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = tcp_kill_timewait &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Called By]<UL><LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>

<P><STRONG><a name="[9f]"></a>tcp_recv_null</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, tcp.o(i.tcp_recv_null))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = tcp_recv_null &rArr; tcp_close &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcp.o(i.tcp_alloc)
</UL>
<P><STRONG><a name="[7fd]"></a>tcp_listen_input</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, tcp_in.o(i.tcp_listen_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Called By]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[801]"></a>tcp_parseopt</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, tcp_in.o(i.tcp_parseopt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tcp_parseopt &rArr; ntohs
</UL>
<BR>[Calls]<UL><LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
</UL>

<P><STRONG><a name="[7fe]"></a>tcp_process</STRONG> (Thumb, 1426 bytes, Stack size 32 bytes, tcp_in.o(i.tcp_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = tcp_process &rArr; tcp_receive &rArr; tcp_rexmit &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Called By]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[805]"></a>tcp_receive</STRONG> (Thumb, 1772 bytes, Stack size 48 bytes, tcp_in.o(i.tcp_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = tcp_receive &rArr; tcp_rexmit &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[7fc]"></a>tcp_timewait_input</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, tcp_in.o(i.tcp_timewait_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = tcp_timewait_input &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[802]"></a>tcp_output_segment</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, tcp_out.o(i.tcp_output_segment))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htonl
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
</UL>
<BR>[Called By]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[800]"></a>tcp_output_set_header</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, tcp_out.o(i.tcp_output_set_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tcp_output_set_header &rArr; ntohs
</UL>
<BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htonl
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
</UL>
<BR>[Called By]<UL><LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
</UL>

<P><STRONG><a name="[7d3]"></a>plug_holes</STRONG> (Thumb, 168 bytes, Stack size 12 bytes, mem.o(i.plug_holes))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = plug_holes
</UL>
<BR>[Called By]<UL><LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
</UL>

<P><STRONG><a name="[7a9]"></a>icmp_send_response</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, icmp.o(i.icmp_send_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_time_exceeded
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
</UL>

<P><STRONG><a name="[7b1]"></a>lwip_standard_chksum</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, inet_chksum.o(i.lwip_standard_chksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
</UL>
<BR>[Called By]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pbuf
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
</UL>

<P><STRONG><a name="[7bf]"></a>ip_reass_chain_frag_into_datagram_and_validate</STRONG> (Thumb, 418 bytes, Stack size 48 bytes, ip_frag.o(i.ip_reass_chain_frag_into_datagram_and_validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ip_reass_chain_frag_into_datagram_and_validate &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
</UL>
<BR>[Called By]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[7c1]"></a>ip_reass_dequeue_datagram</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ip_frag.o(i.ip_reass_dequeue_datagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ip_reass_dequeue_datagram
</UL>
<BR>[Calls]<UL><LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[7be]"></a>ip_reass_enqueue_new_datagram</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ip_frag.o(i.ip_reass_enqueue_new_datagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = ip_reass_enqueue_new_datagram &rArr; ip_reass_remove_oldest_datagram &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[7c2]"></a>ip_reass_free_complete_datagram</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, ip_frag.o(i.ip_reass_free_complete_datagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_time_exceeded
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
</UL>

<P><STRONG><a name="[7bd]"></a>ip_reass_remove_oldest_datagram</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, ip_frag.o(i.ip_reass_remove_oldest_datagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = ip_reass_remove_oldest_datagram &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>
<BR>[Called By]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[788]"></a>etharp_raw</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, etharp.o(i.etharp_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
</UL>
<BR>[Called By]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
</UL>

<P><STRONG><a name="[782]"></a>etharp_send_ip</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, etharp.o(i.etharp_send_ip))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = etharp_send_ip
</UL>
<BR>[Calls]<UL><LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
</UL>
<BR>[Called By]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_arp_entry
</UL>

<P><STRONG><a name="[783]"></a>find_entry</STRONG> (Thumb, 506 bytes, Stack size 48 bytes, etharp.o(i.find_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = find_entry &rArr; free_etharp_q &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_etharp_q
</UL>
<BR>[Called By]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_arp_entry
</UL>

<P><STRONG><a name="[789]"></a>free_etharp_q</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, etharp.o(i.free_etharp_q))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = free_etharp_q &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_tmr
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_entry
</UL>

<P><STRONG><a name="[77c]"></a>update_arp_entry</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, etharp.o(i.update_arp_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = update_arp_entry &rArr; find_entry &rArr; free_etharp_q &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addr_isbroadcast
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_entry
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
</UL>
<BR>[Called By]<UL><LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_ip_input
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
</UL>

<P><STRONG><a name="[78c]"></a>low_level_init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, ethernetif.o(i.low_level_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = low_level_init &rArr; ETH_Start &rArr; ETH_MACTransmissionCmd &rArr; assert_failed &rArr; GUI_DispStr20At &rArr; lcd_font20 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMATxDescChecksumInsertionConfig
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMATxDescChainInit
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMARxDescReceiveITConfig
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMARxDescChainInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
</UL>

<P><STRONG><a name="[78d]"></a>low_level_input</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, ethernetif.o(i.low_level_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = low_level_input &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes
</UL>
<BR>[Calls]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_RxPkt_ChainMode
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>

<P><STRONG><a name="[9e]"></a>low_level_output</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, ethernetif.o(i.low_level_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = low_level_output &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_TxPkt_ChainMode
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GetCurrentTxBuffer
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(i.ethernetif_init)
</UL>
<P><STRONG><a name="[6e4]"></a>USBH_MSC_BOTReset</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbh_msc_core.o(i.USBH_MSC_BOTReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_MSC_BOTReset &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[14]"></a>USBH_MSC_ClassRequest</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbh_msc_core.o(i.USBH_MSC_ClassRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_MSC_ClassRequest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[6e9]"></a>USBH_MSC_GETMaxLUN</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usbh_msc_core.o(i.USBH_MSC_GETMaxLUN))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_MSC_GETMaxLUN &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[15]"></a>USBH_MSC_Handle</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, usbh_msc_core.o(i.USBH_MSC_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = USBH_MSC_Handle &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity10
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ModeSense6
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ErrorHandle
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_GETMaxLUN
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_BOTReset
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ClrFeature
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>USBH_MSC_InterfaceDeInit</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usbh_msc_core.o(i.USBH_MSC_InterfaceDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_MSC_InterfaceDeInit &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free_Channel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>USBH_MSC_InterfaceInit</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, usbh_msc_core.o(i.USBH_MSC_InterfaceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = USBH_MSC_InterfaceInit &rArr; USBH_Open_Channel &rArr; USB_OTG_HC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Open_Channel
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Alloc_Channel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[6db]"></a>USBH_HandleEnum</STRONG> (Thumb, 472 bytes, Stack size 88 bytes, usbh_core.o(i.USBH_HandleEnum))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = USBH_HandleEnum &rArr; USBH_Get_StringDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetCfg
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetAddress
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Modify_Channel
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_StringDesc
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_DevDesc
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_CfgDesc
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_ResetPort
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[6c6]"></a>USBH_GetFreeChannel</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usbh_hcs.o(i.USBH_GetFreeChannel))
<BR><BR>[Called By]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Alloc_Channel
</UL>

<P><STRONG><a name="[6cc]"></a>USBH_SubmitSetupRequest</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbh_ioreq.o(i.USBH_SubmitSetupRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_SubmitSetupRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>

<P><STRONG><a name="[6d3]"></a>USBH_ParseCfgDesc</STRONG> (Thumb, 274 bytes, Stack size 56 bytes, usbh_stdreq.o(i.USBH_ParseCfgDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBH_ParseCfgDesc &rArr; USBH_GetNextDesc
</UL>
<BR>[Calls]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetNextDesc
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseInterfaceDesc
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseEPDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_CfgDesc
</UL>

<P><STRONG><a name="[6d5]"></a>USBH_ParseDevDesc</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, usbh_stdreq.o(i.USBH_ParseDevDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_ParseDevDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_DevDesc
</UL>

<P><STRONG><a name="[702]"></a>USBH_ParseEPDesc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usbh_stdreq.o(i.USBH_ParseEPDesc))
<BR><BR>[Called By]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseCfgDesc
</UL>

<P><STRONG><a name="[701]"></a>USBH_ParseInterfaceDesc</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usbh_stdreq.o(i.USBH_ParseInterfaceDesc))
<BR><BR>[Called By]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseCfgDesc
</UL>

<P><STRONG><a name="[6d7]"></a>USBH_ParseStringDesc</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, usbh_stdreq.o(i.USBH_ParseStringDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USBH_ParseStringDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_StringDesc
</UL>

<P><STRONG><a name="[6fe]"></a>USB_OTG_USBH_handle_Disconnect_ISR</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_Disconnect_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_USBH_handle_Disconnect_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[6ff]"></a>USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[6fc]"></a>USB_OTG_USBH_handle_hc_ISR</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_hc_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHostAllChannels_intr
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_In_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[714]"></a>USB_OTG_USBH_handle_hc_n_In_ISR</STRONG> (Thumb, 1066 bytes, Stack size 40 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_hc_n_In_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[715]"></a>USB_OTG_USBH_handle_hc_n_Out_ISR</STRONG> (Thumb, 976 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_hc_n_Out_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_OTG_USBH_handle_hc_n_Out_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_DoPing
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[6fa]"></a>USB_OTG_USBH_handle_nptxfempty_ISR</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_nptxfempty_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_OTG_USBH_handle_nptxfempty_ISR &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[6fd]"></a>USB_OTG_USBH_handle_port_ISR</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_port_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = USB_OTG_USBH_handle_port_ISR &rArr; USB_OTG_ResetPort &rArr; USB_OTG_BSP_mDelay &rArr; bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_InitFSLSPClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[6fb]"></a>USB_OTG_USBH_handle_ptxfempty_ISR</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_ptxfempty_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_OTG_USBH_handle_ptxfempty_ISR &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[6f9]"></a>USB_OTG_USBH_handle_rx_qlvl_ISR</STRONG> (Thumb, 356 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_rx_qlvl_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_OTG_USBH_handle_rx_qlvl_ISR &rArr; USB_OTG_ReadPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[6f8]"></a>USB_OTG_USBH_handle_sof_ISR</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_sof_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_USBH_handle_sof_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[707]"></a>USB_OTG_CoreReset</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_CoreReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_OTG_CoreReset &rArr; USB_OTG_BSP_uDelay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>

<P><STRONG><a name="[70f]"></a>USB_OTG_EnableCommonInt</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_EnableCommonInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_EnableCommonInt
</UL>
<BR>[Called By]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableHostInt
</UL>

<P><STRONG><a name="[725]"></a>_fp_digits</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[724]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[727]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[726]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
